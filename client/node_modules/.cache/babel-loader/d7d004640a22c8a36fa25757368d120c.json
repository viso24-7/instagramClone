{"ast":null,"code":"import { post } from 'axios';\nimport { notify } from '../utils/utilMethods/handy-notification';\nimport { GOOGLE_GEOLOCATION_KEY } from '../';\n/**\r\n * Geolocation setup\r\n * @param {Function} success Success function\r\n */\n\nexport const geolocation = success => {\n  if (navigator.geolocation) {\n    navigator.geolocation.watchPosition(success, geolocationError);\n  } else {\n    notify({\n      value: 'Geolocation not supported'\n    });\n  }\n};\n/**\r\n * Geolocation error\r\n */\n\nexport const geolocationError = ({\n  code\n}) => {\n  let message = code == 1 ? `Location permission denied` : code == 2 ? 'Location signal lost' : code == 3 ? 'Location request timed out' : code == 0 ? 'Unknown location error' : null;\n  notify({\n    value: message\n  });\n};\n/**\r\n * Returns human readable address from the given the \r\n * cordinates\r\n * @param {Object} pos\r\n */\n\nexport const getAddress = async pos => {\n  let {\n    latitude,\n    longitude\n  } = pos.coords;\n  let {\n    data: {\n      results\n    }\n  } = await post(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${GOOGLE_GEOLOCATION_KEY}`);\n  let loc = results[0].formattted_address;\n  return loc;\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/location-utils.js"],"names":["post","notify","GOOGLE_GEOLOCATION_KEY","geolocation","success","navigator","watchPosition","geolocationError","value","code","message","getAddress","pos","latitude","longitude","coords","data","results","loc","formattted_address"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,OAAnB;AACA,SAAQC,MAAR,QAAqB,yCAArB;AACA,SAAQC,sBAAR,QAAqC,KAArC;AAEA;;;;;AAIC,OAAO,MAAMC,WAAW,GAAGC,OAAO,IAAI;AAClC,MAAGC,SAAS,CAACF,WAAb,EAAyB;AACrBE,IAAAA,SAAS,CAACF,WAAV,CAAsBG,aAAtB,CAAoCF,OAApC,EAA4CG,gBAA5C;AACH,GAFD,MAEK;AACJN,IAAAA,MAAM,CAAC;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAN;AACA;AACJ,CANM;AAQR;;;;AAGC,OAAO,MAAMD,gBAAgB,GAAG,CAAC;AAACE,EAAAA;AAAD,CAAD,KAAY;AACxC,MAAIC,OAAO,GAAGD,IAAI,IAAI,CAAR,GAAa,4BAAb,GACZA,IAAI,IAAI,CAAR,GAAY,sBAAZ,GACAA,IAAI,IAAI,CAAR,GAAY,4BAAZ,GACAA,IAAI,IAAI,CAAR,GAAY,wBAAZ,GACA,IAJF;AAMAR,EAAAA,MAAM,CAAC;AACHO,IAAAA,KAAK,EAAEE;AADJ,GAAD,CAAN;AAGH,CAVM;AAYR;;;;;;AAKC,OAAO,MAAMC,UAAU,GAAG,MAAMC,GAAN,IAAa;AACnC,MAAI;AAACC,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAuBF,GAAG,CAACG,MAA/B;AACA,MAAI;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAoB,MAAMjB,IAAI,CAAE,4DAA2Da,QAAS,IAAGC,SAAU,QAAOZ,sBAAuB,EAAjH,CAAlC;AACA,MAAIgB,GAAG,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAWE,kBAArB;AACA,SAAOD,GAAP;AACH,CALM","sourcesContent":["import {post} from 'axios';\r\nimport {notify} from '../utils/utilMethods/handy-notification';\r\nimport {GOOGLE_GEOLOCATION_KEY} from '../';\r\n\r\n/**\r\n * Geolocation setup\r\n * @param {Function} success Success function\r\n */\r\n export const geolocation = success => {\r\n     if(navigator.geolocation){\r\n         navigator.geolocation.watchPosition(success,geolocationError)\r\n     }else{\r\n      notify({ value: 'Geolocation not supported'})\r\n     }\r\n }\r\n \r\n/**\r\n * Geolocation error\r\n */\r\n export const geolocationError = ({code}) => {\r\n     let message = code == 1 ? `Location permission denied`\r\n     : code == 2 ? 'Location signal lost'\r\n     : code == 3 ? 'Location request timed out'\r\n     : code == 0 ? 'Unknown location error'\r\n     : null\r\n\r\n     notify({\r\n         value: message\r\n     })\r\n }\r\n\r\n/**\r\n * Returns human readable address from the given the \r\n * cordinates\r\n * @param {Object} pos\r\n */\r\n export const getAddress = async pos => {\r\n     let {latitude,longitude} = pos.coords;\r\n     let {data: {results}} = await post(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${GOOGLE_GEOLOCATION_KEY}`);\r\n     let loc = results[0].formattted_address\r\n     return loc;\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}