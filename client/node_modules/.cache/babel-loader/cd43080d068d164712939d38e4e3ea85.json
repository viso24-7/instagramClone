{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\messages\\\\online-users\\\\onlineUser.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { humanReadable } from '../../../utils/utils';\nimport { newConversation } from '../../../utils/message-utils';\nimport AppLink from '../../others/link/link';\nimport PrimaryButton from '../../others/button/primary-button';\nimport { number, string, func } from 'prop-types';\n\nconst OnlineUser = props => {\n  let {\n    user,\n    username,\n    firstname,\n    surname,\n    mutualUsersCount,\n    back,\n    dispatch\n  } = props;\n\n  let message = e => {\n    e.preventDefault();\n    newConversation({\n      user,\n      username,\n      dispatch,\n      done: () => back()\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_items fer_items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_it_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/users/${user}/avatar.jpg`,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_it_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_it_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(AppLink, {\n    url: `/profile/${username}`,\n    className: \"modal_it_username\",\n    label: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"modal_it_light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }\n  }, mutualUsersCount === 0 ? `${firstname} ${surname}` : humanReadable(mutualUsersCount, 'mutual follower'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryButton, {\n    label: \"Message\",\n    onClick: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }));\n};\n\nOnlineUser.propTypes = {\n  user: number.isRequired,\n  username: string.isRequired,\n  firstname: string.isRequired,\n  surname: string.isRequired,\n  mutualUsersCount: number.isRequired,\n  back: func.isRequired\n};\nexport default connect()(OnlineUser);\nexport { OnlineUser as PureOnlineUser };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/online-users/onlineUser.js"],"names":["React","connect","humanReadable","newConversation","AppLink","PrimaryButton","number","string","func","OnlineUser","props","user","username","firstname","surname","mutualUsersCount","back","dispatch","message","e","preventDefault","done","propTypes","isRequired","PureOnlineUser"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,sBAA5B;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,IAAtB,QAAiC,YAAjC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,MAAI;AAACC,IAAAA,IAAD;AAAMC,IAAAA,QAAN;AAAeC,IAAAA,SAAf;AAAyBC,IAAAA,OAAzB;AAAiCC,IAAAA,gBAAjC;AAAkDC,IAAAA,IAAlD;AAAuDC,IAAAA;AAAvD,MAAmEP,KAAvE;;AAEA,MAAIQ,OAAO,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,eAAe,CAAC;AACZQ,MAAAA,IADY;AAEZC,MAAAA,QAFY;AAGZK,MAAAA,QAHY;AAIZI,MAAAA,IAAI,EAAE,MAAML,IAAI;AAJJ,KAAD,CAAf;AAMF,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAG,UAASL,IAAK,aAAzB;AAAuC,IAAA,GAAG,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACG,IAAA,GAAG,EAAG,YAAWC,QAAS,EAD7B;AAEG,IAAA,SAAS,EAAC,mBAFb;AAGG,IAAA,KAAK,EAAEA,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,gBAAgB,KAAK,CAArB,GAA0B,GAAEF,SAAU,IAAGC,OAAQ,EAAjD,GAAqDZ,aAAa,CAACa,gBAAD,EAAkB,iBAAlB,CADvE,CAPJ,CADJ,eAaI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,CALJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AA0BH,CAvCD;;AAyCAT,UAAU,CAACa,SAAX,GAAuB;AACnBX,EAAAA,IAAI,EAAEL,MAAM,CAACiB,UADM;AAEnBX,EAAAA,QAAQ,EAAEL,MAAM,CAACgB,UAFE;AAGnBV,EAAAA,SAAS,EAAEN,MAAM,CAACgB,UAHC;AAInBT,EAAAA,OAAO,EAAEP,MAAM,CAACgB,UAJG;AAKnBR,EAAAA,gBAAgB,EAAET,MAAM,CAACiB,UALN;AAMnBP,EAAAA,IAAI,EAAER,IAAI,CAACe;AANQ,CAAvB;AASA,eAAetB,OAAO,GAAGQ,UAAH,CAAtB;AACA,SAAQA,UAAU,IAAIe,cAAtB","sourcesContent":[" import React from 'react';\r\n import {connect} from 'react-redux';\r\n import {humanReadable} from '../../../utils/utils';\r\n import {newConversation} from '../../../utils/message-utils';\r\n import AppLink from '../../others/link/link';\r\n import PrimaryButton from '../../others/button/primary-button';\r\n import {number,string,func} from 'prop-types';\r\n\r\n const OnlineUser = props => {\r\n     let {user,username,firstname,surname,mutualUsersCount,back,dispatch} = props;\r\n\r\n     let message = e => {\r\n        e.preventDefault()\r\n        newConversation({\r\n            user,\r\n            username,\r\n            dispatch,\r\n            done: () => back()\r\n        })\r\n     }\r\n\r\n     return (\r\n         <div className=\"modal_items fer_items\">\r\n             <div className=\"modal_it_img\">\r\n                 <img src={`/users/${user}/avatar.jpg`} alt=\"avatar\" />\r\n             </div>\r\n\r\n             <div className=\"modal_it_content\">\r\n                 <div className=\"modal_it_info\">\r\n                     <AppLink\r\n                        url={`/profile/${username}`}\r\n                        className=\"modal_it_username\"\r\n                        label={username}\r\n                     />\r\n\r\n                     <span className=\"modal_it_light\">\r\n                         {mutualUsersCount === 0 ? `${firstname} ${surname}` : humanReadable(mutualUsersCount,'mutual follower')}\r\n                     </span>\r\n                 </div>\r\n\r\n                 <div className=\"modal_ff\">\r\n                     <PrimaryButton label=\"Message\" onClick={message} />\r\n                 </div>\r\n             </div>\r\n             <hr />\r\n         </div>\r\n     )\r\n }\r\n\r\n OnlineUser.propTypes = {\r\n     user: number.isRequired,\r\n     username: string.isRequired,\r\n     firstname: string.isRequired,\r\n     surname: string.isRequired,\r\n     mutualUsersCount: number.isRequired,\r\n     back: func.isRequired\r\n }\r\n\r\n export default connect()(OnlineUser)\r\n export {OnlineUser as PureOnlineUser}"]},"metadata":{},"sourceType":"module"}