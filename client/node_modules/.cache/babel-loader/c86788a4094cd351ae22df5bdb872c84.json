{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\bookmark\\\\post-bookmark.js\";\nimport React, { Component, Fragment } from 'react';\nimport { post } from 'axios';\nimport { connect } from 'react-redux';\nimport * as PostUtils from '../../../utils/post-utils';\nimport MaterialIcon from '../../others/icons/material-icon';\nimport { number, string, shape } from 'prop-types';\n\nclass PostBookmark extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bookmarked: false\n    };\n\n    this.componentDidMount = async () => {\n      let {\n        postDetails: {\n          post_id\n        }\n      } = this.props;\n      let {\n        data: {\n          bookmarked\n        }\n      } = await post('/api/bookmarked-or-not', {\n        post_id\n      });\n      this.setState({\n        bookmarked\n      });\n    };\n\n    this.bookmark = async () => {\n      let {\n        postDetails: {\n          post_id\n        }\n      } = this.props;\n      PostUtils.bookmark({\n        post_id,\n        done: () => this.setState({\n          bookmarked: true\n        })\n      });\n    };\n\n    this.unbookmark = async () => {\n      let {\n        postDetails: {\n          post_id,\n          when\n        },\n        dispatch,\n        user_details: {\n          id\n        }\n      } = this.props;\n      PostUtils.unbookmark({\n        post_id,\n        when,\n        user: id,\n        dispatch,\n        done: () => this.setState({\n          bookmarked: false\n        })\n      });\n    };\n  }\n\n  render() {\n    let {\n      bookmarked\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_bmrk_wra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }\n    }, bookmarked ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p_bookmark undo_bookmark\",\n      onClick: this.unbookmark,\n      \"data-tip\": \"Undo bookmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"bookmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p_bookmark\",\n      onClick: this.bookmark,\n      \"data-tip\": \"Bookmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"bookmark_border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }\n    }))));\n  }\n\n}\n\nPostBookmark.propTypes = {\n  postDetails: shape({\n    post_id: number.isRequired,\n    when: string.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  user_details: state.User.user_details\n});\n\nexport default connect(mapStateToProps)(PostBookmark);\nexport { PostBookmark as PurePostBookmark };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/bookmark/post-bookmark.js"],"names":["React","Component","Fragment","post","connect","PostUtils","MaterialIcon","number","string","shape","PostBookmark","state","bookmarked","componentDidMount","postDetails","post_id","props","data","setState","bookmark","done","unbookmark","when","dispatch","user_details","id","user","render","propTypes","isRequired","mapStateToProps","User","PurePostBookmark"],"mappings":"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","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {post} from 'axios';\r\n import {connect} from 'react-redux';\r\n import * as PostUtils from '../../../utils/post-utils';\r\n import MaterialIcon from '../../others/icons/material-icon';\r\n import {number,string,shape} from 'prop-types';\r\n\r\n class PostBookmark extends Component {\r\n     state = { bookmarked: false }\r\n\r\n     componentDidMount = async () => {\r\n        let {postDetails:{post_id}} = this.props;\r\n        let {data:{bookmarked}} = await post('/api/bookmarked-or-not',{post_id})\r\n        this.setState({ bookmarked})\r\n     }\r\n\r\n     bookmark = async () => {\r\n         let {postDetails: {post_id}} = this.props;\r\n         PostUtils.bookmark({\r\n             post_id,\r\n             done: () => this.setState({ bookmarked: true })\r\n         })\r\n     }\r\n\r\n     unbookmark = async () => {\r\n         let {postDetails: {post_id,when},dispatch,user_details:{id}} = this.props;\r\n         PostUtils.unbookmark({\r\n             post_id,\r\n             when,\r\n             user: id,\r\n             dispatch,\r\n             done: () => this.setState({ bookmarked: false})\r\n         })\r\n     }\r\n\r\n     render(){\r\n         let {bookmarked} = this.props;\r\n\r\n         return (\r\n             <Fragment>\r\n                 <div className=\"p_bmrk_wra\">\r\n                     {bookmarked ? (\r\n                         <span className=\"p_bookmark undo_bookmark\" onClick={this.unbookmark} data-tip=\"Undo bookmark\">\r\n                             <MaterialIcon icon=\"bookmark\" />\r\n                         </span>\r\n                     ) : (\r\n                         <span className=\"p_bookmark\" onClick={this.bookmark} data-tip=\"Bookmark\">\r\n                             <MaterialIcon icon=\"bookmark_border\" />\r\n                         </span>\r\n                     )}\r\n                 </div>\r\n             </Fragment>\r\n         )\r\n     }\r\n }\r\n\r\n PostBookmark.propTypes = {\r\n     postDetails: shape({\r\n         post_id: number.isRequired,\r\n         when: string.isRequired\r\n     }).isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     user_details: state.User.user_details\r\n })\r\n\r\n export default connect(mapStateToProps)(PostBookmark);\r\n export {PostBookmark as PurePostBookmark}"]},"metadata":{},"sourceType":"module"}