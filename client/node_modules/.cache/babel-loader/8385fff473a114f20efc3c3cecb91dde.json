{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\group\\\\sections\\\\edit\\\\edit-group-fields.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Me } from '../../../../utils/utils';\nimport { isAdmin } from '../../../../utils/admin-utils';\nimport TextInput from '../../../others/input/text';\nimport TextArea from '../../../others/input/textArea';\nimport CheckBox from '../../../others/input/checkbox';\nimport { shape, string, bool, func } from 'prop-types';\n\nconst EditGroupFields = ({\n  fields,\n  changeValue,\n  admin\n}) => {\n  let disabled = !Me(admin) && !isAdmin();\n  let {\n    name,\n    bio,\n    isPrivate\n  } = fields;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"g_e_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"g_e_span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"Group Name\"), /*#__PURE__*/React.createElement(TextInput, {\n    placeholder: \"group name ...\",\n    disabled: disabled,\n    value: name,\n    valueChange: e => changeValue('name', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"g_e_bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"g_e_span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Group bio\"), /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"group bio ...\",\n    value: bio,\n    valueChange: e => changeValue('bio', e),\n    disabled: disabled,\n    className: \"gen_bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"g_e_pri\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    label: \"private group\",\n    disabled: disabled,\n    checked: isPrivate,\n    changeValue: e => changeValue('isPrivate', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"g_e_p_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Private: Only members can interact with group\")));\n};\n\nEditGroupFields.propTypes = {\n  fields: shape({\n    name: string.isRequired,\n    bio: string.isRequired,\n    isPrivate: bool.isRequired\n  }).isRequired,\n  changeValue: func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.Group.group_details.admin\n});\n\nexport default connect(mapStateToProps)(EditGroupFields);\nexport { EditGroupFields as PureEditGroupFields };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/sections/edit/edit-group-fields.js"],"names":["React","Fragment","connect","Me","isAdmin","TextInput","TextArea","CheckBox","shape","string","bool","func","EditGroupFields","fields","changeValue","admin","disabled","name","bio","isPrivate","e","propTypes","isRequired","mapStateToProps","state","Group","group_details","PureEditGroupFields"],"mappings":"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","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {Me} from '../../../../utils/utils';\r\n import {isAdmin} from '../../../../utils/admin-utils';\r\n import TextInput from '../../../others/input/text';\r\n import TextArea from '../../../others/input/textArea';\r\n import CheckBox from '../../../others/input/checkbox';\r\n import {shape,string,bool,func} from 'prop-types';\r\n\r\n  const EditGroupFields = ({fields,changeValue,admin}) => {\r\n        let disabled = !Me(admin) && !isAdmin()\r\n        let {name,bio,isPrivate} = fields;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"g_e_name\">\r\n                    <span className=\"g_e_span\">Group Name</span>\r\n                    <TextInput\r\n                        placeholder=\"group name ...\"\r\n                        disabled={disabled}\r\n                        value={name}\r\n                        valueChange={e => changeValue('name',e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"g_e_bio\">\r\n                    <span className=\"g_e_span\">Group bio</span>\r\n                    <TextArea\r\n                       placeholder=\"group bio ...\"\r\n                       value={bio}\r\n                       valueChange={e => changeValue('bio',e)}\r\n                       disabled={disabled}\r\n                       className=\"gen_bio\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"g_e_pri\">\r\n                    <CheckBox\r\n                        label=\"private group\"\r\n                        disabled={disabled}\r\n                        checked={isPrivate}\r\n                        changeValue={e => changeValue('isPrivate',e)}\r\n                    />\r\n\r\n                    <span className=\"g_e_p_info\">\r\n                         Private: Only members can interact with group\r\n                    </span>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n  }\r\n\r\n  EditGroupFields.propTypes = {\r\n      fields: shape({\r\n          name: string.isRequired,\r\n          bio: string.isRequired,\r\n          isPrivate: bool.isRequired\r\n          }).isRequired,\r\n       changeValue: func.isRequired   \r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n      admin: state.Group.group_details.admin\r\n  })\r\n\r\n  export default connect(mapStateToProps)(EditGroupFields)\r\n  export {EditGroupFields as PureEditGroupFields}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}