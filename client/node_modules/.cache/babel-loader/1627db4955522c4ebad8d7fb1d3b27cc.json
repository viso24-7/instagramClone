{"ast":null,"code":"import { post } from 'axios';\nimport { dispatchHelper } from '../utils/utils';\nimport { GET_CONVERSATION, GET_CONVERSATION_MESSAGES, GET_UNREAD_MESSAGES, GET_ONLINE_USERS, GET_CON_DETAILS, GET_CON_ABOUT, CONVERSATION_ADDED, MESSAGED } from './types';\nexport const getConversation = () => dispatchHelper(GET_CONVERSATION, 'get-conversation');\nexport const getConversationMessages = (con_id, when) => dispatchHelper(GET_CONVERSATION_MESSAGES, 'get-conversation-messages', {\n  con_id,\n  when\n});\nexport const getUnreadMessages = () => dispatchHelper(GET_UNREAD_MESSAGES, 'get-unread-messages');\nexport const getOnlineUsers = () => dispatchHelper(GET_ONLINE_USERS, 'get-online-users');\nexport const getConDetails = con_id => dispatchHelper(GET_CON_DETAILS, 'get-con-details', {\n  con_id\n});\nexport const getConAbout = (con_id, user) => dispatchHelper(GET_CON_ABOUT, 'get-con-about', {\n  con_id,\n  user\n});\nexport const conversationAdded = conversation => {\n  return {\n    type: CONVERSATION_ADDED,\n    payload: conversation\n  };\n};\nexport const messaged = message => {\n  return {\n    type: MESSAGED,\n    payload: message\n  };\n};\nexport const changeLastMssg = lastMssg => {\n  return {\n    type: CHANGE_LAST_MSSG,\n    payload: lastMssg\n  };\n};\nexport const deleteMssg = message_id => {\n  return {\n    type: 'DELETE_MSSG',\n    payload: message_id\n  };\n};\nexport const unsendAllMessages = mssg_by => {\n  return {\n    type: 'UNSEND_ALL_MESSAGES',\n    payload: mssg_by\n  };\n};\nexport const deleteCon = con_id => {\n  return {\n    type: 'DELETE_CON',\n    payload: con_id\n  };\n};\nexport const readConversation = (con_id, unreadMssgs) => {\n  return dispatch => {\n    post('/api/read-conversation', {\n      con_id\n    }).then(() => {\n      dispatch({\n        type: 'READ_CONVERSATION',\n        payload: con_id\n      });\n\n      if (unreadMssgs !== 0) {\n        dispatch({\n          type: 'UPDATE_UNREAD_CONVERSATIONS',\n          payload: unreadMssgs\n        });\n      }\n    }).catch(e => console.log(e));\n  };\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/actions/message.js"],"names":["post","dispatchHelper","GET_CONVERSATION","GET_CONVERSATION_MESSAGES","GET_UNREAD_MESSAGES","GET_ONLINE_USERS","GET_CON_DETAILS","GET_CON_ABOUT","CONVERSATION_ADDED","MESSAGED","getConversation","getConversationMessages","con_id","when","getUnreadMessages","getOnlineUsers","getConDetails","getConAbout","user","conversationAdded","conversation","type","payload","messaged","message","changeLastMssg","lastMssg","CHANGE_LAST_MSSG","deleteMssg","message_id","unsendAllMessages","mssg_by","deleteCon","readConversation","unreadMssgs","dispatch","then","catch","e","console","log"],"mappings":"AAAC,SAAQA,IAAR,QAAmB,OAAnB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,gBAAR,EAAyBC,yBAAzB,EAAmDC,mBAAnD,EAAuEC,gBAAvE,EAAwFC,eAAxF,EACQC,aADR,EACsBC,kBADtB,EACyCC,QADzC,QACwD,SADxD;AAIA,OAAO,MAAMC,eAAe,GAAG,MAAMT,cAAc,CAACC,gBAAD,EAAkB,kBAAlB,CAA5C;AACP,OAAO,MAAMS,uBAAuB,GAAG,CAACC,MAAD,EAAQC,IAAR,KAAiBZ,cAAc,CAACE,yBAAD,EAA2B,2BAA3B,EAAuD;AAACS,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAvD,CAA/D;AACP,OAAO,MAAMC,iBAAiB,GAAG,MAAMb,cAAc,CAACG,mBAAD,EAAqB,qBAArB,CAA9C;AACP,OAAO,MAAMW,cAAc,GAAG,MAAMd,cAAc,CAACI,gBAAD,EAAkB,kBAAlB,CAA3C;AACP,OAAO,MAAMW,aAAa,GAAGJ,MAAM,IAAIX,cAAc,CAACK,eAAD,EAAiB,iBAAjB,EAAmC;AAACM,EAAAA;AAAD,CAAnC,CAA9C;AACP,OAAO,MAAMK,WAAW,GAAG,CAACL,MAAD,EAAQM,IAAR,KAAiBjB,cAAc,CAACM,aAAD,EAAe,eAAf,EAA+B;AAACK,EAAAA,MAAD;AAAQM,EAAAA;AAAR,CAA/B,CAAnD;AAEP,OAAO,MAAMC,iBAAiB,GAAGC,YAAY,IAAI;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEb,kBADH;AAEHc,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,QAAQ,GAAGC,OAAO,IAAI;AAC/B,SAAO;AACHH,IAAAA,IAAI,EAAEZ,QADH;AAEHa,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,cAAc,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACHL,IAAAA,IAAI,EAAEM,gBADH;AAEHL,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAGC,UAAU,IAAI;AACpC,SAAO;AACHR,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAGC,OAAO,IAAI;AACxC,SAAO;AACHV,IAAAA,IAAI,EAAE,qBADH;AAEHC,IAAAA,OAAO,EAAES;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,SAAS,GAAGpB,MAAM,IAAI;AAC/B,SAAO;AACHS,IAAAA,IAAI,EAAE,YADH;AAEHC,IAAAA,OAAO,EAAEV;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMqB,gBAAgB,GAAG,CAACrB,MAAD,EAAQsB,WAAR,KAAwB;AACpD,SAAOC,QAAQ,IAAI;AACfnC,IAAAA,IAAI,CAAC,wBAAD,EAA0B;AAACY,MAAAA;AAAD,KAA1B,CAAJ,CACEwB,IADF,CACO,MAAM;AACRD,MAAAA,QAAQ,CAAC;AACLd,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEV;AAFJ,OAAD,CAAR;;AAKA,UAAGsB,WAAW,KAAK,CAAnB,EAAqB;AACnBC,QAAAA,QAAQ,CAAC;AACLd,UAAAA,IAAI,EAAE,6BADD;AAELC,UAAAA,OAAO,EAAEY;AAFJ,SAAD,CAAR;AAID;AACJ,KAbF,EAaIG,KAbJ,CAaUC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAbf;AAcH,GAfD;AAgBH,CAjBM","sourcesContent":[" import {post} from 'axios';\r\n import {dispatchHelper} from '../utils/utils';\r\n import {GET_CONVERSATION,GET_CONVERSATION_MESSAGES,GET_UNREAD_MESSAGES,GET_ONLINE_USERS,GET_CON_DETAILS,\r\n         GET_CON_ABOUT,CONVERSATION_ADDED,MESSAGED} from './types';\r\n\r\n\r\n export const getConversation = () => dispatchHelper(GET_CONVERSATION,'get-conversation');\r\n export const getConversationMessages = (con_id,when) => dispatchHelper(GET_CONVERSATION_MESSAGES,'get-conversation-messages',{con_id,when});\r\n export const getUnreadMessages = () => dispatchHelper(GET_UNREAD_MESSAGES,'get-unread-messages');\r\n export const getOnlineUsers = () => dispatchHelper(GET_ONLINE_USERS,'get-online-users');\r\n export const getConDetails = con_id => dispatchHelper(GET_CON_DETAILS,'get-con-details',{con_id});\r\n export const getConAbout = (con_id,user) => dispatchHelper(GET_CON_ABOUT,'get-con-about',{con_id,user});\r\n \r\n export const conversationAdded = conversation => {\r\n     return {\r\n         type: CONVERSATION_ADDED,\r\n         payload: conversation\r\n     }\r\n }\r\n\r\n export const messaged = message => {\r\n     return {\r\n         type: MESSAGED,\r\n         payload: message\r\n     }\r\n }\r\n\r\n export const changeLastMssg = lastMssg => {\r\n     return {\r\n         type: CHANGE_LAST_MSSG,\r\n         payload: lastMssg\r\n     }\r\n }\r\n\r\n export const deleteMssg = message_id => {\r\n     return {\r\n         type: 'DELETE_MSSG',\r\n         payload: message_id\r\n     }\r\n }\r\n \r\n export const unsendAllMessages = mssg_by => {\r\n     return {\r\n         type: 'UNSEND_ALL_MESSAGES',\r\n         payload: mssg_by\r\n     }\r\n }\r\n\r\n export const deleteCon = con_id => {\r\n     return {\r\n         type: 'DELETE_CON',\r\n         payload: con_id\r\n     }\r\n }\r\n\r\n export const readConversation = (con_id,unreadMssgs) => {\r\n     return dispatch => {\r\n         post('/api/read-conversation',{con_id})\r\n          .then(() => {\r\n              dispatch({\r\n                  type: 'READ_CONVERSATION',\r\n                  payload: con_id\r\n              })\r\n\r\n              if(unreadMssgs !== 0){\r\n                dispatch({\r\n                    type: 'UPDATE_UNREAD_CONVERSATIONS',\r\n                    payload: unreadMssgs\r\n                }) \r\n              }\r\n          }).catch(e => console.log(e))\r\n     }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}