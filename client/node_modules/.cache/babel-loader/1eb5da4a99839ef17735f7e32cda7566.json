{"ast":null,"code":"import qs from 'query-string';\nimport { post } from 'axios';\nimport { uData } from './utils';\nimport { Notify } from '../utils/utilMethods/handy-notification';\nimport Action from './api/Action';\n/**\r\n * For submit to check if user is the admin\r\n * @param {Object} options\r\n * @param {String} options.password\r\n * @param {String} options.search\r\n */\n\nexport const adminSubmit = async options => {\n  let {\n    password,\n    search\n  } = options,\n      toUrl = qs.parse(search),\n      action = new Action('.al_submit');\n\n  if (!password) {\n    Notify({\n      value: 'Password field is missing'\n    });\n  } else {\n    action.start('Please wait ...');\n    let {\n      data: {\n        message,\n        success\n      }\n    } = await post('/api/check-is-admin', {\n      password\n    });\n    let to = toUrl.to ? toUrl.to : '/is-admin';\n    Notify({\n      value: message,\n      done: () => success ? window.location.href = to : null\n    });\n    action.end('Continue as admin');\n  }\n};\n/**\r\n* Returns if user is admin of the app\r\n*/\n\nexport const isAdmin = () => uData('isadmin') === 'true' ? true : false;","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/admin-utils.js"],"names":["qs","post","uData","Notify","Action","adminSubmit","options","password","search","toUrl","parse","action","value","start","data","message","success","to","done","window","location","href","end","isAdmin"],"mappings":"AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,SAAQC,IAAR,QAAmB,OAAnB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,MAAR,QAAqB,yCAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA;;;;;;;AAMC,OAAO,MAAMC,WAAW,GAAG,MAAMC,OAAN,IAAiB;AACxC,MAAI;AAACC,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAoBF,OAAxB;AAAA,MACAG,KAAK,GAAGT,EAAE,CAACU,KAAH,CAASF,MAAT,CADR;AAAA,MAEAG,MAAM,GAAG,IAAIP,MAAJ,CAAW,YAAX,CAFT;;AAIA,MAAG,CAACG,QAAJ,EAAa;AACTJ,IAAAA,MAAM,CAAC;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAN;AACH,GAFD,MAEK;AACDD,IAAAA,MAAM,CAACE,KAAP,CAAa,iBAAb;AACA,QAAI;AAACC,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT;AAAN,QAA2B,MAAMf,IAAI,CAAC,qBAAD,EAAuB;AAACM,MAAAA;AAAD,KAAvB,CAAzC;AACA,QAAIU,EAAE,GAAGR,KAAK,CAACQ,EAAN,GAAWR,KAAK,CAACQ,EAAjB,GAAsB,WAA/B;AAEAd,IAAAA,MAAM,CAAC;AACHS,MAAAA,KAAK,EAAEG,OADJ;AAEHG,MAAAA,IAAI,EAAE,MAAOF,OAAO,GAAIG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBJ,EAA3B,GAAiC;AAFlD,KAAD,CAAN;AAKAN,IAAAA,MAAM,CAACW,GAAP,CAAW,mBAAX;AACH;AACJ,CAnBM;AAqBP;;;;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAOrB,KAAK,CAAC,SAAD,CAAL,KAAqB,MAArB,GAA8B,IAA9B,GAAqC,KAA5D","sourcesContent":["import qs from 'query-string';\r\nimport {post} from 'axios';\r\nimport {uData} from './utils'\r\nimport {Notify }from '../utils/utilMethods/handy-notification';\r\nimport Action from './api/Action';\r\n\r\n\r\n/**\r\n * For submit to check if user is the admin\r\n * @param {Object} options\r\n * @param {String} options.password\r\n * @param {String} options.search\r\n */\r\n export const adminSubmit = async options => {\r\n     let {password,search} = options,\r\n     toUrl = qs.parse(search),\r\n     action = new Action('.al_submit');\r\n\r\n     if(!password){\r\n         Notify({ value: 'Password field is missing'})\r\n     }else{\r\n         action.start('Please wait ...');\r\n         let {data:{message,success}} = await post('/api/check-is-admin',{password});\r\n         let to = toUrl.to ? toUrl.to : '/is-admin'\r\n\r\n         Notify({\r\n             value: message,\r\n             done: () => (success ? (window.location.href = to) : null)\r\n         });\r\n\r\n         action.end('Continue as admin');\r\n     }\r\n } \r\n\r\n /**\r\n * Returns if user is admin of the app\r\n */\r\n export const isAdmin = () => (uData('isadmin') === 'true' ? true : false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}