{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\messages\\\\messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport classNames from 'classnames';\nimport { getUnreadNotifications } from '../../actions/notification';\nimport { getConversation } from '../../actions/message';\nimport { cLoading } from '../../utils/utils';\nimport NewConversation from './new-conversation';\nimport Conversation from './conversation/conversation';\nimport MapConversations from './map-conversations/map-conversations';\nimport OnlineUsersButton from './online-users/onlineUsersButton';\nimport Title from '../others/title';\nimport IsLoading from '../others/isLoading';\nimport Nothing from '../others/nothing';\n\nclass Messages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      showConversation: false,\n      selectedCon: {\n        con_id: null,\n        unreadMssgs: 0\n      }\n    };\n\n    this.componentWillReceiveProps = () => this.setState({\n      loading: false\n    });\n\n    this.componentDidMount = () => {\n      let {\n        dispatch\n      } = this.props;\n      dispatch(getUnreadNotifications());\n      dispatch(getConversation());\n    };\n  }\n\n  render() {\n    let {\n      loading,\n      showConversation,\n      selectedCon\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      when: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      value: \"Messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      className: classNames('messages', cLoading(loading)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(OnlineUsersButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(NewConversation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MapConversations, {\n      showConversation: con => {\n        this.setState({\n          selectedCon: con,\n          showConversation: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, showConversation ? /*#__PURE__*/React.createElement(Conversation, {\n      con: selectedCon,\n      hideConversation: () => this.setState({\n        showConversation: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 77\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nothing, {\n      message: \"Please select a conversation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nexport default connect()(Messages);\nexport { Messages as PureMessages };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/messages.js"],"names":["React","Component","connect","FadeIn","classNames","getUnreadNotifications","getConversation","cLoading","NewConversation","Conversation","MapConversations","OnlineUsersButton","Title","IsLoading","Nothing","Messages","state","loading","showConversation","selectedCon","con_id","unreadMssgs","componentWillReceiveProps","setState","componentDidMount","dispatch","props","render","con","marginTop","PureMessages"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,sBAAR,QAAqC,4BAArC;AACA,SAAQC,eAAR,QAA8B,uBAA9B;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAN,SAAuBd,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAC5Be,KAD4B,GACpB;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,gBAAgB,EAAE,KAFd;AAGJC,MAAAA,WAAW,EAAE;AACTC,QAAAA,MAAM,EAAE,IADC;AAETC,QAAAA,WAAW,EAAE;AAFJ;AAHT,KADoB;;AAAA,SAU5BC,yBAV4B,GAUA,MAAM,KAAKC,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd,CAVN;;AAAA,SAW5BO,iBAX4B,GAWR,MAAM;AACtB,UAAI;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAtB;AACAD,MAAAA,QAAQ,CAACpB,sBAAsB,EAAvB,CAAR;AACAoB,MAAAA,QAAQ,CAACnB,eAAe,EAAhB,CAAR;AACH,KAf2B;AAAA;;AAiB7BqB,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACV,MAAAA,OAAD;AAASC,MAAAA,gBAAT;AAA0BC,MAAAA;AAA1B,QAAyC,KAAKH,KAAlD;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEC,OAApB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,OAAjB;AAAyB,MAAA,SAAS,EAAEb,UAAU,CAAC,UAAD,EAAYG,QAAQ,CAACU,OAAD,CAApB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAMI,oBAAC,gBAAD;AAAkB,MAAA,gBAAgB,EAAEW,GAAG,IAAI;AAAE,aAAKL,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAACS,GAAd;AAAmBV,UAAAA,gBAAgB,EAAC;AAApC,SAAd;AAAyD,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,eAUI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,gBAAgB,gBACb,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEC,WAAnB;AAAgC,MAAA,gBAAgB,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEL,QAAAA,gBAAgB,EAAE;AAApB,OAAd,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,gBAGb;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJR,CAVJ,CAJJ,CADJ;AA2BH;;AA/C4B;;AAkDhC,eAAe3B,OAAO,GAAGa,QAAH,CAAtB;AACA,SAAQA,QAAQ,IAAIe,YAApB","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import classNames from 'classnames';\r\n import {getUnreadNotifications} from '../../actions/notification';\r\n import {getConversation} from '../../actions/message';\r\n import {cLoading} from '../../utils/utils';\r\n import NewConversation from './new-conversation';\r\n import Conversation from './conversation/conversation';\r\n import MapConversations from './map-conversations/map-conversations';\r\n import OnlineUsersButton from './online-users/onlineUsersButton';\r\n import Title from '../others/title';\r\n import IsLoading from '../others/isLoading';\r\n import Nothing from '../others/nothing';\r\n\r\n class Messages extends Component{\r\n     state = { \r\n         loading: true,\r\n         showConversation: false,\r\n         selectedCon: {\r\n             con_id: null,\r\n             unreadMssgs: 0\r\n         }\r\n     }\r\n\r\n     componentWillReceiveProps = () => this.setState({ loading: false })\r\n     componentDidMount = () => {\r\n         let {dispatch} = this.props;\r\n         dispatch(getUnreadNotifications())\r\n         dispatch(getConversation())\r\n     }\r\n\r\n    render(){\r\n        let {loading,showConversation,selectedCon} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <IsLoading loading={loading} when=\"page\" />\r\n                <Title value=\"Messages\" />\r\n\r\n                <FadeIn duration=\"300ms\" className={classNames('messages',cLoading(loading))}>\r\n                    <div className=\"message_left\">\r\n                        <div className=\"message_new\">\r\n                            <OnlineUsersButton />\r\n                            <NewConversation />\r\n                        </div>\r\n\r\n                        <MapConversations showConversation={con => { this.setState({ selectedCon:con, showConversation:true})} } />\r\n                    </div>\r\n\r\n                    <div className=\"message_right\">\r\n                        {showConversation ? (\r\n                            <Conversation con={selectedCon} hideConversation={() => this.setState({ showConversation: false })} />\r\n                        ) : (\r\n                            <div style={{ marginTop: 77 }}>\r\n                                <Nothing message=\"Please select a conversation\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </FadeIn>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n export default connect()(Messages);\r\n export {Messages as PureMessages}"]},"metadata":{},"sourceType":"module"}