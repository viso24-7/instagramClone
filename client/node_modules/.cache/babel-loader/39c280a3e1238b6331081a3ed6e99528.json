{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\post-it\\\\getLeocation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { changePostitProperties } from '../../../actions/post';\nimport { geolocation, getAddress } from '../../../utils/location-utils';\nimport MaterialIcon from '../../others/icons/material-icon';\n\nconst GetLocation = ({\n  postIt,\n  dispatch\n}) => {\n  let {\n    location\n  } = postIt;\n\n  let changeProperties = (...args) => dispatch(changePostitProperties(...args));\n\n  let geoLoc = async () => {\n    let geolocationSuccess = async pos => {\n      changeProperties('fetchingLocation', true);\n      let address = await getAddress(pos);\n      changeProperties('location', address);\n      changeProperties('fetchingLocation', false);\n    };\n\n    geolocation(geolocationSuccess);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames('loc_add', {\n      p_span_toggle: location\n    }),\n    \"data-tip\": \"Add location\",\n    onClick: geoLoc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialIcon, {\n    icon: \"location_on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  postIt: state.Post.postIt\n});\n\nexport default connect(mapStateToProps)(GetLocation);\nexport { GetLocation as PureGetLocation };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/post-it/getLeocation.js"],"names":["React","connect","classNames","changePostitProperties","geolocation","getAddress","MaterialIcon","GetLocation","postIt","dispatch","location","changeProperties","args","geoLoc","geolocationSuccess","pos","address","p_span_toggle","mapStateToProps","state","Post","PureGetLocation"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,sBAAR,QAAqC,uBAArC;AACA,SAAQC,WAAR,EAAoBC,UAApB,QAAqC,+BAArC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACvC,MAAI;AAACC,IAAAA;AAAD,MAAaF,MAAjB;;AAEA,MAAIG,gBAAgB,GAAG,CAAC,GAAGC,IAAJ,KAAaH,QAAQ,CAACN,sBAAsB,CAAC,GAAGS,IAAJ,CAAvB,CAA5C;;AAEA,MAAIC,MAAM,GAAG,YAAY;AACrB,QAAIC,kBAAkB,GAAG,MAAMC,GAAN,IAAa;AAClCJ,MAAAA,gBAAgB,CAAC,kBAAD,EAAoB,IAApB,CAAhB;AACA,UAAIK,OAAO,GAAG,MAAMX,UAAU,CAACU,GAAD,CAA9B;AACAJ,MAAAA,gBAAgB,CAAC,UAAD,EAAYK,OAAZ,CAAhB;AACAL,MAAAA,gBAAgB,CAAC,kBAAD,EAAoB,KAApB,CAAhB;AACH,KALD;;AAOAP,IAAAA,WAAW,CAACU,kBAAD,CAAX;AACH,GATD;;AAWA,sBACK;AAAM,IAAA,SAAS,EAAEZ,UAAU,CAAC,SAAD,EAAW;AAACe,MAAAA,aAAa,EAAEP;AAAhB,KAAX,CAA3B;AAAkE,gBAAS,cAA3E;AAA0F,IAAA,OAAO,EAAEG,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,CADL;AAKH,CArBD;;AAuBA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,MAAM,EAAEW,KAAK,CAACC,IAAN,CAAWZ;AADW,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACiB,eAAD,CAAP,CAAyBX,WAAzB,CAAf;AACA,SAAQA,WAAW,IAAIc,eAAvB","sourcesContent":[" import React from 'react';\r\n import {connect} from 'react-redux';\r\n import classNames from 'classnames'\r\n import {changePostitProperties} from '../../../actions/post';\r\n import {geolocation,getAddress} from '../../../utils/location-utils';\r\n import MaterialIcon from '../../others/icons/material-icon';\r\n\r\n const GetLocation = ({postIt,dispatch}) => {\r\n     let {location} = postIt;\r\n\r\n     let changeProperties = (...args) => dispatch(changePostitProperties(...args))\r\n\r\n     let geoLoc = async () => {\r\n         let geolocationSuccess = async pos => {\r\n             changeProperties('fetchingLocation',true)\r\n             let address = await getAddress(pos)\r\n             changeProperties('location',address)\r\n             changeProperties('fetchingLocation',false)\r\n         }\r\n\r\n         geolocation(geolocationSuccess)\r\n     }\r\n\r\n     return (\r\n          <span className={classNames('loc_add',{p_span_toggle: location})} data-tip=\"Add location\" onClick={geoLoc}>\r\n                 <MaterialIcon icon=\"location_on\" />\r\n          </span>\r\n     )\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     postIt: state.Post.postIt\r\n })\r\n\r\n export default connect(mapStateToProps)(GetLocation)\r\n export {GetLocation as PureGetLocation}"]},"metadata":{},"sourceType":"module"}