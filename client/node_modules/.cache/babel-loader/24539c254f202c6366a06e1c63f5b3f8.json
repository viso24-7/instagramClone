{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\notifications\\\\notifications.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport { getUnreadMessages } from '../../actions/message';\nimport { getNotifications, readNotifications } from '../../actions/notification';\nimport { cLoading } from '../../utils/utils';\nimport Title from '../others/title';\nimport IsLoading from '../others/isLoading';\nimport End from '../others/end';\nimport Nothing from '../others/nothing';\nimport NotificationsHeader from './notificationsHeader';\nimport Notification from './notification/notification';\n\nclass Notifications extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.componentWillReceiveProps = () => this.setState({\n      loading: false\n    });\n\n    this.componentDidMount = () => {\n      let {\n        dispatch\n      } = this.props;\n      dispatch(readNotifications());\n      dispatch(getNotifications());\n      dispatch(getUnreadMessages());\n    };\n  }\n\n  render() {\n    let {\n      loading\n    } = this.state;\n    let {\n      notifications\n    } = this.props;\n    let map_notifications = notifications.map(n => /*#__PURE__*/React.createElement(Notification, Object.assign({\n      key: n.notify_id\n    }, n, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 57\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      when: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      value: \"Notifications\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      className: cLoading(loading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notifcations_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(NotificationsHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }\n    }), notifications.length == 0 ? /*#__PURE__*/React.createElement(Nothing, {\n      message: \"You have no notifications\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 55\n      }\n    }) : map_notifications, notifications.length != 0 && /*#__PURE__*/React.createElement(End, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 56\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notifications: state.Notification.notifications\n});\n\nexport default connect(mapStateToProps)(Notifications);\nexport { Notifications as PureNotifications };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/notifications/notifications.js"],"names":["React","Component","connect","FadeIn","getUnreadMessages","getNotifications","readNotifications","cLoading","Title","IsLoading","End","Nothing","NotificationsHeader","Notification","Notifications","state","loading","componentWillReceiveProps","setState","componentDidMount","dispatch","props","render","notifications","map_notifications","map","n","notify_id","length","mapStateToProps","PureNotifications"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAAQC,gBAAR,EAAyBC,iBAAzB,QAAiD,4BAAjD;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,MAAMC,aAAN,SAA4Bb,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCc,KADkC,GAC1B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD0B;;AAAA,SAGlCC,yBAHkC,GAGN,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAd,CAHA;;AAAA,SAIlCG,iBAJkC,GAId,MAAM;AACtB,UAAI;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAtB;AACAD,MAAAA,QAAQ,CAACd,iBAAiB,EAAlB,CAAR;AACAc,MAAAA,QAAQ,CAACf,gBAAgB,EAAjB,CAAR;AACAe,MAAAA,QAAQ,CAAChB,iBAAiB,EAAlB,CAAR;AACH,KATiC;AAAA;;AAWlCkB,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACN,MAAAA;AAAD,QAAY,KAAKD,KAArB;AACA,QAAI;AAACQ,MAAAA;AAAD,QAAkB,KAAKF,KAA3B;AACA,QAAIG,iBAAiB,GAAGD,aAAa,CAACE,GAAd,CAAkBC,CAAC,iBAAI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAC,CAACC;AAArB,OAAoCD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,CAAxB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEV,OAApB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,OAAjB;AAAyB,MAAA,SAAS,EAAET,QAAQ,CAACS,OAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKO,aAAa,CAACK,MAAd,IAAwB,CAAxB,gBAA4B,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAA8EJ,iBAFnF,EAGKD,aAAa,CAACK,MAAd,IAAwB,CAAxB,iBAA6B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHlC,CADJ,CAJJ,CADJ;AAcH;;AA9BiC;;AAiCtC,MAAMC,eAAe,GAAGd,KAAK,KAAK;AAC9BQ,EAAAA,aAAa,EAAER,KAAK,CAACF,YAAN,CAAmBU;AADJ,CAAL,CAA7B;;AAIA,eAAerB,OAAO,CAAC2B,eAAD,CAAP,CAAyBf,aAAzB,CAAf;AACA,SAAQA,aAAa,IAAIgB,iBAAzB","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import {getUnreadMessages} from '../../actions/message';\r\n import {getNotifications,readNotifications} from '../../actions/notification';\r\n import {cLoading} from '../../utils/utils';\r\n import Title from '../others/title';\r\n import IsLoading from '../others/isLoading';\r\n import End from '../others/end';\r\n import Nothing from '../others/nothing';\r\n import NotificationsHeader from './notificationsHeader';\r\n import Notification from './notification/notification';\r\n\r\n class Notifications extends Component {\r\n     state = { loading: true }\r\n\r\n     componentWillReceiveProps = () => this.setState({ loading: false })\r\n     componentDidMount = () => {\r\n         let {dispatch} = this.props;\r\n         dispatch(readNotifications())\r\n         dispatch(getNotifications())\r\n         dispatch(getUnreadMessages())\r\n     }\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {notifications} = this.props;\r\n         let map_notifications = notifications.map(n => <Notification key={n.notify_id} {...n} />)\r\n\r\n         return (\r\n             <div>\r\n                 <IsLoading loading={loading} when=\"page\" />\r\n                 <Title value=\"Notifications\" />\r\n\r\n                 <FadeIn duration=\"300ms\" className={cLoading(loading)} >\r\n                     <div className=\"notifcations_div\">\r\n                         <NotificationsHeader />\r\n                         {notifications.length == 0 ? <Nothing message=\"You have no notifications\" /> : map_notifications}\r\n                         {notifications.length != 0 && <End />}\r\n                     </div>\r\n                 </FadeIn>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     notifications: state.Notification.notifications\r\n })\r\n\r\n export default connect(mapStateToProps)(Notifications);\r\n export {Notifications as PureNotifications}"]},"metadata":{},"sourceType":"module"}