{"ast":null,"code":"export var timeAgo=function timeAgo(Time){var time=parseInt(Time);switch(typeof time){case'number':break;case'string':time=+new Date(time);break;case'object':if(time.constructor===Date)time=time.getTime();break;default:time=+new Date();}var time_formats=[[60,'secs',1],// 60\n[120,'1 min ago','1 min from now'],// 60*2\n[3600,'mins',60],// 60*60, 60\n[7200,'1 hour ago','1 hour from now'],// 60*60*2\n[86400,'hours',3600],// 60*60*24, 60*60\n[172800,'Yesterday','Tomorrow'],// 60*60*24*2\n[604800,'days',86400],// 60*60*24*7, 60*60*24\n[1209600,'Last week','Next week'],// 60*60*24*7*4*2\n[2419200,'weeks',604800],// 60*60*24*7*4, 60*60*24*7\n[4838400,'Last month','Next month'],// 60*60*24*7*4*2\n[29030400,'months',2419200],// 60*60*24*7*4*12, 60*60*24*7*4\n[58060800,'Last year','Next year'],// 60*60*24*7*4*12*2\n[2903040000,'years',29030400],// 60*60*24*7*4*12*100, 60*60*24*7*4*12\n[5806080000,'Last century','Next century'],// 60*60*24*7*4*12*100*2\n[58060800000,'centuries',2903040000]// 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n];var seconds=(+new Date()-time)/1000;var token='ago';var list_choice=1;if(seconds===0){return\"Just now\";}if(seconds<0){seconds=Math.abs(seconds);token='from now';list_choice=2;}var i=0,format;while(format=time_formats[i++]){//format will loop over time_formats,if new Date - time/1000 < than 60 sec\nif(seconds<format[0]){if(typeof format[2]==='string')return format[list_choice];//means is 1 hours\nelse return Math.floor(seconds/format[2])+' '+format[1]+' '+token;}}return time;};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/utilMethods/handyTimeAgo.js"],"names":["timeAgo","Time","time","parseInt","Date","constructor","getTime","time_formats","seconds","token","list_choice","Math","abs","i","format","floor"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CAC3B,GAAIC,CAAAA,IAAI,CAAGC,QAAQ,CAACF,IAAD,CAAnB,CAEA,OAAQ,MAAOC,CAAAA,IAAf,EACE,IAAK,QAAL,CACE,MACF,IAAK,QAAL,CACEA,IAAI,CAAG,CAAC,GAAIE,CAAAA,IAAJ,CAASF,IAAT,CAAR,CACA,MACF,IAAK,QAAL,CACE,GAAIA,IAAI,CAACG,WAAL,GAAqBD,IAAzB,CAA+BF,IAAI,CAAGA,IAAI,CAACI,OAAL,EAAP,CAC/B,MACF,QACEJ,IAAI,CAAG,CAAC,GAAIE,CAAAA,IAAJ,EAAR,CAVJ,CAaA,GAAIG,CAAAA,YAAY,CAAG,CACjB,CAAC,EAAD,CAAK,MAAL,CAAa,CAAb,CADiB,CAC+B;AAChD,CAAC,GAAD,CAAM,WAAN,CAAmB,gBAAnB,CAFiB,CAE+B;AAChD,CAAC,IAAD,CAAO,MAAP,CAAe,EAAf,CAHiB,CAG+B;AAChD,CAAC,IAAD,CAAO,YAAP,CAAqB,iBAArB,CAJiB,CAI+B;AAChD,CAAC,KAAD,CAAQ,OAAR,CAAiB,IAAjB,CALiB,CAK+B;AAChD,CAAC,MAAD,CAAS,WAAT,CAAsB,UAAtB,CANiB,CAM+B;AAChD,CAAC,MAAD,CAAS,MAAT,CAAiB,KAAjB,CAPiB,CAO+B;AAChD,CAAC,OAAD,CAAU,WAAV,CAAuB,WAAvB,CARiB,CAQ+B;AAChD,CAAC,OAAD,CAAU,OAAV,CAAmB,MAAnB,CATiB,CAS+B;AAChD,CAAC,OAAD,CAAU,YAAV,CAAwB,YAAxB,CAViB,CAU+B;AAChD,CAAC,QAAD,CAAW,QAAX,CAAqB,OAArB,CAXiB,CAW+B;AAChD,CAAC,QAAD,CAAW,WAAX,CAAwB,WAAxB,CAZiB,CAY+B;AAChD,CAAC,UAAD,CAAa,OAAb,CAAsB,QAAtB,CAbiB,CAa+B;AAChD,CAAC,UAAD,CAAa,cAAb,CAA6B,cAA7B,CAdiB,CAc+B;AAChD,CAAC,WAAD,CAAc,WAAd,CAA2B,UAA3B,CAAgD;AAf/B,CAAnB,CAkBA,GAAIC,CAAAA,OAAO,CAAG,CAAC,CAAC,GAAIJ,CAAAA,IAAJ,EAAD,CAAcF,IAAf,EAAuB,IAArC,CACA,GAAIO,CAAAA,KAAK,CAAG,KAAZ,CACA,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CAEA,GAAGF,OAAO,GAAK,CAAf,CAAiB,CAAG,MAAO,UAAP,CAAmB,CAEvC,GAAIA,OAAO,CAAG,CAAd,CAAiB,CACfA,OAAO,CAAGG,IAAI,CAACC,GAAL,CAASJ,OAAT,CAAV,CACAC,KAAK,CAAG,UAAR,CACAC,WAAW,CAAG,CAAd,CACD,CAED,GAAIG,CAAAA,CAAC,CAAG,CAAR,CAAWC,MAAX,CACA,MAAOA,MAAM,CAAGP,YAAY,CAACM,CAAC,EAAF,CAA5B,EAAoC;AAClC,GAAIL,OAAO,CAAGM,MAAM,CAAC,CAAD,CAApB,CAAyB,CACvB,GAAI,MAAOA,CAAAA,MAAM,CAAC,CAAD,CAAb,GAAqB,QAAzB,CAAmC,MAAOA,CAAAA,MAAM,CAACJ,WAAD,CAAb,CAA4B;AAA/D,IACK,OAAOC,CAAAA,IAAI,CAACI,KAAL,CAAWP,OAAO,CAAGM,MAAM,CAAC,CAAD,CAA3B,EAAkC,GAAlC,CAAwCA,MAAM,CAAC,CAAD,CAA9C,CAAoD,GAApD,CAA0DL,KAAjE,CACN,CAJH,CAMA,MAAOP,CAAAA,IAAP,CACD,CAtDI","sourcesContent":["export const timeAgo = Time => {\r\n    let time = parseInt(Time)\r\n  \r\n    switch (typeof time) {\r\n      case 'number':\r\n        break\r\n      case 'string':\r\n        time = +new Date(time)\r\n        break\r\n      case 'object':\r\n        if (time.constructor === Date) time = time.getTime()\r\n        break\r\n      default:\r\n        time = +new Date()\r\n    }\r\n  \r\n    let time_formats = [\r\n      [60, 'secs', 1],                                // 60\r\n      [120, '1 min ago', '1 min from now'],           // 60*2\r\n      [3600, 'mins', 60],                             // 60*60, 60\r\n      [7200, '1 hour ago', '1 hour from now'],        // 60*60*2\r\n      [86400, 'hours', 3600],                         // 60*60*24, 60*60\r\n      [172800, 'Yesterday', 'Tomorrow'],              // 60*60*24*2\r\n      [604800, 'days', 86400],                        // 60*60*24*7, 60*60*24\r\n      [1209600, 'Last week', 'Next week'],            // 60*60*24*7*4*2\r\n      [2419200, 'weeks', 604800],                     // 60*60*24*7*4, 60*60*24*7\r\n      [4838400, 'Last month', 'Next month'],          // 60*60*24*7*4*2\r\n      [29030400, 'months', 2419200],                  // 60*60*24*7*4*12, 60*60*24*7*4\r\n      [58060800, 'Last year', 'Next year'],           // 60*60*24*7*4*12*2\r\n      [2903040000, 'years', 29030400],                // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n      [5806080000, 'Last century', 'Next century'],   // 60*60*24*7*4*12*100*2\r\n      [58060800000, 'centuries', 2903040000]          // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n    ]\r\n  \r\n    let seconds = (+new Date() - time) / 1000;\r\n    let token = 'ago';\r\n    let list_choice = 1\r\n    \r\n    if(seconds === 0){  return \"Just now\" }\r\n  \r\n    if (seconds < 0) {\r\n      seconds = Math.abs(seconds)\r\n      token = 'from now'\r\n      list_choice = 2\r\n    }\r\n  \r\n    let i = 0, format\r\n    while (format = time_formats[i++])  //format will loop over time_formats,if new Date - time/1000 < than 60 sec\r\n      if (seconds < format[0]) {\r\n        if (typeof format[2] === 'string') return format[list_choice]  //means is 1 hours\r\n        else return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token\r\n      }\r\n  \r\n    return time;  \r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}