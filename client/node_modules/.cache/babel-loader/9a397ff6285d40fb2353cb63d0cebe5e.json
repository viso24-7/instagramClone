{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\messages\\\\conversation\\\\message\\\\message.js\";\nimport React, { Component } from 'react';\nimport { Me } from '../../../../utils/utils';\nimport { timeAgo } from '../../../../utils/utilMethods/handyTimeAgo';\nimport classNames from 'classnames';\nimport MessageType from './message-type';\nimport MessageTools from './tools/message-tools';\nimport { number, string, oneOf } from 'prop-types';\nexport default class Message extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: '',\n      showTools: false\n    };\n\n    this.toggleTools = () => this.setState({\n      showTools: !this.state.showTools\n    });\n\n    this.componentDidMount = () => this.setState({\n      message: this.props.message\n    });\n  }\n\n  render() {\n    let {\n      message,\n      showTools\n    } = this.state;\n    let {\n      message_by,\n      type,\n      message_time,\n      message_id\n    } = this.props;\n    let message_style = Me(message_by) ? 'my_mm_div' : 'not_my_mm_div';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('m_m_divs', message_style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle_mssg_tools\",\n      onClick: this.toggleTools,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MessageType, {\n      messageDetails: {\n        message,\n        type,\n        message_time\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"m_m_time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, timeAgo(message_time).replace('ago', '')), showTools && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_m_tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(MessageTools, {\n      messageDetails: {\n        message_id,\n        message,\n        message_by,\n        type\n      },\n      updateMessage: message => this.setState({\n        message\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }\n    }))));\n  }\n\n}\nMessage.propTypes = {\n  con_id: number.isRequired,\n  message: string.isRequired,\n  message_by: number.isRequired,\n  message_to: number.isRequired,\n  message_id: number.isRequired,\n  message_time: string.isRequired,\n  status: oneOf(['read', 'unread']),\n  type: oneOf(['text', 'image', 'sticker']).isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/conversation/message/message.js"],"names":["React","Component","Me","timeAgo","classNames","MessageType","MessageTools","number","string","oneOf","Message","state","message","showTools","toggleTools","setState","componentDidMount","props","render","message_by","type","message_time","message_id","message_style","replace","propTypes","con_id","isRequired","message_to","status"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {Me} from '../../../../utils/utils';\r\n import {timeAgo} from '../../../../utils/utilMethods/handyTimeAgo';\r\n import classNames from 'classnames';\r\n import MessageType from './message-type';\r\n import MessageTools from './tools/message-tools';\r\n import {number,string,oneOf} from 'prop-types';\r\n\r\n export default class Message extends Component {\r\n     state = {\r\n         message: '',\r\n         showTools: false\r\n       }\r\n     \r\n     toggleTools = () => this.setState({ showTools: !this.state.showTools})  \r\n     componentDidMount = () => this.setState({ message: this.props.message })\r\n\r\n   render(){\r\n       let {message,showTools} = this.state;\r\n       let {message_by,type,message_time,message_id} = this.props;\r\n       let message_style = Me(message_by) ? 'my_mm_div' : 'not_my_mm_div'\r\n\r\n       return (\r\n            <div>\r\n                <div className={classNames('m_m_divs',message_style)}>\r\n                  <div className=\"toggle_mssg_tools\" onClick={this.toggleTools}>\r\n                      <MessageType messageDetails={{message,type,message_time}} />\r\n                  </div>\r\n\r\n                  <span className=\"m_m_time\">\r\n                      {timeAgo(message_time).replace('ago','') }\r\n                  </span>\r\n\r\n                  {showTools && (\r\n                     <div className=\"m_m_tools\">\r\n                         <MessageTools\r\n                           messageDetails={{ message_id,message,message_by,type}}\r\n                           updateMessage={message => this.setState({ message})}\r\n                         />\r\n                     </div>\r\n                   )}\r\n              </div>\r\n          </div>  \r\n       )\r\n    }  \r\n }\r\n\r\n Message.propTypes = {\r\n     con_id: number.isRequired,\r\n     message: string.isRequired,\r\n     message_by: number.isRequired,\r\n     message_to: number.isRequired,\r\n     message_id: number.isRequired,\r\n     message_time: string.isRequired,\r\n     status: oneOf(['read','unread']),\r\n     type: oneOf(['text','image','sticker']).isRequired,\r\n }"]},"metadata":{},"sourceType":"module"}