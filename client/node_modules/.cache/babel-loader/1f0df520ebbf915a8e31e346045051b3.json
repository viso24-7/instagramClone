{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\others\\\\avatar\\\\actions\\\\view-avatar.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport ViewAvatar from '../viewAvatar';\nimport { bool, func, oneOf } from 'prop-types';\n\nconst ViewAvatarAction = ({\n  view,\n  back,\n  when,\n  id,\n  group_id\n}) => {\n  let src = when === \"src\" ? `/users/${id}/avatar.jpg` : `/groups/${group_id}/avatar.jpg`;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }, view ? /*#__PURE__*/React.createElement(ViewAvatar, {\n    imgSrc: src,\n    back: back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 22\n    }\n  }) : null);\n};\n\nViewAvatarAction.propTypes = {\n  view: bool.isRequired,\n  back: func.isRequired,\n  when: oneOf(['user', 'group']).isRequired\n};\n\nconst mapStateToProps = state => ({\n  id: state.User.user_details.id,\n  group_id: state.Group.group_details.group_id\n});\n\nexport default connect(mapStateToProps)(ViewAvatarAction);","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/avatar/actions/view-avatar.js"],"names":["React","Fragment","connect","ViewAvatar","bool","func","oneOf","ViewAvatarAction","view","back","when","id","group_id","src","propTypes","isRequired","mapStateToProps","state","User","user_details","Group","group_details"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAAQC,IAAR,EAAaC,IAAb,EAAkBC,KAAlB,QAA8B,YAA9B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAOC,EAAAA,IAAP;AAAYC,EAAAA,IAAZ;AAAiBC,EAAAA,EAAjB;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AACxD,MAAIC,GAAG,GAAGH,IAAI,KAAK,KAAT,GAAkB,UAASC,EAAG,aAA9B,GAA8C,WAAUC,QAAS,aAA3E;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,gBAAG,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEK,GAApB;AAAyB,IAAA,IAAI,EAAEJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA6C,IADtD,CADJ;AAKH,CARD;;AAUCF,gBAAgB,CAACO,SAAjB,GAA6B;AACzBN,EAAAA,IAAI,EAAEJ,IAAI,CAACW,UADc;AAEzBN,EAAAA,IAAI,EAAEJ,IAAI,CAACU,UAFc;AAGzBL,EAAAA,IAAI,EAAEJ,KAAK,CAAC,CAAC,MAAD,EAAQ,OAAR,CAAD,CAAL,CAAwBS;AAHL,CAA7B;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,EAAE,EAAEM,KAAK,CAACC,IAAN,CAAWC,YAAX,CAAwBR,EADE;AAE9BC,EAAAA,QAAQ,EAAEK,KAAK,CAACG,KAAN,CAAYC,aAAZ,CAA0BT;AAFN,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACc,eAAD,CAAP,CAAyBT,gBAAzB,CAAf","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import ViewAvatar from '../viewAvatar';\r\n import {bool,func,oneOf} from 'prop-types';\r\n\r\n const ViewAvatarAction = ({ view,back,when,id,group_id}) => {\r\n     let src = when === \"src\" ? `/users/${id}/avatar.jpg` : `/groups/${group_id}/avatar.jpg`\r\n\r\n     return (\r\n         <Fragment>\r\n             {view ? <ViewAvatar imgSrc={src} back={back} /> : null }\r\n         </Fragment>\r\n     )\r\n }\r\n\r\n  ViewAvatarAction.propTypes = {\r\n      view: bool.isRequired,\r\n      back: func.isRequired,\r\n      when: oneOf(['user','group']).isRequired\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      id: state.User.user_details.id,\r\n      group_id: state.Group.group_details.group_id\r\n  })\r\n \r\n  export default connect(mapStateToProps)(ViewAvatarAction);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}