{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\image-comment\\\\imageComment.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { imageComment } from '../../../../utils/comment-utils';\nimport MaterialIcon from '../../../others/icons/material-icon';\nimport FileInput from '../../../others/input/file';\nimport { number, string, func, shape } from 'prop-types';\n\nclass ImageComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentFile: ''\n    };\n\n    this.commentFileChanged = async e => {\n      let {\n        postDetails: {\n          post_id,\n          when,\n          user\n        },\n        dispatch,\n        incrementComments\n      } = this.props;\n      this.setState({\n        commentFile: e.target.value\n      });\n      await imageComment({\n        post_id,\n        dispatch,\n        when,\n        user,\n        file: e.target.files[0],\n        done: () => incrementComments()\n      });\n    };\n\n    this.fileLabel = () => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-tip\": \"Attach a file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"attach_file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    })));\n  }\n\n  render() {\n    let {\n      commentFile\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"p_comment_form\",\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(FileInput, {\n      value: commentFile,\n      fileChange: this.commentFileChanged,\n      label: this.fileLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    })));\n  }\n\n}\n\nImageComment.propTypes = {\n  postDetails: shape({\n    post_id: number.isRequired,\n    user: number.isRequired,\n    when: string.isRequired\n  }).isRequired,\n  incrementComments: func.isRequired\n};\nexport default connect()(ImageComment);\nexport { ImageComment as PureImageComment };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/comment/image-comment/imageComment.js"],"names":["React","Component","Fragment","connect","imageComment","MaterialIcon","FileInput","number","string","func","shape","ImageComment","state","commentFile","commentFileChanged","e","postDetails","post_id","when","user","dispatch","incrementComments","props","setState","target","value","file","files","done","fileLabel","render","propTypes","isRequired","PureImageComment"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,IAAtB,EAA2BC,KAA3B,QAAuC,YAAvC;;AAEA,MAAMC,YAAN,SAA2BV,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAChCW,KADgC,GACxB;AAACC,MAAAA,WAAW,EAAE;AAAd,KADwB;;AAAA,SAGhCC,kBAHgC,GAGX,MAAMC,CAAN,IAAW;AAC5B,UAAI;AAACC,QAAAA,WAAW,EAAC;AAACC,UAAAA,OAAD;AAASC,UAAAA,IAAT;AAAcC,UAAAA;AAAd,SAAb;AAAiCC,QAAAA,QAAjC;AAA0CC,QAAAA;AAA1C,UAA+D,KAAKC,KAAxE;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEE,CAAC,CAACS,MAAF,CAASC;AAAxB,OAAd;AACA,YAAMrB,YAAY,CAAC;AACfa,QAAAA,OADe;AAEfG,QAAAA,QAFe;AAGfF,QAAAA,IAHe;AAIfC,QAAAA,IAJe;AAKfO,QAAAA,IAAI,EAAEX,CAAC,CAACS,MAAF,CAASG,KAAT,CAAe,CAAf,CALS;AAMfC,QAAAA,IAAI,EAAE,MAAMP,iBAAiB;AANd,OAAD,CAAlB;AAQH,KAd+B;;AAAA,SAgBhCQ,SAhBgC,GAgBpB,mBACR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,kBAAS,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAjB4B;AAAA;;AAwBhCC,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACjB,MAAAA;AAAD,QAAgB,KAAKD,KAAzB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,OAAO,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEC,WADX;AAEI,MAAA,UAAU,EAAE,KAAKC,kBAFrB;AAGI,MAAA,KAAK,EAAE,KAAKe,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAWH;;AAtC+B;;AAyCpClB,YAAY,CAACoB,SAAb,GAAyB;AACrBf,EAAAA,WAAW,EAAEN,KAAK,CAAC;AACfO,IAAAA,OAAO,EAAEV,MAAM,CAACyB,UADD;AAEfb,IAAAA,IAAI,EAAEZ,MAAM,CAACyB,UAFE;AAGfd,IAAAA,IAAI,EAAEV,MAAM,CAACwB;AAHE,GAAD,CAAL,CAIPA,UALe;AAMrBX,EAAAA,iBAAiB,EAAEZ,IAAI,CAACuB;AANH,CAAzB;AASA,eAAe7B,OAAO,GAAGQ,YAAH,CAAtB;AACA,SAAQA,YAAY,IAAIsB,gBAAxB","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {imageComment} from '../../../../utils/comment-utils';\r\n import MaterialIcon from '../../../others/icons/material-icon';\r\n import FileInput from '../../../others/input/file';\r\n import {number,string,func,shape} from 'prop-types';\r\n\r\n class ImageComment extends Component{\r\n     state = {commentFile: '' }\r\n\r\n     commentFileChanged = async e => {\r\n         let {postDetails:{post_id,when,user},dispatch,incrementComments} = this.props;\r\n         this.setState({ commentFile: e.target.value })\r\n         await imageComment({\r\n             post_id,\r\n             dispatch,\r\n             when,\r\n             user,\r\n             file: e.target.files[0],\r\n             done: () => incrementComments()\r\n         })\r\n     }\r\n\r\n     fileLabel = () => (\r\n         <Fragment>\r\n             <div data-tip=\"Attach a file\">\r\n                 <MaterialIcon icon=\"attach_file\" />\r\n             </div> \r\n         </Fragment>\r\n     )\r\n\r\n     render(){\r\n         let {commentFile} = this.state;\r\n\r\n         return (\r\n             <div>\r\n                 <form className=\"p_comment_form\" encType=\"multipart/form-data\">\r\n                     <FileInput\r\n                         value={commentFile}\r\n                         fileChange={this.commentFileChanged}\r\n                         label={this.fileLabel}\r\n                     />\r\n                 </form>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n \r\n ImageComment.propTypes = {\r\n     postDetails: shape({\r\n         post_id: number.isRequired,\r\n         user: number.isRequired,\r\n         when: string.isRequired\r\n        }).isRequired,\r\n     incrementComments: func.isRequired   \r\n }\r\n\r\n export default connect()(ImageComment);\r\n export {ImageComment as PureImageComment}"]},"metadata":{},"sourceType":"module"}