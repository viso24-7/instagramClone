{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\group\\\\sections\\\\members\\\\members-end.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport End from '../../../others/end';\nimport Nothing from '../../../others/nothing';\nimport { bool } from 'prop-types';\n\nconst MembersEnd = ({\n  loading,\n  len,\n  name\n}) => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 6\n  }\n}, !loading && len == 0 ? /*#__PURE__*/React.createElement(Nothing, {\n  message: `${name} group has no members`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}) : !loading && len != 0 ? /*#__PURE__*/React.createElement(End, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 14\n  }\n}) : null);\n\nMembersEnd.propTypes = {\n  loading: bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  len: state.Group.members,\n  name: state.Group.group_details.name\n});\n\nexport default connect(mapStateToProps)(MembersEnd);","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/sections/members/members-end.js"],"names":["React","Fragment","connect","End","Nothing","bool","MembersEnd","loading","len","name","propTypes","isRequired","mapStateToProps","state","Group","members","group_details"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,IAAR,QAAmB,YAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,GAAT;AAAaC,EAAAA;AAAb,CAAD,kBACf,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAACF,OAAD,IAAYC,GAAG,IAAI,CAAnB,gBACE,oBAAC,OAAD;AAAS,EAAA,OAAO,EAAG,GAAEC,IAAK,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,GAEG,CAACF,OAAD,IAAYC,GAAG,IAAI,CAAnB,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,GAEA,IALR,CADJ;;AAUAF,UAAU,CAACI,SAAX,GAAuB;AACnBH,EAAAA,OAAO,EAAEF,IAAI,CAACM;AADK,CAAvB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BL,EAAAA,GAAG,EAAEK,KAAK,CAACC,KAAN,CAAYC,OADa;AAE9BN,EAAAA,IAAI,EAAEI,KAAK,CAACC,KAAN,CAAYE,aAAZ,CAA0BP;AAFF,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACU,eAAD,CAAP,CAAyBN,UAAzB,CAAf","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import End from '../../../others/end';\r\n import Nothing from '../../../others/nothing';\r\n import {bool} from 'prop-types';\r\n\r\n const MembersEnd = ({loading,len,name}) => (\r\n     <Fragment>\r\n         {!loading && len == 0 ? (\r\n            <Nothing message={`${name} group has no members`} />\r\n         ) : !loading && len != 0 ? (\r\n             <End />\r\n         ) : null }\r\n     </Fragment>\r\n )\r\n\r\n MembersEnd.propTypes = {\r\n     loading: bool.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     len: state.Group.members,\r\n     name: state.Group.group_details.name\r\n })\r\n\r\n export default connect(mapStateToProps)(MembersEnd);"]},"metadata":{},"sourceType":"module"}