{"ast":null,"code":"import _objectSpread from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import{GET_CONVERSATION,GET_CONVERSATION_MESSAGES,GET_UNREAD_MESSAGES,GET_ONLINE_USERS,GET_CON_DETAILS,CONVERSATION_ADDED,DELETE_CONVERSATION,DELETE_MESSAGE,CHANGE_LAST_MSSG,READ_CONVERSATION,UNSEND_ALL_MESSAGES,MESSAGED,GET_CONVERSATION_ABOUT,UPDATE_UNREAD_CONMVERSATIONS}from'../actions/types';var initialState={conversations:[],messages:[],conAbout:[],unreadMessages:0,onlineUsers:[],conDetails:{con_with:null,con_with_username:'',con_with_firstname:'',con_with_surname:'',isOnline:'no',lastOnline:''}};var addCon=function addCon(cons,con){cons=[].concat(_toConsumableArray(cons),[con]);return cons;};var message=function message(messages,_message){messages=[].concat(_toConsumableArray(messages),[_message]);return messages;};var changeLastMsgg=function changeLastMsgg(conversations,mssgDetails){return conversations.map(function(c){if(c.con_id===mssgDetails.con_id){c.lastMssg=mssgDetails.lastMssg;}return c;});};var readCon=function readCon(cons,con_id){return cons.map(function(c){if(c.con_id===con_id){c.unreadMessages=0;}return c;});};var deleteMssg=function deleteMssg(messages,message_id){return messages.filter(function(m){return m.message_id!==message_id;});};var unsendAllMssgs=function unsendAllMssgs(messages,mssg_by){return messages.filter(function(m){return m.mssg_by!==mssg_by;});};var deleteConversation=function deleteConversation(cons,con_id){return cons.filter(function(c){return c.con_id!==con_id;});};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var pl=action.payload;switch(action.type){case GET_CONVERSATION:return _objectSpread(_objectSpread({},state),{},{conversations:pl});case CONVERSATION_ADDED:return _objectSpread(_objectSpread({},state),{},{conversations:addCon(state.conversations,pl)});case GET_CONVERSATION_MESSAGES:return _objectSpread(_objectSpread({},state),{},{messages:pl});case MESSAGED:return _objectSpread(_objectSpread({},state),{},{messages:message(state.messages,pl)});case CHANGE_LAST_MSSG:return _objectSpread(_objectSpread({},state),{},{conversations:changeLastMsgg(state.conversations,pl,'user')});case DELETE_MESSAGE:return _objectSpread(_objectSpread({},state),{},{messages:deleteMssg(state.messages,pl)});case UNSEND_ALL_MESSAGES:return _objectSpread(_objectSpread({},state),{},{messages:unsendAllMssgs(state.messages,pl)});case DELETE_CONVERSATION:return _objectSpread(_objectSpread({},state),{},{conversations:deleteConversation(state.conversations,pl)});case GET_CONVERSATION_ABOUT:return _objectSpread(_objectSpread({},state),{},{conAbout:pl});case GET_UNREAD_MESSAGES:return _objectSpread(_objectSpread({},state),{},{unreadMessages:pl});case READ_CONVERSATION:return _objectSpread(_objectSpread({},state),{},{conversations:readCon(state.conversations,pl)});case UPDATE_UNREAD_CONMVERSATIONS:return _objectSpread(_objectSpread({},state),{},{unreadMessages:state.unreadMessages-pl.con});case GET_ONLINE_USERS:return _objectSpread(_objectSpread({},state),{},{onlineUsers:pl});case GET_CON_DETAILS:return _objectSpread(_objectSpread({},state),{},{conDetails:pl});default:return state;}});","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/reducers/Message.js"],"names":["GET_CONVERSATION","GET_CONVERSATION_MESSAGES","GET_UNREAD_MESSAGES","GET_ONLINE_USERS","GET_CON_DETAILS","CONVERSATION_ADDED","DELETE_CONVERSATION","DELETE_MESSAGE","CHANGE_LAST_MSSG","READ_CONVERSATION","UNSEND_ALL_MESSAGES","MESSAGED","GET_CONVERSATION_ABOUT","UPDATE_UNREAD_CONMVERSATIONS","initialState","conversations","messages","conAbout","unreadMessages","onlineUsers","conDetails","con_with","con_with_username","con_with_firstname","con_with_surname","isOnline","lastOnline","addCon","cons","con","message","changeLastMsgg","mssgDetails","map","c","con_id","lastMssg","readCon","deleteMssg","message_id","filter","m","unsendAllMssgs","mssg_by","deleteConversation","state","action","pl","payload","type"],"mappings":"6VAAA,OAAQA,gBAAR,CAAyBC,yBAAzB,CAAmDC,mBAAnD,CAAuEC,gBAAvE,CAAwFC,eAAxF,CAAwGC,kBAAxG,CACQC,mBADR,CAC4BC,cAD5B,CAC2CC,gBAD3C,CAC4DC,iBAD5D,CAC8EC,mBAD9E,CACkGC,QADlG,CAEQC,sBAFR,CAE+BC,4BAF/B,KAEkE,kBAFlE,CAIA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,aAAa,CAAE,EADE,CAEjBC,QAAQ,CAAE,EAFO,CAGjBC,QAAQ,CAAE,EAHO,CAIjBC,cAAc,CAAE,CAJC,CAKjBC,WAAW,CAAE,EALI,CAMjBC,UAAU,CAAE,CACRC,QAAQ,CAAE,IADF,CAERC,iBAAiB,CAAE,EAFX,CAGRC,kBAAkB,CAAE,EAHZ,CAIRC,gBAAgB,CAAE,EAJV,CAKRC,QAAQ,CAAE,IALF,CAMRC,UAAU,CAAE,EANJ,CANK,CAArB,CAgBC,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,CAAMC,GAAN,CAAc,CAC1BD,IAAI,8BAAOA,IAAP,GAAYC,GAAZ,EAAJ,CACA,MAAOD,CAAAA,IAAP,CACF,CAHD,CAKA,GAAME,CAAAA,OAAO,CAAG,iBAACd,QAAD,CAAUc,QAAV,CAAsB,CAClCd,QAAQ,8BAAOA,QAAP,GAAgBc,QAAhB,EAAR,CACA,MAAOd,CAAAA,QAAP,CACH,CAHD,CAKA,GAAMe,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAChB,aAAD,CAAgBiB,WAAhB,CAAgC,CACnD,MAAOjB,CAAAA,aAAa,CAACkB,GAAd,CAAkB,SAAAC,CAAC,CAAI,CAC1B,GAAGA,CAAC,CAACC,MAAF,GAAaH,WAAW,CAACG,MAA5B,CAAmC,CAC/BD,CAAC,CAACE,QAAF,CAAaJ,WAAW,CAACI,QAAzB,CACH,CACD,MAAOF,CAAAA,CAAP,CACH,CALM,CAAP,CAMH,CAPD,CASA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACT,IAAD,CAAMO,MAAN,CAAiB,CAC7B,MAAOP,CAAAA,IAAI,CAACK,GAAL,CAAS,SAAAC,CAAC,CAAI,CACjB,GAAGA,CAAC,CAACC,MAAF,GAAaA,MAAhB,CAAuB,CACnBD,CAAC,CAAChB,cAAF,CAAmB,CAAnB,CACH,CACD,MAAOgB,CAAAA,CAAP,CACH,CALM,CAAP,CAMH,CAPD,CASA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACtB,QAAD,CAAUuB,UAAV,QAAyBvB,CAAAA,QAAQ,CAACwB,MAAT,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,UAAF,GAAiBA,UAArB,EAAjB,CAAzB,EAAnB,CACA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC1B,QAAD,CAAU2B,OAAV,QAAsB3B,CAAAA,QAAQ,CAACwB,MAAT,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACE,OAAF,GAAcA,OAAlB,EAAjB,CAAtB,EAAvB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAChB,IAAD,CAAMO,MAAN,QAAiBP,CAAAA,IAAI,CAACY,MAAL,CAAY,SAAAN,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAF,GAAaA,MAAjB,EAAb,CAAjB,EAA3B,CAEA,eAAe,UAA+B,IAA9BU,CAAAA,KAA8B,2DAAxB/B,YAAwB,IAAXgC,CAAAA,MAAW,2CAC1C,GAAIC,CAAAA,EAAE,CAAGD,MAAM,CAACE,OAAhB,CACA,OAAOF,MAAM,CAACG,IAAd,EACI,IAAKjD,CAAAA,gBAAL,CACI,sCACO6C,KADP,MAEI9B,aAAa,CAAEgC,EAFnB,GAKH,IAAK1C,CAAAA,kBAAL,CACI,sCACOwC,KADP,MAEI9B,aAAa,CAAEY,MAAM,CAACkB,KAAK,CAAC9B,aAAP,CAAqBgC,EAArB,CAFzB,GAKH,IAAK9C,CAAAA,yBAAL,CACI,sCACO4C,KADP,MAEI7B,QAAQ,CAAE+B,EAFd,GAKJ,IAAKpC,CAAAA,QAAL,CACI,sCACOkC,KADP,MAEI7B,QAAQ,CAAEc,OAAO,CAACe,KAAK,CAAC7B,QAAP,CAAgB+B,EAAhB,CAFrB,GAKH,IAAKvC,CAAAA,gBAAL,CACI,sCACOqC,KADP,MAEI9B,aAAa,CAAEgB,cAAc,CAACc,KAAK,CAAC9B,aAAP,CAAqBgC,EAArB,CAAwB,MAAxB,CAFjC,GAKH,IAAKxC,CAAAA,cAAL,CACI,sCACOsC,KADP,MAEI7B,QAAQ,CAAEsB,UAAU,CAACO,KAAK,CAAC7B,QAAP,CAAgB+B,EAAhB,CAFxB,GAKH,IAAKrC,CAAAA,mBAAL,CACI,sCACOmC,KADP,MAEI7B,QAAQ,CAAE0B,cAAc,CAACG,KAAK,CAAC7B,QAAP,CAAgB+B,EAAhB,CAF5B,GAKJ,IAAKzC,CAAAA,mBAAL,CACI,sCACOuC,KADP,MAEI9B,aAAa,CAAE6B,kBAAkB,CAACC,KAAK,CAAC9B,aAAP,CAAqBgC,EAArB,CAFrC,GAKJ,IAAKnC,CAAAA,sBAAL,CACI,sCACOiC,KADP,MAEI5B,QAAQ,CAAE8B,EAFd,GAKH,IAAK7C,CAAAA,mBAAL,CACI,sCACO2C,KADP,MAEI3B,cAAc,CAAE6B,EAFpB,GAKJ,IAAKtC,CAAAA,iBAAL,CACI,sCACOoC,KADP,MAEI9B,aAAa,CAAEsB,OAAO,CAACQ,KAAK,CAAC9B,aAAP,CAAqBgC,EAArB,CAF1B,GAKH,IAAKlC,CAAAA,4BAAL,CACI,sCACOgC,KADP,MAEI3B,cAAc,CAAE2B,KAAK,CAAC3B,cAAN,CAAuB6B,EAAE,CAAClB,GAF9C,GAKJ,IAAK1B,CAAAA,gBAAL,CACI,sCACO0C,KADP,MAEI1B,WAAW,CAAE4B,EAFjB,GAKJ,IAAK3C,CAAAA,eAAL,CACI,sCACOyC,KADP,MAEIzB,UAAU,CAAE2B,EAFhB,GAKT,QACI,MAAOF,CAAAA,KAAP,CAtFV,CAwFH,CA1FD","sourcesContent":["import {GET_CONVERSATION,GET_CONVERSATION_MESSAGES,GET_UNREAD_MESSAGES,GET_ONLINE_USERS,GET_CON_DETAILS,CONVERSATION_ADDED,\r\n        DELETE_CONVERSATION,DELETE_MESSAGE,CHANGE_LAST_MSSG,READ_CONVERSATION,UNSEND_ALL_MESSAGES,MESSAGED,\r\n        GET_CONVERSATION_ABOUT,UPDATE_UNREAD_CONMVERSATIONS} from '../actions/types';\r\n\r\nconst initialState = {\r\n    conversations: [],\r\n    messages: [],\r\n    conAbout: [],\r\n    unreadMessages: 0,\r\n    onlineUsers: [],\r\n    conDetails: {\r\n        con_with: null,\r\n        con_with_username: '',\r\n        con_with_firstname: '',\r\n        con_with_surname: '',\r\n        isOnline: 'no',\r\n        lastOnline: ''\r\n    }\r\n }\r\n\r\n const addCon = (cons,con) => {\r\n    cons = [...cons,con]\r\n    return cons;\r\n }\r\n\r\n const message = (messages,message) => {\r\n     messages = [...messages,message];\r\n     return messages;\r\n }\r\n\r\n const changeLastMsgg = (conversations, mssgDetails) => {\r\n     return conversations.map(c => {\r\n         if(c.con_id === mssgDetails.con_id){\r\n             c.lastMssg = mssgDetails.lastMssg\r\n         }\r\n         return c;\r\n     })\r\n } \r\n\r\n const readCon = (cons,con_id) => {\r\n     return cons.map(c => {\r\n         if(c.con_id === con_id){\r\n             c.unreadMessages = 0;\r\n         }\r\n         return c;\r\n     })\r\n }\r\n\r\n const deleteMssg = (messages,message_id) => messages.filter(m => m.message_id !== message_id);\r\n const unsendAllMssgs = (messages,mssg_by) => messages.filter(m => m.mssg_by !== mssg_by);\r\n const deleteConversation = (cons,con_id) => cons.filter(c => c.con_id !== con_id);\r\n\r\n export default (state=initialState,action) => {\r\n     let pl = action.payload;\r\n     switch(action.type){\r\n         case GET_CONVERSATION:\r\n             return {\r\n                 ...state,\r\n                 conversations: pl\r\n             }\r\n\r\n          case CONVERSATION_ADDED:\r\n              return {\r\n                  ...state,\r\n                  conversations: addCon(state.conversations,pl)\r\n              }    \r\n           \r\n           case GET_CONVERSATION_MESSAGES:\r\n               return {\r\n                   ...state,\r\n                   messages: pl\r\n               }   \r\n\r\n           case MESSAGED:\r\n               return {\r\n                   ...state,\r\n                   messages: message(state.messages,pl)\r\n               }  \r\n               \r\n            case CHANGE_LAST_MSSG:\r\n                return {\r\n                    ...state,\r\n                    conversations: changeLastMsgg(state.conversations,pl,'user')\r\n                }\r\n                \r\n             case DELETE_MESSAGE:\r\n                 return {\r\n                     ...state,\r\n                     messages: deleteMssg(state.messages,pl)\r\n                 }  \r\n                 \r\n              case UNSEND_ALL_MESSAGES:\r\n                  return {\r\n                      ...state,\r\n                      messages: unsendAllMssgs(state.messages,pl)\r\n                  }    \r\n\r\n              case DELETE_CONVERSATION:\r\n                  return {\r\n                      ...state,\r\n                      conversations: deleteConversation(state.conversations,pl)\r\n                  }    \r\n                  \r\n              case GET_CONVERSATION_ABOUT:\r\n                  return {\r\n                      ...state,\r\n                      conAbout: pl\r\n                  }  \r\n               \r\n               case GET_UNREAD_MESSAGES:\r\n                   return {\r\n                       ...state,\r\n                       unreadMessages: pl\r\n                   }   \r\n\r\n               case READ_CONVERSATION:\r\n                   return {\r\n                       ...state,\r\n                       conversations: readCon(state.conversations,pl)\r\n                   }    \r\n\r\n                case UPDATE_UNREAD_CONMVERSATIONS:\r\n                    return {\r\n                        ...state,\r\n                        unreadMessages: state.unreadMessages - pl.con\r\n                    }   \r\n\r\n                case GET_ONLINE_USERS:\r\n                    return{\r\n                        ...state,\r\n                        onlineUsers: pl\r\n                    }   \r\n                \r\n                case GET_CON_DETAILS:\r\n                    return {\r\n                        ...state,\r\n                        conDetails: pl\r\n                    } \r\n                    \r\n           default:\r\n               return state;         \r\n     }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}