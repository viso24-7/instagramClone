{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\profile\\\\sections\\\\favourites\\\\favourite\\\\remove-favourite.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { post } from 'axios';\nimport { Notify } from '../../../../../utils/utilMethods/handy-notification';\nimport { removeFavourites } from '../../../../../actions/follow';\nimport { Me } from '../../../../../utils/utils';\nimport { isAdmin } from '../../../../../utils/admin-utils';\nimport SecondaryButton from '../../../../others/button/secondary-button';\nimport { number, string } from 'prop-types';\n\nconst RemoveFav = ({\n  fav_id,\n  username,\n  id,\n  dispatch\n}) => {\n  let removeFav = async e => {\n    e.preventDefault();\n    let {\n      data: {\n        success,\n        message\n      }\n    } = await post('/api/remove-favourites', {\n      fav_id\n    });\n\n    if (success) {\n      dispatch(removeFavourites(fav_id));\n      Notify({\n        value: `Removed ${username} from favourites`\n      });\n    } else {\n      Notify({\n        value: message\n      });\n    }\n  };\n\n  let btnLabel = `Remove ${isAdmin() ? 'as admin' : ''}`;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, Me(id) || isAdmin() ? /*#__PURE__*/React.createElement(SecondaryButton, {\n    label: btnLabel,\n    onClick: removeFav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }) : null);\n};\n\nRemoveFav.propTypes = {\n  fav_id: number.isRequired,\n  username: string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  id: state.User.user_details.id\n});\n\nexport default connect(mapStateToProps)(RemoveFav);\nexport { RemoveFav as PureRemoveFav };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/profile/sections/favourites/favourite/remove-favourite.js"],"names":["React","Fragment","connect","post","Notify","removeFavourites","Me","isAdmin","SecondaryButton","number","string","RemoveFav","fav_id","username","id","dispatch","removeFav","e","preventDefault","data","success","message","value","btnLabel","propTypes","isRequired","mapStateToProps","state","User","user_details","PureRemoveFav"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,OAAnB;AACA,SAAQC,MAAR,QAAqB,qDAArB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,EAAR,QAAiB,4BAAjB;AACA,SAAQC,OAAR,QAAsB,kCAAtB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,YAA5B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,QAAR;AAAiBC,EAAAA,EAAjB;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AACjD,MAAIC,SAAS,GAAG,MAAMC,CAAN,IAAW;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI;AAACC,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT;AAAN,QAA2B,MAAMlB,IAAI,CAAC,wBAAD,EAA0B;AAACS,MAAAA;AAAD,KAA1B,CAAzC;;AAEA,QAAGQ,OAAH,EAAW;AACPL,MAAAA,QAAQ,CAACV,gBAAgB,CAACO,MAAD,CAAjB,CAAR;AACAR,MAAAA,MAAM,CAAC;AAAEkB,QAAAA,KAAK,EAAG,WAAUT,QAAS;AAA7B,OAAD,CAAN;AACH,KAHD,MAGO;AACHT,MAAAA,MAAM,CAAC;AAAEkB,QAAAA,KAAK,EAAED;AAAT,OAAD,CAAN;AACH;AACJ,GAVD;;AAYA,MAAIE,QAAQ,GAAI,UAAShB,OAAO,KAAK,UAAL,GAAkB,EAAG,EAArD;AAEA,sBACK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,EAAE,CAACQ,EAAD,CAAF,IAAUP,OAAO,EAAjB,gBACG,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEgB,QAAxB;AAAkC,IAAA,OAAO,EAAEP,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,IAHR,CADL;AAOH,CAtBD;;AAwBAL,SAAS,CAACa,SAAV,GAAsB;AAClBZ,EAAAA,MAAM,EAAEH,MAAM,CAACgB,UADG;AAElBZ,EAAAA,QAAQ,EAAEH,MAAM,CAACe;AAFC,CAAtB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,EAAE,EAAEa,KAAK,CAACC,IAAN,CAAWC,YAAX,CAAwBf;AADE,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACwB,eAAD,CAAP,CAAyBf,SAAzB,CAAf;AACA,SAAQA,SAAS,IAAImB,aAArB","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {post} from 'axios';\r\n import {Notify} from '../../../../../utils/utilMethods/handy-notification';\r\n import {removeFavourites} from '../../../../../actions/follow';\r\n import {Me} from '../../../../../utils/utils';\r\n import {isAdmin} from '../../../../../utils/admin-utils';\r\n import SecondaryButton from '../../../../others/button/secondary-button';\r\n import {number,string} from 'prop-types'\r\n\r\n const RemoveFav = ({fav_id,username,id,dispatch}) => {\r\n     let removeFav = async e => {\r\n         e.preventDefault()\r\n         let {data:{success,message}} = await post('/api/remove-favourites',{fav_id})\r\n\r\n         if(success){\r\n             dispatch(removeFavourites(fav_id))\r\n             Notify({ value: `Removed ${username} from favourites`})\r\n         } else {\r\n             Notify({ value: message })\r\n         }\r\n     }\r\n\r\n     let btnLabel = `Remove ${isAdmin() ? 'as admin' : ''}`\r\n\r\n     return (\r\n          <Fragment>\r\n              {Me(id) || isAdmin() ? (\r\n                  <SecondaryButton label={btnLabel} onClick={removeFav} />\r\n              ) : null }\r\n          </Fragment>\r\n     )\r\n }\r\n\r\n RemoveFav.propTypes = {\r\n     fav_id: number.isRequired,\r\n     username: string.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     id: state.User.user_details.id\r\n })\r\n\r\n export default connect(mapStateToProps)(RemoveFav)\r\n export {RemoveFav as PureRemoveFav}"]},"metadata":{},"sourceType":"module"}