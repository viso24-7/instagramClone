{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\others\\\\suggested\\\\suggested.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ToolTip from 'react-tooltip';\nimport { getSuggestedUsers } from '../../../actions/explore';\nimport { cLoading } from '../../../utils/utils';\nimport SuggestedList from './suggested-list';\nimport IsLoading from '../isLoading';\nimport AppLink from '../link/link';\nimport FAIcon from '../icons/font-awesome-icon';\nimport { string, oneOf } from 'prop-types';\n\nclass Suggested extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.componentWillReceiveProps = () => this.setState({\n      loading: false\n    });\n\n    this.componentDidMount = () => {\n      // params: if user is on a profile of eg. noddy, then noddy won't appear on suggestions\n      let {\n        dispatch,\n        params\n      } = this.props;\n      dispatch(getSuggestedUsers(params));\n    };\n\n    this.updateUsers = e => {\n      e.preventDefault();\n      let {\n        dispatch,\n        params\n      } = this.props;\n      dispatch(getSuggestedUsers(params));\n    };\n  }\n\n  render() {\n    let {\n      loading\n    } = this.state;\n    let {\n      suggested,\n      when\n    } = this.props;\n    let len = suggested.lengthl;\n    let map_suggested = suggested.map(s => /*#__PURE__*/React.createElement(SuggestedList, Object.assign({\n      key: s.id\n    }, s, {\n      when: when,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recomm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recomm_top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }\n    }, \"Suggested\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"recomm_refresh\",\n      onClick: this.updateUsers,\n      \"data-tip\": \"refresh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(FAIcon, {\n      icon: \"sync-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(AppLink, {\n      url: \"/explore\",\n      className: \"recomm_all\",\n      \"data-tip\": \"view all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(FAIcon, {\n      icon: \"chevron-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recomm_main\",\n      style: {\n        height: loading ? 100 : 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cLoading(loading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }\n    }, len != 0 ? map_suggested : null))), /*#__PURE__*/React.createElement(ToolTip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\n\nSuggested.propTypes = {\n  params: string,\n  when: oneOf(['profile', 'home'])\n};\n\nconst mapStateToProps = state => ({\n  suggested: state.Explore.suggested\n});\n\nexport default connect(mapStateToProps)(Suggested);","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/suggested/suggested.js"],"names":["React","Component","connect","ToolTip","getSuggestedUsers","cLoading","SuggestedList","IsLoading","AppLink","FAIcon","string","oneOf","Suggested","state","loading","componentWillReceiveProps","setState","componentDidMount","dispatch","params","props","updateUsers","e","preventDefault","render","suggested","when","len","lengthl","map_suggested","map","s","id","height","propTypes","mapStateToProps","Explore"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react'\r\n import {connect} from 'react-redux';\r\n import ToolTip from 'react-tooltip';\r\n import {getSuggestedUsers} from '../../../actions/explore';\r\n import {cLoading} from '../../../utils/utils';\r\n import SuggestedList from './suggested-list';\r\n import IsLoading from '../isLoading';\r\n import AppLink from '../link/link';\r\n import FAIcon from '../icons/font-awesome-icon';\r\n import {string,oneOf} from 'prop-types';\r\n \r\n class Suggested extends Component {\r\n     state = { loading: true }\r\n\r\n     componentWillReceiveProps = () => this.setState({ loading: false })\r\n\r\n     componentDidMount = () => {\r\n     // params: if user is on a profile of eg. noddy, then noddy won't appear on suggestions\r\n        let {dispatch,params} = this.props;\r\n        dispatch(getSuggestedUsers(params))   \r\n     }\r\n\r\n     updateUsers = e => {\r\n         e.preventDefault();\r\n         let {dispatch,params} = this.props;\r\n         dispatch(getSuggestedUsers(params))\r\n     }\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {suggested,when} = this.props;\r\n         let len = suggested.lengthl\r\n         let map_suggested = suggested.map(s => (\r\n             <SuggestedList key={s.id} {...s} when={when} />\r\n         ))\r\n\r\n         return (\r\n              <div>\r\n                  <div className=\"recomm\">\r\n                     <div className=\"recomm_top\">\r\n                         <span>Suggested</span>\r\n                         <a href=\"#\" className=\"recomm_refresh\" onClick={this.updateUsers} data-tip=\"refresh\">\r\n                             <FAIcon icon=\"sync-alt\" />    \r\n                         </a> \r\n                         <AppLink url=\"/explore\" className=\"recomm_all\" data-tip=\"view all\">\r\n                             <FAIcon icon=\"chevron-right\" />\r\n                         </AppLink>\r\n                     </div>\r\n\r\n                     <div className=\"recomm_main\" style={{ height: loading ? 100 : 'inherit'}}>\r\n                         <IsLoading loading={loading} />\r\n\r\n                         <div className={cLoading(loading)}>\r\n                             {len != 0 ? map_suggested : null}\r\n                         </div>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <ToolTip />\r\n              </div>\r\n         )\r\n     }\r\n }\r\n\r\n Suggested.propTypes = {\r\n   params: string,\r\n   when: oneOf(['profile','home'])\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     suggested: state.Explore.suggested\r\n })\r\n\r\n export default connect(mapStateToProps)(Suggested)"]},"metadata":{},"sourceType":"module"}