{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{post}from'axios';import{comment}from'../actions/post';import{notify}from'../utils/utilMethods/handy-notification';import{imageCompressor,insta_notify,Me,uData,wait}from'./utils';import d from'./api/Dom';/**\r\n * A helper for dispatching actions related to comments\r\n * @param {Object} options\r\n */var commentDispatchHelper=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(options){var user,post_id,comment_id,commentExtraDetails,when,dispatch,session,username;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=options.user,post_id=options.post_id,comment_id=options.comment_id,commentExtraDetails=options.commentExtraDetails,when=options.when,dispatch=options.dispatch;session=uData('session');username=uData('username');if(when==='viewPost'){dispatch(comment(_objectSpread({comment_id:comment_id,comment_by:Number(session),comment_by_username:username,post_id:post_id,comment_ime:\"\".concat(new Date().getTime())},commentExtraDetails)));}if(!Me(user)){insta_notify({to:user,type:'comment',post_id:post_id});}case 5:case\"end\":return _context.stop();}}},_callee);}));return function commentDispatchHelper(_x){return _ref.apply(this,arguments);};}();/**\r\n * Image comment\r\n * @param {Object} options\r\n * @param {Number} options.post_id\r\n * @param {Function} options.dispatch\r\n * @param {String} options.when\r\n * @param {Number} options.user\r\n * @param {File} options.file\r\n * @param {Function} options.done\r\n */export var imageComment=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options){var post_id,dispatch,when,user,commentFile,done,form,file,d,_yield$post,_yield$post$data,success,message,filename,comment_id;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:post_id=options.post_id,dispatch=options.dispatch,when=options.when,user=options.user,commentFile=options.file,done=options.done;form=new FormData();_context2.next=4;return imageCompressor(commentFile);case 4:file=_context2.sent;d=new d('.overlay-2');d.show();wait();form.append('commentImage',file);form.append('post',post_id);_context2.next=12;return post('/api/comment-image',form);case 12:_yield$post=_context2.sent;_yield$post$data=_yield$post.data;success=_yield$post$data.success;message=_yield$post$data.message;filename=_yield$post$data.filename;comment_id=_yield$post$data.comment_id;if(!success){_context2.next=22;break;}_context2.next=21;return commentDispatchHelper({user:user,post_id:post_id,comment_id:comment_id,when:when,dispatch:dispatch,commentExtraDetails:{type:'image',commentSrc:filename,text:''}});case 21:done();case 22:d.hide();notify({value:message});case 24:case\"end\":return _context2.stop();}}},_callee2);}));return function imageComment(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * Sticker comment\r\n * @param {Object} options\r\n * @param {String} options.sticker\r\n * @param {Number} options.post_id\r\n * @param {Number} options.user\r\n * @param {String} options.when\r\n * @param {Function} options.dispatch\r\n */export var stickerComment=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options){var sticker,post_id,user,when,dispatch,done,_yield$post2,_yield$post2$data,message,success,comment_id,filename;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:sticker=options.sticker,post_id=options.post_id,user=options.user,when=options.when,dispatch=options.dispatch,done=options.done;_context3.next=3;return post('/api/comment-sticker',{sticker:sticker,post:post_id});case 3:_yield$post2=_context3.sent;_yield$post2$data=_yield$post2.data;message=_yield$post2$data.message;success=_yield$post2$data.success;comment_id=_yield$post2$data.comment_id;filename=_yield$post2$data.filename;wait();if(!success){_context3.next=14;break;}_context3.next=13;return commentDispatchHelper({user:user,post_id:post_id,comment_id:comment_id,when:when,dispatch:dispatch,commentExtraDetails:{type:'sticker',commentSrc:filename,text:''}});case 13:done();case 14:notify({value:message});case 15:case\"end\":return _context3.stop();}}},_callee3);}));return function stickerComment(_x3){return _ref3.apply(this,arguments);};}();/**\r\n * Text comment\r\n * @param {Object} options\r\n * @param {Number} options.post\r\n * @param {String} options.text\r\n * @param {String} options.when\r\n * @param {Function} options.dispatch\r\n * @param {Number} options.postOwner\r\n */export var textComment=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(options){var post_id,text,when,dispatch,postOwner,done,_yield$post3,_yield$post3$data,success,message,comment_id;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:post_id=options.post,text=options.text,when=options.when,dispatch=options.dispatch,postOwner=options.postOwner,done=options.done;_context4.next=3;return post('/api/comment-text',{post_id:post_id,text:text});case 3:_yield$post3=_context4.sent;_yield$post3$data=_yield$post3.data;success=_yield$post3$data.success;message=_yield$post3$data.message;comment_id=_yield$post3$data.comment_id;if(!success){_context4.next=12;break;}_context4.next=11;return commentDispatchHelper({user:postOwner,post_id:post_id,comment_id:comment_id,when:when,dispatch:dispatch,commentExtraDetails:{type:'text',commentSrc:'',text:text}});case 11:done();case 12:notify({value:message});case 13:case\"end\":return _context4.stop();}}},_callee4);}));return function textComment(_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/comment-utils.js"],"names":["post","comment","notify","imageCompressor","insta_notify","Me","uData","wait","d","commentDispatchHelper","options","user","post_id","comment_id","commentExtraDetails","when","dispatch","session","username","comment_by","Number","comment_by_username","comment_ime","Date","getTime","to","type","imageComment","commentFile","file","done","form","FormData","show","append","data","success","message","filename","commentSrc","text","hide","value","stickerComment","sticker","textComment","postOwner"],"mappings":"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","sourcesContent":["import {post} from 'axios';\r\nimport {comment} from '../actions/post';\r\nimport {notify} from '../utils/utilMethods/handy-notification';\r\nimport {imageCompressor,insta_notify,Me,uData,wait} from './utils';\r\nimport d from './api/Dom'\r\n\r\n/**\r\n * A helper for dispatching actions related to comments\r\n * @param {Object} options\r\n */\r\n const commentDispatchHelper = async options => {\r\n     let {user,post_id,comment_id,commentExtraDetails,when,dispatch} = options;\r\n     let session = uData('session');\r\n     let username = uData('username');\r\n\r\n     if(when === 'viewPost'){\r\n         dispatch(comment({\r\n               comment_id,\r\n               comment_by: Number(session),\r\n               comment_by_username: username,\r\n               post_id,\r\n               comment_ime: `${new Date().getTime()}`,\r\n               ...commentExtraDetails\r\n             }))\r\n     }\r\n\r\n     if(!Me(user)){\r\n         insta_notify({\r\n             to: user,\r\n             type: 'comment',\r\n             post_id\r\n         })\r\n     }\r\n }\r\n\r\n/**\r\n * Image comment\r\n * @param {Object} options\r\n * @param {Number} options.post_id\r\n * @param {Function} options.dispatch\r\n * @param {String} options.when\r\n * @param {Number} options.user\r\n * @param {File} options.file\r\n * @param {Function} options.done\r\n */\r\n export const imageComment = async options => {\r\n     let {post_id,dispatch,when,user,file:commentFile,done} = options;\r\n     let form = new FormData();\r\n     let file = await imageCompressor(commentFile);\r\n     let d = new d('.overlay-2');\r\n\r\n     d.show();\r\n     wait();\r\n\r\n     form.append('commentImage',file);\r\n     form.append('post',post_id);\r\n\r\n     let { data:{success,message,filename,comment_id}} = await post('/api/comment-image',form);\r\n     if(success){\r\n         await commentDispatchHelper({\r\n             user,\r\n             post_id,\r\n             comment_id,\r\n             when,\r\n             dispatch,\r\n             commentExtraDetails: {\r\n                 type: 'image',\r\n                 commentSrc: filename,\r\n                 text: ''\r\n             }\r\n         })\r\n\r\n         done();\r\n     }\r\n\r\n     d.hide();\r\n     notify({\r\n         value: message\r\n     })\r\n }\r\n\r\n/**\r\n * Sticker comment\r\n * @param {Object} options\r\n * @param {String} options.sticker\r\n * @param {Number} options.post_id\r\n * @param {Number} options.user\r\n * @param {String} options.when\r\n * @param {Function} options.dispatch\r\n */\r\n  export const stickerComment = async options => {\r\n      let {sticker,post_id,user,when,dispatch,done} = options;\r\n      let {data: {message,success,comment_id,filename}} = await post('/api/comment-sticker', {sticker,post: post_id});\r\n      \r\n      wait();\r\n      if(success){\r\n          await commentDispatchHelper({\r\n            user,\r\n            post_id,\r\n            comment_id,\r\n            when,\r\n            dispatch,\r\n            commentExtraDetails: {\r\n                type: 'sticker',\r\n                commentSrc: filename,\r\n                text: ''\r\n            }\r\n          })\r\n          done();\r\n      }\r\n\r\n      notify({\r\n          value: message\r\n      })\r\n  }\r\n\r\n/**\r\n * Text comment\r\n * @param {Object} options\r\n * @param {Number} options.post\r\n * @param {String} options.text\r\n * @param {String} options.when\r\n * @param {Function} options.dispatch\r\n * @param {Number} options.postOwner\r\n */\r\n export const textComment = async options => {\r\n     let {post: post_id,text,when,dispatch,postOwner,done} = options;\r\n     let {data: {success,message,comment_id}} = await post('/api/comment-text', {post_id,text});\r\n\r\n     if(success){\r\n         await commentDispatchHelper({\r\n             user: postOwner,\r\n             post_id,\r\n             comment_id,\r\n             when,\r\n             dispatch,\r\n             commentExtraDetails: {\r\n                 type: 'text',\r\n                 commentSrc: '',\r\n                 text\r\n             }\r\n         })\r\n\r\n         done();\r\n     }\r\n\r\n     notify({\r\n         value: message\r\n     });\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}