{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\others\\\\serach-followings\\\\serach-followings.js\";\nimport React, { Component } from 'react';\nimport { post } from 'axios';\nimport { uniqBy } from 'lodash';\nimport d from '../../../utils/api/Dom';\nimport TextInput from '../input/text';\nimport MapSearchForFollowingsUsers from './map-users';\nimport { string, bool, func, oneOf } from 'prop-types';\n\nclass SearchFollowings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      data: [],\n      followings: [],\n      selected: []\n    };\n\n    this.componentDidMount = async () => {\n      new d('.p_add_taggings_text').focus();\n      let {\n        data\n      } = await post('/api/serach-followings');\n      await this.setState({\n        data\n      });\n    };\n\n    this.getFollowings = async e => {\n      let value = e.target.value.trim(),\n          {\n        data\n      } = this.state,\n          ff = !value ? [] : data.filter(d => d.follow_to_username.toLowerCase().includes(value));\n      await this.setState({\n        value,\n        followings: ff\n      });\n    };\n\n    this.selectUser = (user, username) => {\n      let {\n        selected\n      } = this.state,\n          {\n        when,\n        done\n      } = this.props;\n      selected.unshift({\n        user,\n        username\n      });\n      this.setState({\n        selected,\n        value: '',\n        followings: []\n      });\n      new d('.p_add_taggings_text').focus();\n      let f_users = uniqBy(selected, 'username');\n      this.setState({\n        selected: f_users\n      }); // eslint-disable indent(a space left by indenting a line or block of text) \n\n      if (when === 'tag') {\n        done(f_users);\n      } else if (when === 'add_grp_members') {\n        done(user);\n      } else if (when == 'new_con') {\n        done(user, username);\n      }\n    };\n  }\n\n  render() {\n    let {\n      value,\n      followings\n    } = this.state;\n    let {\n      placeholder,\n      disabled\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search_followings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_add_taggings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      className: \"p_add_taggings_text\",\n      placeholder: placeholder,\n      disabled: disabled,\n      value: value,\n      valueChange: this.getFollowings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(MapSearchForFollowingsUsers, {\n      followings: followings,\n      selectUser: this.selectUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nSearchFollowings.defaultProps = {\n  placeholder: 'Search',\n  disabled: false\n};\nSearchFollowings.propTypes = {\n  when: oneOf(['tag', 'add_grp_members', 'new_con']).isRequired,\n  done: func.isRequired,\n  placeholder: string,\n  disabled: bool\n};\nexport default SearchFollowings;","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/serach-followings/serach-followings.js"],"names":["React","Component","post","uniqBy","d","TextInput","MapSearchForFollowingsUsers","string","bool","func","oneOf","SearchFollowings","state","value","data","followings","selected","componentDidMount","focus","setState","getFollowings","e","target","trim","ff","filter","follow_to_username","toLowerCase","includes","selectUser","user","username","when","done","props","unshift","f_users","render","placeholder","disabled","defaultProps","propTypes","isRequired"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {post} from 'axios';\r\n import {uniqBy} from 'lodash';\r\n import d from '../../../utils/api/Dom';\r\n import TextInput from '../input/text';\r\n import MapSearchForFollowingsUsers from './map-users';\r\n import {string,bool,func,oneOf} from 'prop-types';\r\n\r\n  class SearchFollowings extends Component {\r\n      state = {\r\n          value: '',\r\n          data: [],\r\n          followings: [],\r\n          selected: []\r\n        }\r\n \r\n     componentDidMount = async () => {\r\n         new d('.p_add_taggings_text').focus();\r\n         let {data} = await post('/api/serach-followings')\r\n         await this.setState({data})\r\n     }   \r\n\r\n     getFollowings = async e => {\r\n         let value = e.target.value.trim(),\r\n             {data} = this.state,\r\n              ff = !value ? [] : data.filter(d => d.follow_to_username.toLowerCase().includes(value));\r\n\r\n        await this.setState({\r\n            value,\r\n            followings: ff\r\n        })      \r\n     }\r\n\r\n     selectUser = (user,username) => {\r\n            let {selected} = this.state,\r\n               {when,done} = this.props;\r\n\r\n           selected.unshift({user,username});\r\n           this.setState({\r\n               selected,\r\n               value: '',\r\n               followings: []\r\n           })    \r\n\r\n          new d('.p_add_taggings_text').focus()\r\n          let f_users = uniqBy(selected,'username');\r\n          this.setState({ selected: f_users })\r\n\r\n          // eslint-disable indent(a space left by indenting a line or block of text) \r\n          if(when === 'tag'){\r\n               done(f_users);\r\n           } else if(when === 'add_grp_members'){\r\n               done(user);\r\n           } else if(when == 'new_con'){\r\n              done(user,username);\r\n          }    \r\n     }\r\n     \r\n\r\n     render(){\r\n         let {value,followings} = this.state;\r\n         let {placeholder,disabled} = this.props;\r\n\r\n        return (\r\n            <div className=\"search_followings\">\r\n                <div className=\"p_add_taggings\">\r\n                    <TextInput\r\n                        className=\"p_add_taggings_text\"\r\n                        placeholder={placeholder}\r\n                        disabled={disabled}\r\n                        value={value}\r\n                        valueChange={this.getFollowings}\r\n                    />\r\n                </div>\r\n\r\n                <MapSearchForFollowingsUsers\r\n                       followings={followings}\r\n                       selectUser={this.selectUser}\r\n                />\r\n            </div>\r\n        ) \r\n     }   \r\n  }\r\n\r\n  SearchFollowings.defaultProps = {\r\n      placeholder: 'Search',\r\n      disabled: false\r\n  }\r\n\r\n  SearchFollowings.propTypes = {\r\n      when: oneOf(['tag','add_grp_members','new_con']).isRequired,\r\n      done: func.isRequired,\r\n      placeholder: string,\r\n      disabled: bool\r\n  }\r\n\r\n  export default SearchFollowings;"]},"metadata":{},"sourceType":"module"}