{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\group\\\\group-banner\\\\top-options\\\\deleteGroup.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { post } from 'axios';\nimport { Notify } from '../../../../utils/utilMethods/handy-notification';\nimport { Me } from '../../../../utils/utils';\nimport { isAdmin } from '../../../../utils/admin-utils';\nimport Prompt from '../../../others/prompt';\nimport { func } from 'prop-types';\n\nclass DeleteGroup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deleteGroup: false,\n      deleted: false\n    };\n\n    this.showDeleteGroup = e => {\n      e.preventDefault();\n      this.setState({\n        deleteGroup: !this.state.deleteGroup\n      });\n    };\n\n    this.delete = async e => {\n      e.preventDefault();\n      let {\n        group_id\n      } = this.props.group_details;\n      await post('/api/delete-group', {\n        group: group_id\n      });\n      Notify({\n        value: 'Group deleted',\n        done: () => this.setState({\n          deleted: true\n        })\n      });\n    };\n\n    this.modalBack = () => {\n      this.setState({\n        deleteGroup: false\n      });\n      this.props.toggleoptions();\n    };\n  }\n\n  render() {\n    let {\n      group_details: {\n        admin\n      }\n    } = this.props;\n    let {\n      deleteGroup,\n      deleted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, deleted && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }), (Me(admin) || isAdmin()) && /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"p_copy_link\",\n      onClick: this.showDeleteGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Delete group \", isAdmin() && 'as admin')), deleteGroup && /*#__PURE__*/React.createElement(Prompt, {\n      title: \"Delete group\",\n      content: \"This group will be deleted.There's no undo so you wont be able to find it.\",\n      actionText: \"Delete\",\n      action: this.delete,\n      back: this.modalBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nDeleteGroup.propTypes = {\n  toggleoptions: func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group_details: state.Group.group_details\n});\n\nexport default connect(mapStateToProps)(DeleteGroup);\nexport { DeleteGroup as PureDeleteGroup };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/group-banner/top-options/deleteGroup.js"],"names":["React","Component","Fragment","connect","Redirect","post","Notify","Me","isAdmin","Prompt","func","DeleteGroup","state","deleteGroup","deleted","showDeleteGroup","e","preventDefault","setState","delete","group_id","props","group_details","group","value","done","modalBack","toggleoptions","render","admin","propTypes","isRequired","mapStateToProps","Group","PureDeleteGroup"],"mappings":"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","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {Redirect} from 'react-router';\r\n import {post} from 'axios';\r\n import {Notify} from '../../../../utils/utilMethods/handy-notification';\r\n import {Me} from '../../../../utils/utils';\r\n import {isAdmin} from '../../../../utils/admin-utils';\r\n import Prompt from '../../../others/prompt';\r\n import {func} from 'prop-types';\r\n\r\n class DeleteGroup extends Component{\r\n     state = {\r\n         deleteGroup: false,\r\n         deleted: false\r\n     }\r\n\r\n     showDeleteGroup = e => {\r\n         e.preventDefault();\r\n         this.setState({ deleteGroup: !this.state.deleteGroup})\r\n     }\r\n\r\n     delete = async e => {\r\n         e.preventDefault();\r\n         let {group_id} = this.props.group_details;\r\n         await post('/api/delete-group',{group: group_id});\r\n         Notify({\r\n             value: 'Group deleted',\r\n             done: () => this.setState({ deleted: true})\r\n         })\r\n     }\r\n\r\n      modalBack = () => {\r\n            this.setState({ deleteGroup: false})\r\n            this.props.toggleoptions()\r\n      }\r\n      \r\n     render(){\r\n        let {group_details: {admin}} = this.props;\r\n        let {deleteGroup,deleted} = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                {deleted && <Redirect to=\"/\" />}\r\n\r\n                {(Me(admin) || isAdmin()) && (\r\n                    <li>\r\n                        <a href=\"#\" className=\"p_copy_link\" onClick={this.showDeleteGroup}>\r\n                            Delete group {isAdmin() && 'as admin'}\r\n                        </a>\r\n                    </li>\r\n                )}\r\n\r\n                {deleteGroup && (\r\n                    <Prompt\r\n                       title=\"Delete group\"\r\n                       content=\"This group will be deleted.There's no undo so you wont be able to find it.\"\r\n                       actionText=\"Delete\"\r\n                       action={this.delete}\r\n                       back={this.modalBack}\r\n                    />\r\n                )}\r\n            </Fragment>\r\n        )\r\n     }\r\n }\r\n\r\n DeleteGroup.propTypes = {\r\n     toggleoptions: func.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     group_details: state.Group.group_details\r\n })\r\n\r\n export default connect(mapStateToProps)(DeleteGroup);\r\n export {DeleteGroup as PureDeleteGroup}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}