{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{post}from'axios';import{notify}from'../utils/utilMethods/handy-notification';import{conversationAdded,messaged,changeLastMssg,unsendAllMessages,deleteCon,deleteMssg}from'../actions/message';import{insta_notify,imageCompressor,uData,wait}from'./utils';import d from'./api/Dom';import Action from'./api/Action';/**\r\n * Scrolls down to bottom of the conversation\r\n */export var messageScroll=function messageScroll(){new d('.mssg_end').scrollTop();};/**\r\n * Creates a new conversation\r\n * @param {Object} options\r\n * @param {Number} options.user\r\n * @param {String} options.username\r\n * @param {Function} options.dispatch\r\n * @param {Boolean} options.updateConversations\r\n * @param {Function} options.done\r\n */export var newConversation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(options){var user,username,updateConversations,dispatch,done,_yield$post,_yield$post$data,success,message,con_id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=options.user,username=options.username,updateConversations=options.updateConversations,dispatch=options.dispatch,done=options.done;_context.next=3;return post('/api/create-new-conversation',{user:user});case 3:_yield$post=_context.sent;_yield$post$data=_yield$post.data;success=_yield$post$data.success;message=_yield$post$data.message;con_id=_yield$post$data.con_id;wait();if(success){done();if(updateConversations){dispatch(conversationAdded({key:con_id,con_id:con_id,con_with:user,con_with_username:username,lastMssg:{lastMessage:'',lastMessageBy:null,lastMessageTime:null,lastMessageType:''},unreadMssgs:0}));}insta_notify({to:user,type:'new_con'});}notify({value:message});case 11:case\"end\":return _context.stop();}}},_callee);}));return function newConversation(_x){return _ref.apply(this,arguments);};}();/**\r\n * A helper for dispatching actions related to messages\r\n * @param {Object} options\r\n */var messageDispatchHelper=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options){var con_id,con_with,message_id,message,messageType,dispatch,session;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:con_id=options.con_id,con_with=options.con_with,message_id=options.message_id,message=options.message,messageType=options.messageType,dispatch=options.dispatch;session=uData('session');dispatch(messaged({con_id:con_id,message:message,message_id:message_id,message_time:\"\".concat(new Date().getTime()),message_by:Number(session),message_to:con_with,type:messageType,status:'read'}));dispatch(changeLastMssg({con_id:con_id,lastMssg:{lastMessage:message,lastMessageBy:session,lastMessageTime:\"\".concat(new Date().getTime()),lastMessageType:messageType}}));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function messageDispatchHelper(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * Test message\r\n * @param {Object} options\r\n * @param {String} options.message\r\n * @param {Number} options.con_id\r\n * @param {Number} options.con_with\r\n * @param {Function} options.dispatch\r\n */export var textMessage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options){var message,con_id,con_with,dispatch,action,_yield$post2,_yield$post2$data,success,_message,message_id;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:message=options.message,con_id=options.con_id,con_with=options.con_with,dispatch=options.dispatch;action=new Action('.mssg_send');action.start();if(message){_context3.next=7;break;}notify({value:'Comment field is empty'});_context3.next=15;break;case 7:_context3.next=9;return post('/api/text-message',{message:_message,con_id:con_id,con_with:con_with});case 9:_yield$post2=_context3.sent;_yield$post2$data=_yield$post2.data;success=_yield$post2$data.success;_message=_yield$post2$data.message;message_id=_yield$post2$data.message_id;if(success){messageDispatchHelper({con_id:con_id,con_with:con_with,message_id:message_id,message:_message,messageType:'text',dispatch:dispatch});}else{notify({value:_message});}case 15:messageScroll();action.end('Send');case 17:case\"end\":return _context3.stop();}}},_callee3);}));return function textMessage(_x3){return _ref3.apply(this,arguments);};}();/**\r\n * Image message\r\n * @param {Object} options\r\n * @param {File}   options.file\r\n * @param {Number} options.con_id\r\n * @param {Number} options.con_with\r\n * @param {Function} options.dispatch\r\n */export var imageMessage=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(options){var messageFile,con_id,con_with,dispatch,form,file,d,_yield$post3,_yield$post3$data,success,message,message_id,filename;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:messageFile=options.file,con_id=options.con_id,con_with=options.con_with,dispatch=options.dispatch;form=new FormData();_context4.next=4;return imageCompressor(messageFile);case 4:file=_context4.sent;d=new d('.overlay-2');d.show();wait();form.append('messageFile',file);form.append('con_id',con_id);form.append('con_with',con_with);_context4.next=13;return post('/api/image-message',form);case 13:_yield$post3=_context4.sent;_yield$post3$data=_yield$post3.data;success=_yield$post3$data.success;message=_yield$post3$data.message;message_id=_yield$post3$data.message_id;filename=_yield$post3$data.filename;if(success){messageDispatchHelper({con_id:con_id,con_with:con_with,message_id:message_id,message:filename,messageType:'image',dispatch:dispatch});}messageScroll();d.hide();notify({value:message});case 23:case\"end\":return _context4.stop();}}},_callee4);}));return function imageMessage(_x4){return _ref4.apply(this,arguments);};}();/**\r\n * Sticker message\r\n * @param {Object} options\r\n * @param {Number} options.con_id\r\n * @param {Number} options.con_with\r\n * @param {String} options.sticker\r\n * @param {Function} options.dispatch\r\n */export var stickerMessage=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(options){var con_id,con_with,sticker,dispatch,_yield$post4,_yield$post4$data,success,message,filename,message_id;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:con_id=options.con_id,con_with=options.con_with,sticker=options.sticker,dispatch=options.dispatch;_context5.next=3;return post('/api/sticker-message',{con_id:con_id,con_with:con_with,sticker:sticker});case 3:_yield$post4=_context5.sent;_yield$post4$data=_yield$post4.data;success=_yield$post4$data.success;message=_yield$post4$data.message;filename=_yield$post4$data.filename;message_id=_yield$post4$data.message_id;wait();if(success){messageDispatchHelper({con_id:con_id,con_with:con_with,message_id:message_id,message:filename,messageType:'sticker',dispatch:dispatch});}notify({value:message});messageScroll();case 13:case\"end\":return _context5.stop();}}},_callee5);}));return function stickerMessage(_x5){return _ref5.apply(this,arguments);};}();/** Unsend all messages\r\n * @param {Object} options\r\n * @param {Number} options.con_id\r\n * @param {Function} options.dispatch\r\n */export var deleteYourMessages=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(options){var con_id,dispatch,session,_yield$post5,_yield$post5$data,success,message;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:con_id=options.con_id,dispatch=options.dispatch;session=uData('session');wait();_context6.next=5;return post('/api/unsend-all-mssgs',{con_id:con_id});case 5:_yield$post5=_context6.sent;_yield$post5$data=_yield$post5.data;success=_yield$post5$data.success;message=_yield$post5$data.message;notify({value:message});return _context6.abrupt(\"return\",success?dispatch(unsendAllMessages(session)):null);case 11:case\"end\":return _context6.stop();}}},_callee6);}));return function deleteYourMessages(_x6){return _ref6.apply(this,arguments);};}();/**\r\n * Deletes a conversation\r\n * @param {Object} options\r\n * @param {Number} options.con_id\r\n * @param {Function} options.dispatch\r\n * @param {Function} options.hideConversation\r\n */export var deleteConversation=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(options){var con_id,hideConversation,dispatch,_yield$post6,_yield$post6$data,success,message;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:con_id=options.con_id,hideConversation=options.hideConversation,dispatch=options.dispatch;_context7.next=3;return post('/api/delete-conversation',{con_id:con_id});case 3:_yield$post6=_context7.sent;_yield$post6$data=_yield$post6.data;success=_yield$post6$data.success;message=_yield$post6$data.message;wait();if(success){dispatch(deleteCon(con_id));hideConversation();}notify({value:message});case 10:case\"end\":return _context7.stop();}}},_callee7);}));return function deleteConversation(_x7){return _ref7.apply(this,arguments);};}();/**\r\n *\r\n * @param {Object} options\r\n * @param {Number} options.message_id\r\n * @param {String} options.message\r\n * @param {String} options.type\r\n * @param {Function} options.dispatch\r\n * @param {Function} options.done\r\n */export var deleteMessage=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(options){var message,message_id,type,dispatch,done,_yield$post7,data;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:message=options.message,message_id=options.message_id,type=options.type,dispatch=options.dispatch,done=options.done;_context8.next=3;return post('/api/delete-message',{message_id:message_id,message:message,type:type});case 3:_yield$post7=_context8.sent;data=_yield$post7.data;if(data.success){dispatch(deleteMssg(message_id));done();}notify({value:data.message});case 7:case\"end\":return _context8.stop();}}},_callee8);}));return function deleteMessage(_x8){return _ref8.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/message-utils.js"],"names":["post","notify","conversationAdded","messaged","changeLastMssg","unsendAllMessages","deleteCon","deleteMssg","insta_notify","imageCompressor","uData","wait","d","Action","messageScroll","scrollTop","newConversation","options","user","username","updateConversations","dispatch","done","data","success","message","con_id","key","con_with","con_with_username","lastMssg","lastMessage","lastMessageBy","lastMessageTime","lastMessageType","unreadMssgs","to","type","value","messageDispatchHelper","message_id","messageType","session","message_time","Date","getTime","message_by","Number","message_to","status","textMessage","action","start","end","imageMessage","messageFile","file","form","FormData","show","append","filename","hide","stickerMessage","sticker","deleteYourMessages","deleteConversation","hideConversation","deleteMessage"],"mappings":"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","sourcesContent":["import {post} from 'axios';\r\nimport {notify} from '../utils/utilMethods/handy-notification';\r\nimport {conversationAdded,messaged,changeLastMssg,unsendAllMessages,deleteCon,deleteMssg} from '../actions/message';\r\nimport {insta_notify,imageCompressor,uData,wait} from './utils';\r\nimport d from './api/Dom';\r\nimport Action from './api/Action';\r\n\r\n/**\r\n * Scrolls down to bottom of the conversation\r\n */\r\n export const messageScroll = () => {\r\n     new d('.mssg_end').scrollTop()\r\n }\r\n\r\n/**\r\n * Creates a new conversation\r\n * @param {Object} options\r\n * @param {Number} options.user\r\n * @param {String} options.username\r\n * @param {Function} options.dispatch\r\n * @param {Boolean} options.updateConversations\r\n * @param {Function} options.done\r\n */\r\n export const newConversation = async options => {\r\n     let {user,username,updateConversations,dispatch,done} = options;\r\n     let {data: {success,message,con_id}} = await post('/api/create-new-conversation',{user});\r\n     wait();\r\n\r\n     if(success){\r\n         done();\r\n         if(updateConversations){\r\n             dispatch(conversationAdded({\r\n                 key: con_id,\r\n                 con_id,\r\n                 con_with: user,\r\n                 con_with_username: username,\r\n                 lastMssg: {\r\n                     lastMessage: '',\r\n                     lastMessageBy: null,\r\n                     lastMessageTime: null,\r\n                     lastMessageType: ''\r\n                 },\r\n                 unreadMssgs: 0\r\n             }))\r\n         }\r\n\r\n         insta_notify({\r\n             to: user,\r\n             type: 'new_con'\r\n         })\r\n     }\r\n\r\n     notify({ value: message})\r\n }\r\n\r\n/**\r\n * A helper for dispatching actions related to messages\r\n * @param {Object} options\r\n */\r\n const messageDispatchHelper = async options => {\r\n     let {con_id,con_with,message_id,message,messageType,dispatch} = options;\r\n     let session = uData('session');\r\n\r\n     dispatch(messaged({\r\n         con_id,\r\n         message,\r\n         message_id,\r\n         message_time: `${new Date().getTime()}`,\r\n         message_by: Number(session),\r\n         message_to: con_with,\r\n         type: messageType,\r\n         status: 'read'\r\n     }));\r\n\r\n     dispatch(changeLastMssg({\r\n         con_id,\r\n         lastMssg: {\r\n             lastMessage: message,\r\n             lastMessageBy: session,\r\n             lastMessageTime: `${new Date().getTime()}`,\r\n             lastMessageType: messageType\r\n         }\r\n     }));\r\n }\r\n\r\n/**\r\n * Test message\r\n * @param {Object} options\r\n * @param {String} options.message\r\n * @param {Number} options.con_id\r\n * @param {Number} options.con_with\r\n * @param {Function} options.dispatch\r\n */\r\n export const textMessage = async options => {\r\n     let {message,con_id,con_with,dispatch} = options;\r\n     let action = new Action('.mssg_send');\r\n\r\n     action.start();\r\n     if(!message){\r\n         notify({value: 'Comment field is empty'})\r\n     } else {\r\n         let {data: {success,message,message_id}} = await post('/api/text-message',{message,con_id,con_with});\r\n         if(success){\r\n             messageDispatchHelper({\r\n                 con_id,\r\n                 con_with,\r\n                 message_id,\r\n                 message,\r\n                 messageType: 'text',\r\n                 dispatch\r\n             })\r\n         } else{\r\n             notify({ value: message})\r\n         } \r\n     }\r\n\r\n     messageScroll();\r\n     action.end('Send');\r\n }\r\n\r\n /**\r\n * Image message\r\n * @param {Object} options\r\n * @param {File}   options.file\r\n * @param {Number} options.con_id\r\n * @param {Number} options.con_with\r\n * @param {Function} options.dispatch\r\n */\r\n export const imageMessage = async options => {\r\n     let {file: messageFile,con_id,con_with,dispatch} = options;\r\n     let form = new FormData();\r\n     let file = await imageCompressor(messageFile);\r\n     let d = new d('.overlay-2');\r\n\r\n     d.show();\r\n     wait();\r\n\r\n     form.append('messageFile',file);\r\n     form.append('con_id',con_id);\r\n     form.append('con_with', con_with);\r\n\r\n     let {data:{success,message,message_id,filename}} = await post('/api/image-message',form);\r\n     if(success){\r\n         messageDispatchHelper({\r\n             con_id,\r\n             con_with,\r\n             message_id,\r\n             message: filename,\r\n             messageType: 'image',\r\n             dispatch\r\n         })\r\n     }\r\n\r\n     messageScroll();\r\n     d.hide();\r\n     notify({ value: message});\r\n }\r\n\r\n/**\r\n * Sticker message\r\n * @param {Object} options\r\n * @param {Number} options.con_id\r\n * @param {Number} options.con_with\r\n * @param {String} options.sticker\r\n * @param {Function} options.dispatch\r\n */\r\n export const stickerMessage = async options => {\r\n     let {con_id,con_with,sticker,dispatch} = options;\r\n     let {data: {success,message,filename,message_id}} = await post('/api/sticker-message', {con_id,con_with,sticker});\r\n\r\n     wait();\r\n     if(success){\r\n         messageDispatchHelper({\r\n             con_id,\r\n             con_with,\r\n             message_id,\r\n             message: filename,\r\n             messageType: 'sticker',\r\n             dispatch\r\n         })\r\n     }\r\n\r\n    notify({ value: message});\r\n    messageScroll(); \r\n }\r\n\r\n/** Unsend all messages\r\n * @param {Object} options\r\n * @param {Number} options.con_id\r\n * @param {Function} options.dispatch\r\n */\r\n export const deleteYourMessages = async options => {\r\n     let {con_id,dispatch} = options;\r\n     let session = uData('session');\r\n\r\n     wait();\r\n     let {data: {success,message}} = await post('/api/unsend-all-mssgs',{con_id});\r\n     notify({ value: message})\r\n     return success ? dispatch(unsendAllMessages(session)) : null;\r\n }\r\n\r\n/**\r\n * Deletes a conversation\r\n * @param {Object} options\r\n * @param {Number} options.con_id\r\n * @param {Function} options.dispatch\r\n * @param {Function} options.hideConversation\r\n */\r\n export const deleteConversation = async options => {\r\n     let {con_id,hideConversation,dispatch} = options;\r\n     let {data: {success,message}} = await post('/api/delete-conversation',{con_id});\r\n\r\n     wait();\r\n     if(success){\r\n         dispatch(deleteCon(con_id));\r\n         hideConversation();\r\n     }\r\n\r\n     notify({value: message})\r\n }\r\n\r\n/**\r\n *\r\n * @param {Object} options\r\n * @param {Number} options.message_id\r\n * @param {String} options.message\r\n * @param {String} options.type\r\n * @param {Function} options.dispatch\r\n * @param {Function} options.done\r\n */\r\n export const deleteMessage = async options => {\r\n     let {message,message_id,type,dispatch,done} = options;\r\n     let {data} = await post('/api/delete-message',{message_id,message,type});\r\n     \r\n     if(data.success){\r\n         dispatch(deleteMssg(message_id));\r\n         done();\r\n     }\r\n\r\n     notify({ value: data.message})\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}