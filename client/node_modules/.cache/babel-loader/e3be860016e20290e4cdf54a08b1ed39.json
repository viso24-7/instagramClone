{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\profile\\\\sections\\\\groups\\\\groups.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport classNames from 'classnames';\nimport { getUserGroups } from '../../../../actions/group';\nimport { bottomScroll, cLoading } from '../../../../utils/utils';\nimport NoUserGroups from './no-user-groups';\nimport UserGroup from './group/group';\nimport Title from '../../../others/title';\nimport IsLoading from '../../../others/isLoading';\nimport MonHeader from '../../../others/m-on/mon-header';\nimport { string } from 'prop-types';\n\nclass UserGroups extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.componentWillReceiveProps = ({\n      user_details,\n      dispatch\n    }) => {\n      this.setState({\n        loading: false\n      });\n      return this.props.user_details != user_details ? dispatch(getUserGroups(user_details.id)) : null;\n    };\n\n    this.componentDidMount = () => {\n      let {\n        user_details: {\n          id\n        },\n        dispatch\n      } = this.props;\n      dispatch(getUserGroups(id));\n    };\n\n    this.componentDidUpdate = () => bottomScroll();\n  }\n\n  render() {\n    let {\n      loading\n    } = this.state;\n    let {\n      param: {\n        username\n      },\n      groups\n    } = this.props;\n    let len = groups.length;\n    let map_groups = groups.map(g => /*#__PURE__*/React.createElement(UserGroup, Object.assign({\n      key: g.group_id\n    }, g, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      value: `@${username}'s groups`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      className: cLoading(loading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper_s pro_s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames({\n        m_div: len != 0,\n        m_no_div: len === 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(MonHeader, {\n      len: len,\n      forWhat: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }\n    }, len !== 0 && map_groups))), /*#__PURE__*/React.createElement(NoUserGroups, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }\n    })));\n  }\n\n}\n\nUserGroups.propTypes = {\n  param: string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user_details: state.User.user_details,\n  groups: state.Group.userGroups\n});\n\nexport default connect(mapStateToProps)(UserGroups);\nexport { UserGroups as PureUserGroups };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/profile/sections/groups/groups.js"],"names":["React","Component","connect","FadeIn","classNames","getUserGroups","bottomScroll","cLoading","NoUserGroups","UserGroup","Title","IsLoading","MonHeader","string","UserGroups","state","loading","componentWillReceiveProps","user_details","dispatch","setState","props","id","componentDidMount","componentDidUpdate","render","param","username","groups","len","length","map_groups","map","g","group_id","m_div","m_no_div","propTypes","isRequired","mapStateToProps","User","Group","userGroups","PureUserGroups"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import classNames from 'classnames';\r\n import {getUserGroups} from '../../../../actions/group';\r\n import {bottomScroll,cLoading} from '../../../../utils/utils';\r\n import NoUserGroups from './no-user-groups';\r\n import UserGroup from './group/group';\r\n import Title from '../../../others/title';\r\n import IsLoading from '../../../others/isLoading';\r\n import MonHeader from '../../../others/m-on/mon-header';\r\n import {string} from 'prop-types';\r\n\r\n\r\n class UserGroups extends Component {\r\n     state = {loading:true}\r\n\r\n     componentWillReceiveProps = ({user_details,dispatch}) => {\r\n         this.setState({loading: false })\r\n         return this.props.user_details != user_details ? dispatch(getUserGroups(user_details.id)) : null;\r\n     }\r\n\r\n     componentDidMount = () => {\r\n         let {user_details:{id},dispatch} = this.props;\r\n         dispatch(getUserGroups(id))\r\n     }\r\n\r\n     componentDidUpdate = () => bottomScroll()\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {param:{username},groups} = this.props;\r\n         let len = groups.length;\r\n         let map_groups = groups.map(g => <UserGroup key={g.group_id} {...g} />)\r\n\r\n         return (\r\n             <div>\r\n                 <Title value={`@${username}'s groups`} />\r\n                 <IsLoading loading={loading} />\r\n\r\n                 <FadeIn duration=\"300ms\" className={cLoading(loading)}>\r\n                     <div className=\"wrapper_s pro_s\">\r\n                         <div className={classNames({ m_div: len != 0, m_no_div: len === 0})}>\r\n                             <MonHeader len={len} forWhat=\"group\" />\r\n                             <div className=\"m_wrapper\">{len !== 0 && map_groups}</div>\r\n                         </div>\r\n                      </div>\r\n\r\n                     <NoUserGroups />\r\n                 </FadeIn>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n UserGroups.propTypes = {\r\n     param: string.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     user_details: state.User.user_details,\r\n     groups: state.Group.userGroups\r\n })\r\n\r\n export default connect(mapStateToProps)(UserGroups)\r\n export {UserGroups as PureUserGroups}"]},"metadata":{},"sourceType":"module"}