{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import qs from'query-string';import{post}from'axios';import{uData}from'./utils';import{notify}from'../utils/utilMethods/handy-notification';import Action from'./api/Action';/**\r\n * For submit to check if user is the admin\r\n * @param {Object} options\r\n * @param {String} options.password\r\n * @param {String} options.search\r\n */export var adminSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(options){var password,search,toUrl,action,_yield$post,_yield$post$data,message,success,to;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:password=options.password,search=options.search,toUrl=qs.parse(search),action=new Action('.al_submit');if(password){_context.next=5;break;}notify({value:'Password field is missing'});_context.next=15;break;case 5:action.start('Please wait ...');_context.next=8;return post('/api/check-is-admin',{password:password});case 8:_yield$post=_context.sent;_yield$post$data=_yield$post.data;message=_yield$post$data.message;success=_yield$post$data.success;to=toUrl.to?toUrl.to:'/is-admin';notify({value:message,done:function done(){return success?window.location.href=to:null;}});action.end('Continue as admin');case 15:case\"end\":return _context.stop();}}},_callee);}));return function adminSubmit(_x){return _ref.apply(this,arguments);};}();/**\r\n * Returns if user is admin of the app\r\n */export var isAdmin=function isAdmin(){return uData('isadmin')==='true'?true:false;};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/admin-utils.js"],"names":["qs","post","uData","notify","Action","adminSubmit","options","password","search","toUrl","parse","action","value","start","data","message","success","to","done","window","location","href","end","isAdmin"],"mappings":"mVAAA,MAAOA,CAAAA,EAAP,KAAe,cAAf,CACA,OAAQC,IAAR,KAAmB,OAAnB,CACA,OAAQC,KAAR,KAAoB,SAApB,CACA,OAAQC,MAAR,KAAqB,yCAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAGA;;;;;GAMC,MAAO,IAAMC,CAAAA,WAAW,0FAAG,iBAAMC,OAAN,mMAClBC,QADkB,CACCD,OADD,CAClBC,QADkB,CACTC,MADS,CACCF,OADD,CACTE,MADS,CAEvBC,KAFuB,CAEfT,EAAE,CAACU,KAAH,CAASF,MAAT,CAFe,CAGvBG,MAHuB,CAGd,GAAIP,CAAAA,MAAJ,CAAW,YAAX,CAHc,IAKnBG,QALmB,yBAMnBJ,MAAM,CAAC,CAAES,KAAK,CAAE,2BAAT,CAAD,CAAN,CANmB,8BAQnBD,MAAM,CAACE,KAAP,CAAa,iBAAb,EARmB,sBASkBZ,CAAAA,IAAI,CAAC,qBAAD,CAAuB,CAACM,QAAQ,CAARA,QAAD,CAAvB,CATtB,+DASdO,IATc,CASRC,OATQ,kBASRA,OATQ,CASAC,OATA,kBASAA,OATA,CAUfC,EAVe,CAUVR,KAAK,CAACQ,EAAN,CAAWR,KAAK,CAACQ,EAAjB,CAAsB,WAVZ,CAYnBd,MAAM,CAAC,CACHS,KAAK,CAAEG,OADJ,CAEHG,IAAI,CAAE,sBAAOF,CAAAA,OAAO,CAAIG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuBJ,EAA3B,CAAiC,IAA/C,EAFH,CAAD,CAAN,CAKAN,MAAM,CAACW,GAAP,CAAW,mBAAX,EAjBmB,uDAAH,kBAAXjB,CAAAA,WAAW,4CAAjB,CAqBP;;GAGA,MAAO,IAAMkB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,SAAOrB,CAAAA,KAAK,CAAC,SAAD,CAAL,GAAqB,MAArB,CAA8B,IAA9B,CAAqC,KAA5C,EAAhB","sourcesContent":["import qs from 'query-string';\r\nimport {post} from 'axios';\r\nimport {uData} from './utils'\r\nimport {notify }from '../utils/utilMethods/handy-notification';\r\nimport Action from './api/Action';\r\n\r\n\r\n/**\r\n * For submit to check if user is the admin\r\n * @param {Object} options\r\n * @param {String} options.password\r\n * @param {String} options.search\r\n */\r\n export const adminSubmit = async options => {\r\n     let {password,search} = options,\r\n     toUrl = qs.parse(search),\r\n     action = new Action('.al_submit');\r\n\r\n     if(!password){\r\n         notify({ value: 'Password field is missing'})\r\n     }else{\r\n         action.start('Please wait ...');\r\n         let {data:{message,success}} = await post('/api/check-is-admin',{password});\r\n         let to = toUrl.to ? toUrl.to : '/is-admin'\r\n\r\n         notify({\r\n             value: message,\r\n             done: () => (success ? (window.location.href = to) : null)\r\n         });\r\n\r\n         action.end('Continue as admin');\r\n     }\r\n } \r\n\r\n /**\r\n * Returns if user is admin of the app\r\n */\r\n export const isAdmin = () => (uData('isadmin') === 'true' ? true : false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}