{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\profile\\\\sections\\\\tagged\\\\tagged.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport classNames from 'classnames';\nimport { getTaggedPosts } from '../../../../actions/post';\nimport { Me, bottomScroll, cLoading } from '../../../../utils/utils';\nimport Post from '../../../post/post/post';\nimport MapPosts from '../../../post/map-posts/map-posts';\nimport Title from '../../../others/title';\nimport IsLoading from '../../../others/isLoading';\nimport SectionsEnd from '../../../others/sections-end';\nimport Suggested from '../../../others/suggested/suggested';\nimport { string } from 'prop-types';\n\nclass Tagged extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.componentWillReceiveProps = ({\n      user_details,\n      dispatch\n    }) => {\n      this.setState({\n        loading: false\n      });\n      return this.props.user_details != user_details ? dispatch(getTaggedPosts(user_details.id)) : null;\n    };\n\n    this.componentDidMount = () => {\n      let {\n        user_details: {\n          id\n        },\n        dispatch\n      } = this.props;\n      dispatch(getTaggedPosts(id));\n    };\n\n    this.componentDidUpdate = () => bottomScroll();\n  }\n\n  render() {\n    let {\n      loading\n    } = this.state;\n    let {\n      user_details: {\n        id\n      },\n      param: username,\n      tagged\n    } = this.props;\n    let len = tagged.length;\n    let map_tagged = tagged.map(t => /*#__PURE__*/React.createElement(Post, Object.assign({\n      key: t.post_id\n    }, t, {\n      when: \"tagged\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      value: `${username}'s tagged posts`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('wrapper_s', cLoading(loading)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper_k\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Suggested, {\n      when: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper_p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(MapPosts, {\n      posts: map_tagged,\n      nothingMssg: Me(id) ? 'You are not tagged in any post' : `${username} is not tagged in any post`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }\n    }))), /*#__PURE__*/React.createElement(SectionsEnd, {\n      len: len,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }\n    })));\n  }\n\n}\n\nTagged.propTypes = {\n  param: string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user_details: state.User.user_details,\n  tagged: state.Post.tagged\n});\n\nexport default connect(mapStateToProps)(Tagged);\nexport { Tagged as Puretagged };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/profile/sections/tagged/tagged.js"],"names":["React","Component","connect","FadeIn","classNames","getTaggedPosts","Me","bottomScroll","cLoading","Post","MapPosts","Title","IsLoading","SectionsEnd","Suggested","string","Tagged","state","loading","componentWillReceiveProps","user_details","dispatch","setState","props","id","componentDidMount","componentDidUpdate","render","param","username","tagged","len","length","map_tagged","map","t","post_id","propTypes","isRequired","mapStateToProps","User","Puretagged"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react'\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import classNames from 'classnames';\r\n import {getTaggedPosts} from '../../../../actions/post';\r\n import {Me,bottomScroll,cLoading} from '../../../../utils/utils';\r\n import Post from '../../../post/post/post';\r\n import MapPosts from '../../../post/map-posts/map-posts'\r\n import Title from '../../../others/title';\r\n import IsLoading from '../../../others/isLoading'\r\n import SectionsEnd from '../../../others/sections-end'\r\n import Suggested from '../../../others/suggested/suggested';\r\n import {string} from 'prop-types';\r\n\r\n class Tagged extends Component {\r\n     state = { loading: true }\r\n\r\n     componentWillReceiveProps = ({user_details,dispatch}) => {\r\n         this.setState({ loading: false });\r\n         return this.props.user_details != user_details ? dispatch(getTaggedPosts(user_details.id)) : null;\r\n     }\r\n\r\n     componentDidMount = () => {\r\n        let {user_details:{id},dispatch} = this.props;\r\n        dispatch(getTaggedPosts(id))\r\n     }\r\n\r\n     componentDidUpdate = () => bottomScroll()\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {user_details:{id},param:username,tagged} = this.props;\r\n         let len = tagged.length;\r\n         let map_tagged = tagged.map(t => <Post key={t.post_id} {...t} when=\"tagged\" />)\r\n\r\n         return (\r\n             <div>\r\n                 <FadeIn duration=\"300ms\">\r\n                     <IsLoading loading={loading} />\r\n                     <Title value={`${username}'s tagged posts`} />\r\n\r\n                     <div className={classNames('wrapper_s',cLoading(loading))}>\r\n                         <div className=\"wrapper_k\">\r\n                             <Suggested when=\"profile\" />\r\n                         </div>\r\n\r\n                         <div className=\"wrapper_p\">\r\n                             <MapPosts posts={map_tagged} nothingMssg={Me(id) ? 'You are not tagged in any post' : `${username} is not tagged in any post`} />\r\n                         </div>\r\n                     </div>\r\n\r\n                     <SectionsEnd len={len} loading={loading} />\r\n                 </FadeIn>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n Tagged.propTypes = {\r\n     param: string.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     user_details: state.User.user_details,\r\n     tagged: state.Post.tagged\r\n })\r\n\r\n export default connect(mapStateToProps)(Tagged)\r\n export {Tagged as Puretagged}"]},"metadata":{},"sourceType":"module"}