{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\text-comment\\\\text-comment.js\";\nimport React, { Component, Fragment } from 'react';\nimport TextCommentModal from './comment-modal';\nimport { number, string, func, shape } from 'prop-types';\nexport default class TextComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: false\n    };\n  }\n\n  render() {\n    let {\n      comment\n    } = false;\n    let {\n      postDetails: {\n        post_id,\n        user,\n        when\n      },\n      incrementComments\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_cit_teaser\",\n      onClick: () => this.setState({\n        comment: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 22\n      }\n    }, \"Want to comment\")), comment && /*#__PURE__*/React.createElement(TextCommentModal, {\n      post: post_id,\n      postOwner: user,\n      back: () => this.setState({\n        comment: false\n      }),\n      incrementComments: incrementComments,\n      when: when,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\nTextComment.propTypes = {\n  postDetails: shape({\n    post_id: number.isRequired,\n    user: number.isRequired,\n    when: string.isRequired\n  }).isRequired,\n  incrementComments: func.isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/comment/text-comment/text-comment.js"],"names":["React","Component","Fragment","TextCommentModal","number","string","func","shape","TextComment","state","comment","render","postDetails","post_id","user","when","incrementComments","props","setState","propTypes","isRequired"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,gBAAP,MAA6B,iBAA7B;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,IAAtB,EAA2BC,KAA3B,QAAuC,YAAvC;AAEA,eAAe,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CQ,KAD+C,GACvC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADuC;AAAA;;AAG/CC,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACD,MAAAA;AAAD,QAAY,KAAhB;AACA,QAAI;AAACE,MAAAA,WAAW,EAAC;AAACC,QAAAA,OAAD;AAASC,QAAAA,IAAT;AAAcC,QAAAA;AAAd,OAAb;AAAiCC,MAAAA;AAAjC,QAAsD,KAAKC,KAA/D;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAKKA,OAAO,iBACJ,oBAAC,gBAAD;AACI,MAAA,IAAI,EAAEG,OADV;AAEI,MAAA,SAAS,EAAEC,IAFf;AAGI,MAAA,IAAI,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd,CAHhB;AAII,MAAA,iBAAiB,EAAEM,iBAJvB;AAKI,MAAA,IAAI,EAAED,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADJ;AAiBH;;AAxB8C;AA2BnDP,WAAW,CAACW,SAAZ,GAAwB;AACpBP,EAAAA,WAAW,EAAEL,KAAK,CAAC;AACfM,IAAAA,OAAO,EAAET,MAAM,CAACgB,UADD;AAEfN,IAAAA,IAAI,EAAEV,MAAM,CAACgB,UAFE;AAGfL,IAAAA,IAAI,EAAEV,MAAM,CAACe;AAHE,GAAD,CAAL,CAINA,UALa;AAMpBJ,EAAAA,iBAAiB,EAAEV,IAAI,CAACc;AANJ,CAAxB","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import TextCommentModal from './comment-modal';\r\n import {number,string,func,shape} from 'prop-types';\r\n\r\n export default class TextComment extends Component {\r\n     state = { comment: false }\r\n\r\n     render(){\r\n         let {comment} = false;\r\n         let {postDetails:{post_id,user,when},incrementComments} = this.props;\r\n\r\n         return (\r\n             <Fragment>\r\n                 <div className=\"p_cit_teaser\" onClick={() => this.setState({ comment: true })}>\r\n                     <span>Want to comment</span>\r\n                 </div>\r\n\r\n                 {comment && (\r\n                     <TextCommentModal\r\n                         post={post_id}\r\n                         postOwner={user}\r\n                         back={() => this.setState({ comment: false })}\r\n                         incrementComments={incrementComments}\r\n                         when={when}\r\n                     />\r\n                 )}\r\n             </Fragment>\r\n         )\r\n     }\r\n }\r\n\r\n TextComment.propTypes = {\r\n     postDetails: shape({\r\n         post_id: number.isRequired,\r\n         user: number.isRequired,\r\n         when: string.isRequired\r\n         }).isRequired,\r\n     incrementComments: func.isRequired    \r\n }"]},"metadata":{},"sourceType":"module"}