{"ast":null,"code":"import _classCallCheck from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import ToolTip from'react-tooltip';import{getSuggestedUsers}from'../../../actions/explore';import{cLoading}from'../../../utils/utils';import SuggestedList from'./suggested-list';import IsLoading from'../isLoading';import AppLink from'../link/link';import FAIcon from'../icons/font-awesome-icon';var Suggested=/*#__PURE__*/function(_Component){_inherits(Suggested,_Component);var _super=_createSuper(Suggested);function Suggested(){var _this;_classCallCheck(this,Suggested);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loading:true};_this.componentWillReceiveProps=function(){return _this.setState({loading:false});};_this.componentDidMount=function(){// params: if user is on a profile of eg. noddy, then noddy won't appear on suggestions\nvar _this$props=_this.props,dispatch=_this$props.dispatch,params=_this$props.params;dispatch(getSuggestedUsers(params));};_this.updateUsers=function(e){e.preventDefault();var _this$props2=_this.props,dispatch=_this$props2.dispatch,params=_this$props2.params;dispatch(getSuggestedUsers(params));};return _this;}_createClass(Suggested,[{key:\"render\",value:function render(){var loading=this.state.loading;var _this$props3=this.props,suggested=_this$props3.suggested,when=_this$props3.when;var len=suggested.lengthl;var map_suggested=suggested.map(function(s){return/*#__PURE__*/React.createElement(SuggestedList,Object.assign({key:s.id},s,{when:when}));});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"recomm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"recomm_top\"},/*#__PURE__*/React.createElement(\"span\",null,\"Suggested\"),/*#__PURE__*/React.createElement(\"a\",{href:\"#\",className:\"recomm_refresh\",onClick:this.updateUsers,\"data-tip\":\"refresh\"},/*#__PURE__*/React.createElement(FAIcon,{icon:\"sync-alt\"})),/*#__PURE__*/React.createElement(AppLink,{url:\"/explore\",className:\"recomm_all\",\"data-tip\":\"view all\"},/*#__PURE__*/React.createElement(FAIcon,{icon:\"chevron-right\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"recomm_main\",style:{height:loading?100:'inherit'}},/*#__PURE__*/React.createElement(IsLoading,{loading:loading}),/*#__PURE__*/React.createElement(\"div\",{className:cLoading(loading)},len!=0?map_suggested:null))),/*#__PURE__*/React.createElement(ToolTip,null));}}]);return Suggested;}(Component);var mapStateToProps=function mapStateToProps(state){return{suggested:state.Explore.suggested};};export default connect(mapStateToProps)(Suggested);","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/suggested/suggested.js"],"names":["React","Component","connect","ToolTip","getSuggestedUsers","cLoading","SuggestedList","IsLoading","AppLink","FAIcon","Suggested","state","loading","componentWillReceiveProps","setState","componentDidMount","props","dispatch","params","updateUsers","e","preventDefault","suggested","when","len","lengthl","map_suggested","map","s","id","height","mapStateToProps","Explore"],"mappings":"4pBAAC,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAAQC,iBAAR,KAAgC,0BAAhC,CACA,OAAQC,QAAR,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,cAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,C,GAGMC,CAAAA,S,uUACFC,K,CAAQ,CAAEC,OAAO,CAAE,IAAX,C,OAERC,yB,CAA4B,iBAAM,OAAKC,QAAL,CAAc,CAAEF,OAAO,CAAE,KAAX,CAAd,CAAN,E,OAE5BG,iB,CAAoB,UAAM,CAC1B;AAD0B,gBAEC,MAAKC,KAFN,CAElBC,QAFkB,aAElBA,QAFkB,CAETC,MAFS,aAETA,MAFS,CAGvBD,QAAQ,CAACb,iBAAiB,CAACc,MAAD,CAAlB,CAAR,CACF,C,OAEDC,W,CAAc,SAAAC,CAAC,CAAI,CACfA,CAAC,CAACC,cAAF,GADe,iBAES,MAAKL,KAFd,CAEVC,QAFU,cAEVA,QAFU,CAEDC,MAFC,cAEDA,MAFC,CAGfD,QAAQ,CAACb,iBAAiB,CAACc,MAAD,CAAlB,CAAR,CACH,C,4EAEO,IACCN,CAAAA,OADD,CACY,KAAKD,KADjB,CACCC,OADD,kBAEmB,KAAKI,KAFxB,CAECM,SAFD,cAECA,SAFD,CAEWC,IAFX,cAEWA,IAFX,CAGJ,GAAIC,CAAAA,GAAG,CAAGF,SAAS,CAACG,OAApB,CACA,GAAIC,CAAAA,aAAa,CAAGJ,SAAS,CAACK,GAAV,CAAc,SAAAC,CAAC,qBAC/B,oBAAC,aAAD,gBAAe,GAAG,CAAEA,CAAC,CAACC,EAAtB,EAA8BD,CAA9B,EAAiC,IAAI,CAAEL,IAAvC,GAD+B,EAAf,CAApB,CAIA,mBACK,4CACI,2BAAK,SAAS,CAAC,QAAf,eACG,2BAAK,SAAS,CAAC,YAAf,eACI,4CADJ,cAEI,yBAAG,IAAI,CAAC,GAAR,CAAY,SAAS,CAAC,gBAAtB,CAAuC,OAAO,CAAE,KAAKJ,WAArD,CAAkE,WAAS,SAA3E,eACI,oBAAC,MAAD,EAAQ,IAAI,CAAC,UAAb,EADJ,CAFJ,cAKI,oBAAC,OAAD,EAAS,GAAG,CAAC,UAAb,CAAwB,SAAS,CAAC,YAAlC,CAA+C,WAAS,UAAxD,eACI,oBAAC,MAAD,EAAQ,IAAI,CAAC,eAAb,EADJ,CALJ,CADH,cAWG,2BAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,CAAE,CAAEW,MAAM,CAAElB,OAAO,CAAG,GAAH,CAAS,SAA1B,CAApC,eACI,oBAAC,SAAD,EAAW,OAAO,CAAEA,OAApB,EADJ,cAGI,2BAAK,SAAS,CAAEP,QAAQ,CAACO,OAAD,CAAxB,EACKY,GAAG,EAAI,CAAP,CAAWE,aAAX,CAA2B,IADhC,CAHJ,CAXH,CADJ,cAqBI,oBAAC,OAAD,MArBJ,CADL,CAyBH,C,uBAlDmBzB,S,EA0DxB,GAAM8B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAApB,KAAK,QAAK,CAC9BW,SAAS,CAAEX,KAAK,CAACqB,OAAN,CAAcV,SADK,CAAL,EAA7B,CAIA,cAAepB,CAAAA,OAAO,CAAC6B,eAAD,CAAP,CAAyBrB,SAAzB,CAAf","sourcesContent":[" import React,{Component} from 'react'\r\n import {connect} from 'react-redux';\r\n import ToolTip from 'react-tooltip';\r\n import {getSuggestedUsers} from '../../../actions/explore';\r\n import {cLoading} from '../../../utils/utils';\r\n import SuggestedList from './suggested-list';\r\n import IsLoading from '../isLoading';\r\n import AppLink from '../link/link';\r\n import FAIcon from '../icons/font-awesome-icon';\r\n import {string,oneOf} from 'prop-types';\r\n \r\n class Suggested extends Component {\r\n     state = { loading: true }\r\n\r\n     componentWillReceiveProps = () => this.setState({ loading: false })\r\n\r\n     componentDidMount = () => {\r\n     // params: if user is on a profile of eg. noddy, then noddy won't appear on suggestions\r\n        let {dispatch,params} = this.props;\r\n        dispatch(getSuggestedUsers(params))   \r\n     }\r\n\r\n     updateUsers = e => {\r\n         e.preventDefault();\r\n         let {dispatch,params} = this.props;\r\n         dispatch(getSuggestedUsers(params))\r\n     }\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {suggested,when} = this.props;\r\n         let len = suggested.lengthl\r\n         let map_suggested = suggested.map(s => (\r\n             <SuggestedList key={s.id} {...s} when={when} />\r\n         ))\r\n\r\n         return (\r\n              <div>\r\n                  <div className=\"recomm\">\r\n                     <div className=\"recomm_top\">\r\n                         <span>Suggested</span>\r\n                         <a href=\"#\" className=\"recomm_refresh\" onClick={this.updateUsers} data-tip=\"refresh\">\r\n                             <FAIcon icon=\"sync-alt\" />    \r\n                         </a> \r\n                         <AppLink url=\"/explore\" className=\"recomm_all\" data-tip=\"view all\">\r\n                             <FAIcon icon=\"chevron-right\" />\r\n                         </AppLink>\r\n                     </div>\r\n\r\n                     <div className=\"recomm_main\" style={{ height: loading ? 100 : 'inherit'}}>\r\n                         <IsLoading loading={loading} />\r\n\r\n                         <div className={cLoading(loading)}>\r\n                             {len != 0 ? map_suggested : null}\r\n                         </div>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <ToolTip />\r\n              </div>\r\n         )\r\n     }\r\n }\r\n\r\n Suggested.propTypes = {\r\n   params: string,\r\n   when: oneOf(['profile','home'])\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     suggested: state.Explore.suggested\r\n })\r\n\r\n export default connect(mapStateToProps)(Suggested)"]},"metadata":{},"sourceType":"module"}