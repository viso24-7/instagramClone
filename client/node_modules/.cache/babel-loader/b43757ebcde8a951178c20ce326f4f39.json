{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\messages\\\\map-conversations\\\\map-conversations.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport { humanReadable } from '../../../utils/utils';\nimport d from '../../../utils/api/Dom';\nimport Nothing from '../../others/nothing';\nimport ConversationTeaser from './conversation-teaser';\nimport { func } from 'prop-types';\n\nconst MapConversations = ({\n  showConversation,\n  conversations\n}) => {\n  let selcetConversation = con => {\n    new d('.mssg_sr').removeClass('mssg_sr_toggle');\n    new d(`.mt_${con.con_id}`).addClass('mssg_sr_toggle');\n    showConversation(con);\n  };\n\n  let conlen = conversations.lengthl;\n  let map_conv = conversations.map(c => /*#__PURE__*/React.createElement(ConversationTeaser, Object.assign({\n    key: c.con_id\n  }, c, {\n    select: () => selcetConversation({\n      con_id: c.con_id,\n      unreadMssgs: c.unreadMssgs\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }\n  })));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"con_count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, humanReadable(conlen, 'conversation')), conlen === 0 ? /*#__PURE__*/React.createElement(Nothing, {\n    conPage: true,\n    message: \"No conversation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }) : /*#__PURE__*/React.createElement(FadeIn, {\n    duration: \"300ms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }\n  }, map_conv));\n};\n\nMapConversations.propTypes = {\n  showConversation: func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  conversations: state.Message.conversations\n});\n\nexport default connect(mapStateToProps)(MapConversations);\nexport { MapConversations as PureMapConversations };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/map-conversations/map-conversations.js"],"names":["React","Fragment","connect","FadeIn","humanReadable","d","Nothing","ConversationTeaser","func","MapConversations","showConversation","conversations","selcetConversation","con","removeClass","con_id","addClass","conlen","lengthl","map_conv","map","c","unreadMssgs","propTypes","isRequired","mapStateToProps","state","Message","PureMapConversations"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,aAAR,QAA4B,sBAA5B;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,SAAQC,IAAR,QAAmB,YAAnB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,gBAAD;AAAkBC,EAAAA;AAAlB,CAAD,KAAsC;AAC3D,MAAIC,kBAAkB,GAAGC,GAAG,IAAI;AAC5B,QAAIR,CAAJ,CAAM,UAAN,EAAkBS,WAAlB,CAA8B,gBAA9B;AACA,QAAIT,CAAJ,CAAO,OAAMQ,GAAG,CAACE,MAAO,EAAxB,EAA2BC,QAA3B,CAAoC,gBAApC;AACAN,IAAAA,gBAAgB,CAACG,GAAD,CAAhB;AACH,GAJD;;AAMF,MAAII,MAAM,GAAGN,aAAa,CAACO,OAA3B;AACA,MAAIC,QAAQ,GAAGR,aAAa,CAACS,GAAd,CAAkBC,CAAC,iBAC9B,oBAAC,kBAAD;AACG,IAAA,GAAG,EAAEA,CAAC,CAACN;AADV,KAEOM,CAFP;AAGG,IAAA,MAAM,EAAE,MAAMT,kBAAkB,CAAC;AAC7BG,MAAAA,MAAM,EAAEM,CAAC,CAACN,MADmB;AAE7BO,MAAAA,WAAW,EAAED,CAAC,CAACC;AAFc,KAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADW,CAAf;AAWA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BlB,aAAa,CAACa,MAAD,EAAQ,cAAR,CAA1C,CADJ,EAEKA,MAAM,KAAK,CAAX,gBACG,oBAAC,OAAD;AAAS,IAAA,OAAO,MAAhB;AAAiB,IAAA,OAAO,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BE,QAA1B,CALR,CADJ;AAUD,CA7BD;;AA+BAV,gBAAgB,CAACc,SAAjB,GAA6B;AAC1Bb,EAAAA,gBAAgB,EAAEF,IAAI,CAACgB;AADG,CAA7B;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9Bf,EAAAA,aAAa,EAAEe,KAAK,CAACC,OAAN,CAAchB;AADC,CAAL,CAA7B;;AAIA,eAAeT,OAAO,CAACuB,eAAD,CAAP,CAAyBhB,gBAAzB,CAAf;AACA,SAAQA,gBAAgB,IAAImB,oBAA5B","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import {humanReadable} from '../../../utils/utils';\r\n import d from '../../../utils/api/Dom';\r\n import Nothing from '../../others/nothing';\r\n import ConversationTeaser from './conversation-teaser';\r\n import {func} from 'prop-types';\r\n\r\n const MapConversations = ({showConversation,conversations}) => {\r\n     let selcetConversation = con => {\r\n         new d('.mssg_sr').removeClass('mssg_sr_toggle')\r\n         new d(`.mt_${con.con_id}`).addClass('mssg_sr_toggle')\r\n         showConversation(con)\r\n     }\r\n\r\n   let conlen = conversations.lengthl\r\n   let map_conv = conversations.map(c => (\r\n       <ConversationTeaser\r\n          key={c.con_id}\r\n          {...c}\r\n          select={() => selcetConversation({\r\n              con_id: c.con_id,\r\n              unreadMssgs: c.unreadMssgs\r\n          })}\r\n       />\r\n   ))\r\n   \r\n   return (\r\n       <Fragment>\r\n           <span className=\"con_count\">{humanReadable(conlen,'conversation')}</span>\r\n           {conlen === 0 ? (\r\n               <Nothing conPage message=\"No conversation\" />\r\n           ) : (\r\n               <FadeIn duration=\"300ms\">{map_conv}</FadeIn>\r\n           )}\r\n       </Fragment>\r\n   )\r\n }\r\n\r\n MapConversations.propTypes = {\r\n    showConversation: func.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     conversations: state.Message.conversations\r\n })\r\n\r\n export default connect(mapStateToProps)(MapConversations);\r\n export {MapConversations as PureMapConversations}"]},"metadata":{},"sourceType":"module"}