{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\messages\\\\conversation\\\\message\\\\message-type.js\";\nimport React, { Component, Fragment } from 'react';\nimport { timeAgo } from '../../../../utils/utilMethods/handyTimeAgo';\nimport ToTags from '../../../hashtag/toTags/toTags';\nimport ImageTheatre from '../../../others/imageTheater/ImageTheater';\nimport { string, shape } from 'prop-types';\nexport default class MessageType extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showImage: false\n    };\n\n    this.toggleShowImage = () => this.setState({\n      showImage: !this.state.showImage\n    });\n  }\n\n  render() {\n    let {\n      showImage\n    } = this.state;\n    let {\n      type,\n      message,\n      message_time\n    } = this.props.messageDetails;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_m\",\n      title: timeAgo(message_time),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }\n    }, !message ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontStyle: 'italic'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 27\n      }\n    }, \"Empty message\") : type === 'text' ? /*#__PURE__*/React.createElement(ToTags, {\n      str: `${message}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }\n    }) : type == 'image' ? /*#__PURE__*/React.createElement(\"img\", {\n      src: `/messages/${message}`,\n      onClick: this.toggleShowImage,\n      className: \"m_m_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 27\n      }\n    }) : type == 'sticker' ? /*#__PURE__*/React.createElement(\"img\", {\n      src: `/messages/${message}`,\n      className: \"m_m_sticker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    }) : null), showImage && /*#__PURE__*/React.createElement(ImageTheatre, {\n      imgSrc: `/messages/${message}`,\n      showInfo: false,\n      back: this.toggleShowImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }\n    }));\n  }\n\n}\nMessageType.propTypes = {\n  messageDeatils: shape({\n    type: string.isRequired,\n    message: string.isRequired,\n    message_time: string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/conversation/message/message-type.js"],"names":["React","Component","Fragment","timeAgo","ToTags","ImageTheatre","string","shape","MessageType","state","showImage","toggleShowImage","setState","render","type","message","message_time","props","messageDetails","fontStyle","propTypes","messageDeatils","isRequired"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,4CAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,MAAR,EAAeC,KAAf,QAA2B,YAA3B;AAEA,eAAe,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CQ,KAD+C,GACvC;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADuC;;AAAA,SAG/CC,eAH+C,GAG7B,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,KAAd,CAHuB;AAAA;;AAK/CG,EAAAA,MAAM,GAAE;AACH,QAAI;AAACH,MAAAA;AAAD,QAAc,KAAKD,KAAvB;AACA,QAAI;AAACK,MAAAA,IAAD;AAAMC,MAAAA,OAAN;AAAcC,MAAAA;AAAd,QAA8B,KAAKC,KAAL,CAAWC,cAA7C;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAEf,OAAO,CAACa,YAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACD,OAAD,gBACG;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,GAEGL,IAAI,KAAK,MAAT,gBACA,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAG,GAAEC,OAAQ,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEAD,IAAI,IAAI,OAAR,gBACA;AAAK,MAAA,GAAG,EAAG,aAAYC,OAAQ,EAA/B;AAAkC,MAAA,OAAO,EAAE,KAAKJ,eAAhD;AAAiE,MAAA,SAAS,EAAC,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEAG,IAAI,IAAI,SAAR,gBACA;AAAK,MAAA,GAAG,EAAG,aAAYC,OAAQ,EAA/B;AAAkC,MAAA,SAAS,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,IATR,CADJ,EAaKL,SAAS,iBACN,oBAAC,YAAD;AACG,MAAA,MAAM,EAAG,aAAYK,OAAQ,EADhC;AAEG,MAAA,QAAQ,EAAE,KAFb;AAGG,MAAA,IAAI,EAAE,KAAKJ,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdR,CADJ;AAuBJ;;AAhC8C;AAmCnDH,WAAW,CAACY,SAAZ,GAAwB;AACpBC,EAAAA,cAAc,EAAEd,KAAK,CAAC;AAClBO,IAAAA,IAAI,EAAER,MAAM,CAACgB,UADK;AAElBP,IAAAA,OAAO,EAAET,MAAM,CAACgB,UAFE;AAGlBN,IAAAA,YAAY,EAAEV,MAAM,CAACgB;AAHH,GAAD,CAAL,CAIVA;AALc,CAAxB","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {timeAgo} from '../../../../utils/utilMethods/handyTimeAgo';\r\n import ToTags from '../../../hashtag/toTags/toTags';\r\n import ImageTheatre from '../../../others/imageTheater/ImageTheater';\r\n import {string,shape} from 'prop-types';\r\n\r\n export default class MessageType extends Component {\r\n     state = { showImage: false }\r\n\r\n     toggleShowImage = () => this.setState({ showImage: !this.state.showImage})\r\n     \r\n     render(){\r\n          let {showImage} = this.state;\r\n          let {type,message,message_time} = this.props.messageDetails;\r\n\r\n          return (\r\n              <Fragment>\r\n                  <div className=\"m_m\" title={timeAgo(message_time)}>\r\n                      {!message ? (\r\n                          <span style={{ fontStyle: 'italic'}}>Empty message</span>\r\n                      ) : type === 'text' ? (\r\n                          <ToTags str={`${message}`} />\r\n                      ) : type == 'image' ? (\r\n                          <img src={`/messages/${message}`} onClick={this.toggleShowImage} className=\"m_m_img\" />\r\n                      ) : type == 'sticker' ? (\r\n                          <img src={`/messages/${message}`} className=\"m_m_sticker\" />\r\n                      ) : null}\r\n                  </div>\r\n\r\n                  {showImage && (\r\n                      <ImageTheatre\r\n                         imgSrc={`/messages/${message}`}\r\n                         showInfo={false}\r\n                         back={this.toggleShowImage}\r\n                      />\r\n                   )}\r\n              </Fragment>\r\n          )\r\n     }\r\n }\r\n\r\n MessageType.propTypes = {\r\n     messageDeatils: shape({\r\n         type: string.isRequired,\r\n         message: string.isRequired,\r\n         message_time: string.isRequired\r\n        }).isRequired\r\n }"]},"metadata":{},"sourceType":"module"}