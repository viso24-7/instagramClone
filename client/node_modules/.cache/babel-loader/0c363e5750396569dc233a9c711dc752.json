{"ast":null,"code":"import React,{Fragment}from'react';import{connect}from'react-redux';import ViewAvatar from'../viewAvatar';var ViewAvatarAction=function ViewAvatarAction(_ref){var view=_ref.view,back=_ref.back,when=_ref.when,id=_ref.id,group_id=_ref.group_id;var src=when===\"src\"?\"/users/\".concat(id,\"/avatar.jpg\"):\"/groups/\".concat(group_id,\"/avatar.jpg\");return/*#__PURE__*/React.createElement(Fragment,null,view?/*#__PURE__*/React.createElement(ViewAvatar,{imgSrc:src,back:back}):null);};var mapStateToProps=function mapStateToProps(state){return{id:state.User.user_details.id,group_id:state.Group.group_details.group_id};};export default connect(mapStateToProps)(ViewAvatarAction);","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/avatar/actions/view-avatar.js"],"names":["React","Fragment","connect","ViewAvatar","ViewAvatarAction","view","back","when","id","group_id","src","mapStateToProps","state","User","user_details","Group","group_details"],"mappings":"AAAC,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAGA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAmC,IAAhCC,CAAAA,IAAgC,MAAhCA,IAAgC,CAA3BC,IAA2B,MAA3BA,IAA2B,CAAtBC,IAAsB,MAAtBA,IAAsB,CAAjBC,EAAiB,MAAjBA,EAAiB,CAAdC,QAAc,MAAdA,QAAc,CACxD,GAAIC,CAAAA,GAAG,CAAGH,IAAI,GAAK,KAAT,kBAA2BC,EAA3B,kCAAwDC,QAAxD,eAAV,CAEA,mBACI,oBAAC,QAAD,MACKJ,IAAI,cAAG,oBAAC,UAAD,EAAY,MAAM,CAAEK,GAApB,CAAyB,IAAI,CAAEJ,IAA/B,EAAH,CAA6C,IADtD,CADJ,CAKH,CARD,CAgBC,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BJ,EAAE,CAAEI,KAAK,CAACC,IAAN,CAAWC,YAAX,CAAwBN,EADE,CAE9BC,QAAQ,CAAEG,KAAK,CAACG,KAAN,CAAYC,aAAZ,CAA0BP,QAFN,CAAL,EAA7B,CAKA,cAAeP,CAAAA,OAAO,CAACS,eAAD,CAAP,CAAyBP,gBAAzB,CAAf","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import ViewAvatar from '../viewAvatar';\r\n import {bool,func,oneOf} from 'prop-types';\r\n\r\n const ViewAvatarAction = ({ view,back,when,id,group_id}) => {\r\n     let src = when === \"src\" ? `/users/${id}/avatar.jpg` : `/groups/${group_id}/avatar.jpg`\r\n\r\n     return (\r\n         <Fragment>\r\n             {view ? <ViewAvatar imgSrc={src} back={back} /> : null }\r\n         </Fragment>\r\n     )\r\n }\r\n\r\n  ViewAvatarAction.propTypes = {\r\n      view: bool.isRequired,\r\n      back: func.isRequired,\r\n      when: oneOf(['user','group']).isRequired\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n      id: state.User.user_details.id,\r\n      group_id: state.Group.group_details.group_id\r\n  })\r\n \r\n  export default connect(mapStateToProps)(ViewAvatarAction);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}