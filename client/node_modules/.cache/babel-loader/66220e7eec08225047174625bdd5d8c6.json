{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\profile\\\\profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport { getUnreadMessages } from '../../actions/message';\nimport { getUnreadNotifications } from '../../actions/notification';\nimport { isAdmin } from '../../utils/admin-utils';\nimport { forProfile, isPrivate, humanReadable, cLoading } from '../../utils/utils';\nimport ProfileNav from './nav';\nimport ProfileRoutes from './profile-routers';\nimport Banner from './banner/banner';\nimport Title from '../others/title';\nimport Nothing from '../others/nothing';\nimport IsLoading from '../others/isLoading';\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.inv_error = () => this.props.history.push('/error/user');\n\n    this.componentWillReceiveProps = ({\n      dispatch,\n      match\n    }) => {\n      if (this.props.match.url != match.url) {\n        forProfile({\n          dispatch,\n          username: match.params.username,\n          invalidUser: this.inv_error\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.componentDidMount = () => {\n      let {\n        match: {\n          params: username\n        },\n        dispatch\n      } = this.props;\n      forProfile({\n        dispatch,\n        username,\n        invalidUser: this.inv_error\n      });\n      dispatch(getUnreadNotifications());\n      dispatch(getUnreadMessages());\n    };\n  }\n\n  render() {\n    let {\n      loading\n    } = this.state;\n    let {\n      match: {\n        url,\n        params: {\n          username\n        }\n      },\n      user_details: {\n        id,\n        firstname,\n        surname,\n        account_type\n      },\n      isFollowing,\n      mutuals\n    } = this.props;\n    let notPrivate = !isPrivate(id, isFollowing, account_type);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      value: `@${username} (${firstname} ${surname})`,\n      desc: `Connect with ${username}'s profile`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-data\",\n      id: \"profile-data\",\n      \"data-get-username\": username,\n      \"data-getid\": id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      when: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      className: cLoading(loading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), notPrivate || isAdmin() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ProfileNav, {\n      url: url,\n      user: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(ProfileRoutes, {\n      url: url,\n      param: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 85\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nothing, {\n      message: `Account is private.Follow to connect with ${username}`,\n      secondMessage: mutuals.length != 0 ? humanReadable(mutuals.length, 'mutual follower') : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user_details: state.User.user_details,\n  mutuals: state.User.mutualUsers,\n  isFollowing: state.Follow.isFollowing\n});\n\nexport default connect(mapStateToProps)(Profile);\nexport { Profile as PureProfile };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/profile/profile.js"],"names":["React","Component","connect","FadeIn","getUnreadMessages","getUnreadNotifications","isAdmin","forProfile","isPrivate","humanReadable","cLoading","ProfileNav","ProfileRoutes","Banner","Title","Nothing","IsLoading","Profile","state","loading","inv_error","props","history","push","componentWillReceiveProps","dispatch","match","url","username","params","invalidUser","setState","componentDidMount","render","user_details","id","firstname","surname","account_type","isFollowing","mutuals","notPrivate","marginTop","length","mapStateToProps","User","mutualUsers","Follow","PureProfile"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import {getUnreadMessages} from '../../actions/message';\r\n import {getUnreadNotifications} from '../../actions/notification';\r\n import {isAdmin} from '../../utils/admin-utils';\r\n import {forProfile,isPrivate,humanReadable,cLoading} from '../../utils/utils';\r\n import ProfileNav from './nav';\r\n import ProfileRoutes from './profile-routers'\r\n import Banner from './banner/banner';\r\n import Title from '../others/title';\r\n import Nothing from '../others/nothing';\r\n import IsLoading from '../others/isLoading';\r\n\r\n class Profile extends Component {\r\n     state = { loading: true }\r\n\r\n     inv_error = () => this.props.history.push('/error/user')\r\n\r\n     componentWillReceiveProps = ({dispatch,match}) => {\r\n         if(this.props.match.url != match.url){\r\n             forProfile({\r\n                 dispatch,\r\n                 username: match.params.username,\r\n                 invalidUser: this.inv_error\r\n             })\r\n           }\r\n         this.setState({ loading: false })\r\n     }\r\n\r\n     componentDidMount = () => {\r\n         let {match:{params:username},dispatch} = this.props;\r\n         forProfile({dispatch,username,invalidUser: this.inv_error})\r\n         dispatch(getUnreadNotifications())\r\n         dispatch(getUnreadMessages())\r\n     }\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {\r\n              match:{url,params:{username}},\r\n              user_details: {id,firstname,surname,account_type},\r\n              isFollowing,\r\n              mutuals\r\n            } = this.props;\r\n         let notPrivate = !isPrivate(id,isFollowing,account_type)\r\n\r\n         return (\r\n             <div>\r\n                 <Title value={`@${username} (${firstname} ${surname})`} desc={`Connect with ${username}'s profile`} />\r\n\r\n                 <div className=\"profile-data\" id=\"profile-data\" data-get-username={username} data-getid={id}>\r\n                     <IsLoading loading={loading} when=\"page\" />\r\n\r\n                     <FadeIn duration=\"300ms\" className={cLoading(loading)}>\r\n                        <Banner />\r\n                        {notPrivate || isAdmin() ? (\r\n                            <div>\r\n                                <ProfileNav url={url} user={id} />\r\n                                <ProfileRoutes url={url} param={username} />\r\n                            </div>\r\n                        ) : (\r\n                            <div style={{ marginTop: 85}}>\r\n                                <Nothing message={`Account is private.Follow to connect with ${username}`} secondMessage={mutuals.length != 0 ? humanReadable(mutuals.length,'mutual follower') : ''} />\r\n                            </div>\r\n                        )}\r\n                     </FadeIn>\r\n                 </div>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     user_details: state.User.user_details,\r\n     mutuals: state.User.mutualUsers,\r\n     isFollowing: state.Follow.isFollowing\r\n })\r\n\r\n export default connect(mapStateToProps)(Profile)\r\n export {Profile as PureProfile}"]},"metadata":{},"sourceType":"module"}