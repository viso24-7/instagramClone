{"ast":null,"code":"/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar canvasToBlob = createCommonjsModule(function (module) {\n  (function (window) {\n    var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n    var hasBlobConstructor = window.Blob && function () {\n      try {\n        return Boolean(new Blob());\n      } catch (e) {\n        return false;\n      }\n    }();\n\n    var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100;\n      } catch (e) {\n        return false;\n      }\n    }();\n\n    var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n    var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n    var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n      var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n      matches = dataURI.match(dataURIPattern);\n\n      if (!matches) {\n        throw new Error('invalid data URI');\n      } // Default to text/plain;charset=US-ASCII\n\n\n      mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      } // Write the bytes of the string to an ArrayBuffer:\n\n\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        });\n      }\n\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType);\n    };\n\n    if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n      if (CanvasPrototype.mozGetAsFile) {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this;\n          setTimeout(function () {\n            if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n              callback(dataURLtoBlob(self.toDataURL(type, quality)));\n            } else {\n              callback(self.mozGetAsFile('blob', type));\n            }\n          });\n        };\n      } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this;\n          setTimeout(function () {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          });\n        };\n      }\n    }\n\n    if (typeof undefined === 'function' && undefined.amd) {\n      undefined(function () {\n        return dataURLtoBlob;\n      });\n    } else if (module.exports) {\n      module.exports = dataURLtoBlob;\n    } else {\n      window.dataURLtoBlob = dataURLtoBlob;\n    }\n  })(window);\n});\n/* globals Blob */\n\nvar toString = Object.prototype.toString;\n\nvar isBlob = function isBlob(x) {\n  return x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\n\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\n\n\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n\n  return extension;\n}\n\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar _window = window,\n    btoa = _window.btoa;\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = ''; // TypedArray.prototype.forEach is not supported in some browsers as IE.\n\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\n\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0; // Only handle JPEG image (start by 0xFFD8)\n\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D\n      /* bigEndian */\n      ) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n\n    var _offset = void 0;\n\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112\n      /* Orientation */\n      ) {\n          // 8 is the offset of the current tag's value\n          _offset += 8; // Get the original orientation value\n\n          orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _window$1 = window,\n    ArrayBuffer$1 = _window$1.ArrayBuffer,\n    FileReader = _window$1.FileReader;\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n    this.result = null;\n\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n\n      var image = new Image();\n      options = _extends({}, DEFAULTS, options);\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n            width = height * aspectRatio;\n          }\n\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n\n          var defaultFillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          } // Override the default fill color (#000, black)\n\n\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n\n          context.restore();\n\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n            naturalHeight = _ref3.naturalHeight,\n            result = _ref3.result;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        _this.result = result;\n\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\n\nexport default ImageCompressor;","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/node_modules/image-compressor.js/dist/image-compressor.esm.js"],"names":["createCommonjsModule","fn","module","exports","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","i","bb","match","Error","slice","length","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","self","setTimeout","toDataURL","undefined","amd","toString","Object","isBlob","x","call","DEFAULTS","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","height","mimeType","convertSize","beforeDraw","drew","success","error","REGEXP_IMAGE_TYPE","isImageType","value","test","imageTypeToExtension","includeDot","arguments","extension","substr","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","_window","btoa","arrayBufferToDataURL","uint8","data","forEach","getOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","_extends","assign","source","hasOwnProperty","_window$1","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","ImageCompressor","file","options","result","compress","_this","image","Image","Promise","resolve","reject","url","createObjectURL","reader","onload","_ref","onabort","onerror","readAsArrayBuffer","readAsDataURL","then","naturalWidth","naturalHeight","alt","name","src","_ref2","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","document","createElement","context","getContext","aspectRatio","max","_options","_options2","min","destX","destY","destWidth","destHeight","abs","_width$height","defaultFillStyle","fillStyle","fillRect","save","translate","PI","scale","drawImage","floor","restore","done","_ref3","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","catch","err"],"mappings":"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","sourcesContent":["/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar canvasToBlob = createCommonjsModule(function (module) {\n(function (window) {\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n  var hasBlobConstructor =\n    window.Blob &&\n    (function () {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })();\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })();\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder;\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb;\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern);\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType)\n    };\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          } else {\n            callback(self.mozGetAsFile('blob', type));\n          }\n        });\n      };\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          callback(dataURLtoBlob(self.toDataURL(type, quality)));\n        });\n      };\n    }\n  }\n  if (typeof undefined === 'function' && undefined.amd) {\n    undefined(function () {\n      return dataURLtoBlob\n    });\n  } else if (module.exports) {\n    module.exports = dataURLtoBlob;\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob;\n  }\n})(window);\n});\n\n/* globals Blob */\nvar toString = Object.prototype.toString;\n\nvar isBlob = function (x) {\n\treturn x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\n\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n\n  return extension;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar _window = window,\n    btoa = _window.btoa;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n\n\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _window$1 = window,\n    ArrayBuffer$1 = _window$1.ArrayBuffer,\n    FileReader = _window$1.FileReader;\n\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n\n    this.result = null;\n\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n\n      var image = new Image();\n\n      options = _extends({}, DEFAULTS, options);\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n\n\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n\n            width = height * aspectRatio;\n          }\n\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n\n          var defaultFillStyle = 'transparent';\n\n          // Converts PNG files over the `convertSize` to JPEGs.\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          }\n\n          // Override the default fill color (#000, black)\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n\n          context.restore();\n\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n            naturalHeight = _ref3.naturalHeight,\n            result = _ref3.result;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        _this.result = result;\n\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\n\nexport default ImageCompressor;\n"]},"metadata":{},"sourceType":"module"}