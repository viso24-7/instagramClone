{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\group\\\\group-banner\\\\avatar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Me, toggle } from '../../../utils/utils';\nimport d from '../../../utils/api/Dom';\nimport ViewAvatarAction from '../../others/avatar/actions/view-avatar';\nimport ChangeAvatarAction from '../../others/avatar/actions/change-avatar';\nimport GroupOptions from './top-options/options';\n\nclass GroupAvatar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewAvatar: false,\n      changeAvatar: false\n    };\n\n    this._toggle = what => this.setState({\n      [what]: !this.state[what]\n    });\n\n    this.toggleOptions = () => toggle(new d('.pro_avatar_ch_teaser').toDom());\n  }\n\n  render() {\n    let {\n      viewAvatar,\n      changeAvatar\n    } = this.state;\n    let {\n      group_id,\n      admin\n    } = this.props.group_details;\n    let imgSrc = group_id ? `/groups/${group_id}/avatar.jpg` : `/images/wheel.jpg`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pro_avatar\",\n      onMouseOver: this.toggleOptions,\n      onMouseOut: this.toggleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imgSrc,\n      alt: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pro_avatar_ch_teaser\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"view_avatar_span\",\n      onClick: () => this._toggle('viewAvatar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 26\n      }\n    }, \"View\"), Me(admin) && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"change_pro\",\n      onClick: () => this._toggle('changeAvatar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }\n    }, \"Change\"))), /*#__PURE__*/React.createElement(ViewAvatarAction, {\n      view: viewAvatar,\n      back: () => this._toggle('viewAvatar'),\n      when: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(ChangeAvatarAction, {\n      change: changeAvatar,\n      back: () => this._toggle('changeAvatar'),\n      when: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  group_details: state.Group.group_details\n});\n\nexport default connect(mapStateToProps)(GroupAvatar);\nexport { GroupAvatar as PureGroupAction };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/group-banner/avatar.js"],"names":["React","Component","Fragment","connect","Me","toggle","d","ViewAvatarAction","ChangeAvatarAction","GroupOptions","GroupAvatar","state","viewAvatar","changeAvatar","_toggle","what","setState","toggleOptions","toDom","render","group_id","admin","props","group_details","imgSrc","display","mapStateToProps","Group","PureGroupAction"],"mappings":"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","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {Me,toggle} from '../../../utils/utils';\r\n import d from '../../../utils/api/Dom';\r\n import ViewAvatarAction from '../../others/avatar/actions/view-avatar';\r\n import ChangeAvatarAction from '../../others/avatar/actions/change-avatar';\r\n import GroupOptions from './top-options/options';\r\n\r\n  class GroupAvatar extends Component{\r\n      state = {\r\n          viewAvatar: false,\r\n          changeAvatar: false\r\n        }\r\n\r\n      _toggle = what => this.setState({ [what]: !this.state[what]})\r\n      toggleOptions = () => toggle(new d('.pro_avatar_ch_teaser').toDom())\r\n      \r\n     render(){\r\n         let {viewAvatar,changeAvatar} = this.state;\r\n         let {group_id,admin} = this.props.group_details;\r\n         let imgSrc = group_id ? `/groups/${group_id}/avatar.jpg` : `/images/wheel.jpg`\r\n\r\n         return (\r\n             <Fragment>\r\n                 <div className=\"pro_avatar\" onMouseOver={this.toggleOptions} onMouseOut={this.toggleOptions}>\r\n                     <img src={imgSrc} alt=\"avatar\" />\r\n                     <div className=\"pro_avatar_ch_teaser\" style={{ display: 'none'}}>\r\n                         <span className=\"view_avatar_span\" onClick={() => this._toggle('viewAvatar')}>\r\n                             View\r\n                         </span>\r\n\r\n                         {Me(admin) && (\r\n                             <span className=\"change_pro\" onClick={() => this._toggle('changeAvatar')}>\r\n                                 Change\r\n                             </span>\r\n                         )}\r\n                     </div>\r\n                 </div>\r\n\r\n               <ViewAvatarAction\r\n                  view={viewAvatar}\r\n                  back={() => this._toggle('viewAvatar')}\r\n                  when=\"group\"\r\n                />\r\n\r\n                <ChangeAvatarAction\r\n                   change={changeAvatar}\r\n                   back={() => this._toggle('changeAvatar')}\r\n                   when=\"group\"\r\n                />\r\n             </Fragment>\r\n         )\r\n     } \r\n  } \r\n\r\n\r\n const mapStateToProps = state => ({\r\n     group_details: state.Group.group_details\r\n })\r\n\r\n export default connect(mapStateToProps)(GroupAvatar);\r\n export {GroupAvatar as PureGroupAction}"]},"metadata":{},"sourceType":"module"}