{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\profile\\\\sections\\\\people-you-know\\\\peope-you-know-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { post } from 'axios';\nimport { Me } from '../../../../utils/utils';\nimport AppLink from '../../../others/link/link';\nimport Follow from '../../../others/follow/follow';\nimport UnFollow from '../../../others/follow/unfollow';\nimport MonTopInfo from '../../../others/m-on/mon-topinfo';\nimport { number, string } from 'prop-types';\n\nclass PeopleYouKnowList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFollowing: false\n    };\n\n    this.componentDidMount = async () => {\n      let {\n        user,\n        username\n      } = this.props;\n\n      if (!Me(user)) {\n        let {\n          data: isFollowing\n        } = await post('/api/is-following', {\n          username\n        });\n        await this.setState({\n          isFollowing\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      isFollowing\n    } = this.state;\n    let {\n      id,\n      user,\n      username,\n      firstname,\n      surname,\n      mutualUsersCount\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_on followers_m_on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(MonTopInfo, {\n      info: {\n        user,\n        username,\n        firstname,\n        surname,\n        mutuals: mutualUsersCount\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }\n    }, Me(user) ? /*#__PURE__*/React.createElement(AppLink, {\n      url: `/profile/${username}`,\n      className: \"sec_btn\",\n      label: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }\n    }) : isFollowing ? /*#__PURE__*/React.createElement(UnFollow, {\n      user: user,\n      unfollowed: () => this.setState({\n        isFollowing: false\n      }),\n      updateFolowings: Me(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Follow, {\n      userDetails: {\n        user,\n        username,\n        firstname,\n        surname\n      },\n      followed: () => this.setState({\n        isFollowing: true\n      }),\n      updateFollowings: Me(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }\n    })));\n  }\n\n}\n\nPeopleYouKnowList.propTypes = {\n  follow_id: number.isRequired,\n  user: number.isRequired,\n  username: string.isRequired,\n  firstname: string.isRequired,\n  surname: string.isRequired,\n  mutualUsersCount: number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  id: state.User.user_details.id\n});\n\nexport default connect(mapStateToProps)(PeopleYouKnowList);\nexport { PeopleYouKnowList as PurePeopleYouKnowList };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/profile/sections/people-you-know/peope-you-know-list.js"],"names":["React","Component","connect","post","Me","AppLink","Follow","UnFollow","MonTopInfo","number","string","PeopleYouKnowList","state","isFollowing","componentDidMount","user","username","props","data","setState","render","id","firstname","surname","mutualUsersCount","mutuals","propTypes","follow_id","isRequired","mapStateToProps","User","user_details","PurePeopleYouKnowList"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,OAAnB;AACA,SAAQC,EAAR,QAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,YAA5B;;AAEA,MAAMC,iBAAN,SAAgCV,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCW,KADsC,GAC9B;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAD8B;;AAAA,SAGtCC,iBAHsC,GAGlB,YAAY;AAC5B,UAAI;AAACC,QAAAA,IAAD;AAAMC,QAAAA;AAAN,UAAkB,KAAKC,KAA3B;;AACA,UAAG,CAACb,EAAE,CAACW,IAAD,CAAN,EAAa;AACT,YAAI;AAACG,UAAAA,IAAI,EAACL;AAAN,YAAqB,MAAMV,IAAI,CAAC,mBAAD,EAAqB;AAACa,UAAAA;AAAD,SAArB,CAAnC;AACA,cAAM,KAAKG,QAAL,CAAc;AAACN,UAAAA;AAAD,SAAd,CAAN;AACH;AACJ,KATqC;AAAA;;AAWlCO,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACP,MAAAA;AAAD,QAAgB,KAAKD,KAAzB;AACA,QAAI;AAACS,MAAAA,EAAD;AAAIN,MAAAA,IAAJ;AAASC,MAAAA,QAAT;AAAkBM,MAAAA,SAAlB;AAA4BC,MAAAA,OAA5B;AAAoCC,MAAAA;AAApC,QAAwD,KAAKP,KAAjE;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE;AAACF,QAAAA,IAAD;AAAMC,QAAAA,QAAN;AAAeM,QAAAA,SAAf;AAAyBC,QAAAA,OAAzB;AAAiCE,QAAAA,OAAO,EAACD;AAAzC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,eAGK;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKpB,EAAE,CAACW,IAAD,CAAF,gBACG,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAG,YAAWC,QAAS,EAAnC;AAAsC,MAAA,SAAS,EAAC,SAAhD;AAA0D,MAAA,KAAK,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEGH,WAAW,gBACX,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEE,IAAhB;AAAsB,MAAA,UAAU,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE;AAAf,OAAd,CAAxC;AAA8E,MAAA,eAAe,EAAET,EAAE,CAACiB,EAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,gBAGX,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE;AAACN,QAAAA,IAAD;AAAMC,QAAAA,QAAN;AAAeM,QAAAA,SAAf;AAAyBC,QAAAA;AAAzB,OAArB;AAAwD,MAAA,QAAQ,EAAE,MAAM,KAAKJ,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAE;AAAd,OAAd,CAAxE;AAA6G,MAAA,gBAAgB,EAAET,EAAE,CAACiB,EAAD,CAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CAHL,CADJ;AAeH;;AA9BiC;;AAkC1CV,iBAAiB,CAACe,SAAlB,GAA8B;AAC1BC,EAAAA,SAAS,EAAElB,MAAM,CAACmB,UADQ;AAE1Bb,EAAAA,IAAI,EAAEN,MAAM,CAACmB,UAFa;AAG1BZ,EAAAA,QAAQ,EAAEN,MAAM,CAACkB,UAHS;AAI1BN,EAAAA,SAAS,EAAEZ,MAAM,CAACkB,UAJQ;AAK1BL,EAAAA,OAAO,EAAEb,MAAM,CAACkB,UALU;AAM1BJ,EAAAA,gBAAgB,EAAEf,MAAM,CAACmB;AANC,CAA9B;;AASA,MAAMC,eAAe,GAAGjB,KAAK,KAAK;AAC9BS,EAAAA,EAAE,EAAET,KAAK,CAACkB,IAAN,CAAWC,YAAX,CAAwBV;AADE,CAAL,CAA7B;;AAIA,eAAenB,OAAO,CAAC2B,eAAD,CAAP,CAAyBlB,iBAAzB,CAAf;AACA,SAAQA,iBAAiB,IAAIqB,qBAA7B","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {post} from 'axios';\r\n import {Me} from '../../../../utils/utils';\r\n import AppLink from '../../../others/link/link';\r\n import Follow from '../../../others/follow/follow';\r\n import UnFollow from '../../../others/follow/unfollow'\r\n import MonTopInfo from '../../../others/m-on/mon-topinfo';\r\n import {number,string} from 'prop-types';\r\n\r\n class PeopleYouKnowList extends Component {\r\n     state = { isFollowing: false }\r\n\r\n     componentDidMount = async () => {\r\n         let {user,username} = this.props;\r\n         if(!Me(user)){\r\n             let {data:isFollowing} = await post('/api/is-following',{username})\r\n             await this.setState({isFollowing})\r\n         }\r\n     }\r\n\r\n         render(){\r\n             let {isFollowing} = this.state;\r\n             let {id,user,username,firstname,surname,mutualUsersCount} = this.props;\r\n\r\n             return (\r\n                 <div className=\"m_on followers_m_on\">\r\n                      <MonTopInfo info={{user,username,firstname,surname,mutuals:mutualUsersCount}} />\r\n\r\n                      <div className=\"m_bottom\">\r\n                          {Me(user) ? (\r\n                              <AppLink url={`/profile/${username}`} className=\"sec_btn\" label=\"Profile\" />\r\n                          ) : isFollowing ? (\r\n                              <UnFollow user={user} unfollowed={() => this.setState({ isFollowing: false})} updateFolowings={Me(id)} />\r\n                          ) : (\r\n                              <Follow userDetails={{user,username,firstname,surname}} followed={() => this.setState({isFollowing: true })} updateFollowings={Me(id)} />\r\n                          )}\r\n                      </div>\r\n                 </div>\r\n             )\r\n         }\r\n     }\r\n\r\n\r\n PeopleYouKnowList.propTypes = {\r\n     follow_id: number.isRequired,\r\n     user: number.isRequired,\r\n     username: string.isRequired,\r\n     firstname: string.isRequired,\r\n     surname: string.isRequired,\r\n     mutualUsersCount: number.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     id: state.User.user_details.id\r\n })\r\n\r\n export default connect(mapStateToProps)(PeopleYouKnowList)\r\n export {PeopleYouKnowList as PurePeopleYouKnowList}"]},"metadata":{},"sourceType":"module"}