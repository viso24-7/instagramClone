{"ast":null,"code":"import { post } from 'axios';\nimport { imageCompressor } from './utils';\nimport { notify } from '../utils/utilMethods/handy-notification';\nimport Action from './api/Action';\n/** Upload avatar\r\n * @param {Object} options\r\n * @param {File}   options.file\r\n * @param {String} options.of\r\n * @param {Number} options.group\r\n */\n\nexport const upload_avatar = async options => {\n  let {\n    file: userFile,\n    of,\n    group\n  } = options,\n      form = new FormData(),\n      //help us sending HTML forms: with or without files, with additional fields and so on\n  file = await imageCompressor(userFile),\n      action = new Action('.c_a_add');\n\n  if (file.size > 6000000) {\n    notify({\n      value: 'Image should be less than 4Mb'\n    });\n  } else {\n    action.start('Changing avatar ...');\n    form.append('avatar', file);\n    form.append('of', of);\n    form.append('group', group);\n    let {\n      data: {\n        success,\n        message\n      }\n    } = await post('/api/upload-avatar', form);\n    notify({\n      value: message,\n      done: () => success ? window.location.reload() : null\n    }); //reloads the current URL, like the Refresh button\n\n    action.end('Change avatar');\n  }\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/avatar-utils.js"],"names":["post","imageCompressor","notify","Action","upload_avatar","options","file","userFile","of","group","form","FormData","action","size","value","start","append","data","success","message","done","window","location","reload","end"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,OAAnB;AACA,SAAQC,eAAR,QAA8B,SAA9B;AACA,SAAQC,MAAR,QAAqB,yCAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA;;;;;;;AAMC,OAAO,MAAMC,aAAa,GAAG,MAAMC,OAAN,IAAiB;AAC1C,MAAI;AAACC,IAAAA,IAAI,EAAEC,QAAP;AAAgBC,IAAAA,EAAhB;AAAmBC,IAAAA;AAAnB,MAA4BJ,OAAhC;AAAA,MACIK,IAAI,GAAG,IAAIC,QAAJ,EADX;AAAA,MAC2B;AACvBL,EAAAA,IAAI,GAAG,MAAML,eAAe,CAACM,QAAD,CAFhC;AAAA,MAGIK,MAAM,GAAG,IAAIT,MAAJ,CAAW,UAAX,CAHb;;AAKC,MAAGG,IAAI,CAACO,IAAL,GAAY,OAAf,EAAuB;AACnBX,IAAAA,MAAM,CAAC;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAN;AACH,GAFD,MAEM;AACFF,IAAAA,MAAM,CAACG,KAAP,CAAa,qBAAb;AACAL,IAAAA,IAAI,CAACM,MAAL,CAAY,QAAZ,EAAsBV,IAAtB;AACAI,IAAAA,IAAI,CAACM,MAAL,CAAY,IAAZ,EAAkBR,EAAlB;AACAE,IAAAA,IAAI,CAACM,MAAL,CAAY,OAAZ,EAAqBP,KAArB;AAEA,QAAI;AAACQ,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT;AAAP,QAA4B,MAAMnB,IAAI,CAAC,oBAAD,EAAuBU,IAAvB,CAA1C;AACAR,IAAAA,MAAM,CAAC;AACHY,MAAAA,KAAK,EAAGK,OADL;AAEHC,MAAAA,IAAI,EAAE,MAAOF,OAAO,GAAGG,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAH,GAA8B;AAF/C,KAAD,CAAN,CAPE,CAUC;;AAEHX,IAAAA,MAAM,CAACY,GAAP,CAAW,eAAX;AACJ;AACJ,CAtBM","sourcesContent":["import {post} from 'axios';\r\nimport {imageCompressor} from './utils';\r\nimport {notify} from '../utils/utilMethods/handy-notification';\r\nimport Action from './api/Action';\r\n\r\n/** Upload avatar\r\n * @param {Object} options\r\n * @param {File}   options.file\r\n * @param {String} options.of\r\n * @param {Number} options.group\r\n */\r\n export const upload_avatar = async options => {\r\n     let {file: userFile,of,group} = options,\r\n         form = new FormData(), //help us sending HTML forms: with or without files, with additional fields and so on\r\n         file = await imageCompressor(userFile),\r\n         action = new Action('.c_a_add')\r\n\r\n      if(file.size > 6000000){\r\n          notify({ value: 'Image should be less than 4Mb'})\r\n      } else{\r\n          action.start('Changing avatar ...');\r\n          form.append('avatar', file);\r\n          form.append('of', of);\r\n          form.append('group', group);\r\n\r\n          let {data: {success,message}} = await post('/api/upload-avatar', form);\r\n          notify({\r\n              value:  message,\r\n              done: () => (success ? window.location.reload() : null)\r\n          }) //reloads the current URL, like the Refresh button\r\n\r\n          action.end('Change avatar')\r\n     }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}