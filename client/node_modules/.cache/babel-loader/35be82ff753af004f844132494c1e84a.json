{"ast":null,"code":"import React from'react';import{uniq}from'lodash';import ToLink from'./toLink';var ToTags=function ToTags(_ref){var str=_ref.str;var hashes=str.split(' ');var hashesElem=[];if(!hashes){hashesElem=[];}else{hashesElem=hashes.map(function(elem){var hash=elem.slice(1);var filtered=hash.replace(/[^a-z0-9A-Z_]/,'');var isLink=elem.match(/https?:\\/\\/(www\\.)?[a-zA-Z0-9@:%._+~#=]{2,256}\\b([a-zA-Z0-9@:%_+.~#?&//=]*)/);if(elem.charAt(0)==='#'){if(hash.charAt(0)!=='#'){return/*#__PURE__*/React.createElement(ToLink,{key:uniq(),url:\"/hashtag/\".concat(filtered),label:\"\".concat(elem)});}}else if(elem.charAt(0)==='@'){if(hash.charAt(0)!=='@'){return/*#__PURE__*/React.createElement(ToLink,{key:uniq(),url:\"/profile/\".concat(filtered),label:\"\".concat(elem)});}}else if(isLink){return/*#__PURE__*/React.createElement(\"a\",{key:uniq(),href:elem,className:\"hashtag\",target:\"_blank\"},\"\".concat(elem));}return\"\".concat(elem);});}return/*#__PURE__*/React.createElement(\"span\",null,hashesElem);};ToTags.defaultProps={str:''};export default ToTags;","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/hashtag/toTags/toTags.js"],"names":["React","uniq","ToLink","ToTags","str","hashes","split","hashesElem","map","elem","hash","slice","filtered","replace","isLink","match","charAt","defaultProps"],"mappings":"AAAC,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,KAAmB,QAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAW,IAATC,CAAAA,GAAS,MAATA,GAAS,CACtB,GAAIC,CAAAA,MAAM,CAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAb,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEA,GAAG,CAACF,MAAJ,CAAW,CACPE,UAAU,CAAG,EAAb,CACH,CAFD,IAEO,CACDA,UAAU,CAAGF,MAAM,CAACG,GAAP,CAAW,SAAAC,IAAI,CAAI,CAC/B,GAAIC,CAAAA,IAAI,CAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,CAAX,CACA,GAAIC,CAAAA,QAAQ,CAAGF,IAAI,CAACG,OAAL,CAAa,eAAb,CAA8B,EAA9B,CAAf,CACA,GAAIC,CAAAA,MAAM,CAAGL,IAAI,CAACM,KAAL,CAAW,6EAAX,CAAb,CAEA,GAAGN,IAAI,CAACO,MAAL,CAAY,CAAZ,IAAmB,GAAtB,CAA0B,CACtB,GAAGN,IAAI,CAACM,MAAL,CAAY,CAAZ,IAAmB,GAAtB,CAA0B,CACtB,mBACG,oBAAC,MAAD,EACG,GAAG,CAAEf,IAAI,EADZ,CAEG,GAAG,oBAAcW,QAAd,CAFN,CAGG,KAAK,WAAKH,IAAL,CAHR,EADH,CAOH,CACJ,CAVD,IAUO,IAAGA,IAAI,CAACO,MAAL,CAAY,CAAZ,IAAmB,GAAtB,CAA0B,CAC7B,GAAGN,IAAI,CAACM,MAAL,CAAY,CAAZ,IAAmB,GAAtB,CAA0B,CACtB,mBACI,oBAAC,MAAD,EACG,GAAG,CAAEf,IAAI,EADZ,CAEG,GAAG,oBAAcW,QAAd,CAFN,CAGG,KAAK,WAAKH,IAAL,CAHR,EADJ,CAOH,CACJ,CAVM,IAUA,IAAGK,MAAH,CAAU,CACb,mBAAO,yBAAG,GAAG,CAAEb,IAAI,EAAZ,CAAgB,IAAI,CAAEQ,IAAtB,CAA4B,SAAS,CAAC,SAAtC,CAAgD,MAAM,CAAC,QAAvD,YAAoEA,IAApE,EAAP,CACH,CAED,gBAAUA,IAAV,EACH,CA9Be,CAAb,CA+BL,CAEF,mBAAO,gCAAOF,UAAP,CAAP,CACF,CAzCD,CA2CAJ,MAAM,CAACc,YAAP,CAAsB,CAClBb,GAAG,CAAE,EADa,CAAtB,CAQA,cAAeD,CAAAA,MAAf","sourcesContent":[" import React from 'react';\r\n import {uniq} from 'lodash';\r\n import ToLink from './toLink';\r\n import {string} from 'prop-types';\r\n \r\n const ToTags = ({str}) => {\r\n     let hashes = str.split(' ')\r\n     let hashesElem = []\r\n\r\n     if(!hashes){\r\n         hashesElem = []\r\n     } else {\r\n           hashesElem = hashes.map(elem => {\r\n            let hash = elem.slice(1)\r\n            let filtered = hash.replace(/[^a-z0-9A-Z_]/, '');\r\n            let isLink = elem.match(/https?:\\/\\/(www\\.)?[a-zA-Z0-9@:%._+~#=]{2,256}\\b([a-zA-Z0-9@:%_+.~#?&//=]*)/)\r\n\r\n            if(elem.charAt(0) === '#'){\r\n                if(hash.charAt(0) !== '#'){\r\n                    return ( \r\n                       <ToLink \r\n                          key={uniq()}\r\n                          url={`/hashtag/${filtered}`}\r\n                          label={`${elem}`}\r\n                       />\r\n                    )\r\n                }\r\n            } else if(elem.charAt(0) === '@'){\r\n                if(hash.charAt(0) !== '@'){\r\n                    return (\r\n                        <ToLink\r\n                           key={uniq()}\r\n                           url={`/profile/${filtered}`}\r\n                           label={`${elem}`}\r\n                        />\r\n                    )\r\n                }\r\n            } else if(isLink){\r\n                return <a key={uniq()} href={elem} className=\"hashtag\" target=\"_blank\">{`${elem}`}</a>       \r\n            }\r\n\r\n            return `${elem}`\r\n        })\r\n     }\r\n\r\n    return <span>{hashesElem}</span>\r\n }\r\n\r\n ToTags.defaultProps = {\r\n     str: ''\r\n }\r\n\r\n ToTags.propTypes = {\r\n     str: string.isRequired\r\n }\r\n\r\n export default ToTags;"]},"metadata":{},"sourceType":"module"}