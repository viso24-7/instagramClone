{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\post\\\\post.js\";\nimport React, { Component } from 'react';\nimport { timeAgo } from '../../../utils/utilMethods/handyTimeAgo';\nimport PostTop from './post-top/post-top';\nimport PostImage from './post-middle/post-image';\nimport PostActions from './post-actions/post-actions';\nimport PostBottom from './post-bottom/post-bottom';\nimport AppLink from '../../others/link/link';\nimport { number, string, oneOf, array } from 'prop-types';\nexport default class Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: ''\n    };\n\n    this.componentDidMount = () => this.setState({\n      description: this.state.description\n    });\n  }\n\n  render() {\n    let {\n      description\n    } = this.state;\n    let {\n      share_by_username,\n      share_time,\n      when\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, when === 'shared' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post_share_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 23\n      }\n    }, \"by\", ' ', /*#__PURE__*/React.createElement(AppLink, {\n      url: `/profile/${share_by_username}`,\n      label: share_by_username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }\n    }, share_time ? timeAgo(share_time) : null)), /*#__PURE__*/React.createElement(PostTop, {\n      postDetails: { ...this.props,\n        description\n      },\n      updateDescription: value => this.setState({\n        description: value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(PostImage, {\n      postDetails: { ...this.props,\n        description\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"img_d_hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(PostActions, {\n      postDetails: { ...this.props\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(PostBottom, {\n      postDetails: { ...this.props\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\nPost.propTypes = {\n  post_id: number.isRequired,\n  likes_count: number.isRequired,\n  shares_count: number.isRequired,\n  comments_count: number.isRequired,\n  tags_count: number.isRequired,\n  user: number.isRequired,\n  group_id: number,\n  username: string.isRequired,\n  firstname: string.isRequired,\n  surname: string.isRequired,\n  location: string.isRequired,\n  description: string.isRequired,\n  filter: string.isRequired,\n  imgSrc: string.isRequired,\n  type: oneOf(['user', 'group']).isRequired,\n  group_name: string,\n  post_time: string.isRequired,\n  share_by_username: string,\n  share_time: string,\n  comments: array,\n  when: oneOf(['feed', 'viewPost', 'userPosts', 'bookmarks', 'shared', 'tagged', 'groupPosts', 'hashtag']).isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/post/post.js"],"names":["React","Component","timeAgo","PostTop","PostImage","PostActions","PostBottom","AppLink","number","string","oneOf","array","Post","state","description","componentDidMount","setState","render","share_by_username","share_time","when","props","value","propTypes","post_id","isRequired","likes_count","shares_count","comments_count","tags_count","user","group_id","username","firstname","surname","location","filter","imgSrc","type","group_name","post_time","comments"],"mappings":"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","sourcesContent":["  import React,{Component} from 'react';\r\n  import {timeAgo} from '../../../utils/utilMethods/handyTimeAgo';\r\n  import PostTop from './post-top/post-top';\r\n  import PostImage from './post-middle/post-image';\r\n  import PostActions from './post-actions/post-actions';\r\n  import PostBottom from './post-bottom/post-bottom';\r\n  import AppLink from '../../others/link/link';\r\n  import {number,string,oneOf,array} from 'prop-types';\r\n  \r\n  export default class Post extends Component {\r\n      state = { description: ''}\r\n\r\n      componentDidMount = () =>this.setState({ description: this.state.description })\r\n\r\n      render(){\r\n          let {description} = this.state;\r\n          let {share_by_username,share_time,when} = this.props;\r\n\r\n          return (\r\n              <div className=\"posts\">\r\n                  {when === 'shared' && (\r\n                      <div className=\"post_share_info\">\r\n                          by{' '} \r\n                          <AppLink\r\n                              url={`/profile/${share_by_username}`}\r\n                              label={share_by_username}\r\n                           />\r\n                           <span>{share_time ? timeAgo(share_time) : null }</span>\r\n                      </div>\r\n                  )}\r\n\r\n                  <PostTop\r\n                     postDetails={{\r\n                         ...this.props,\r\n                         description\r\n                        }}\r\n                     updateDescription={value => this.setState({ description: value })}\r\n                  />\r\n                  <PostImage\r\n                    postDetails={{\r\n                        ...this.props,\r\n                        description\r\n                    }}\r\n                  />\r\n\r\n                  <hr className=\"img_d_hr\" />\r\n                  <PostActions postDetails={{...this.props}} />\r\n                  <hr />\r\n                  <PostBottom postDetails={{...this.props}} />\r\n              </div>\r\n          )\r\n      }\r\n  } \r\n\r\n  Post.propTypes = {\r\n      post_id: number.isRequired,\r\n      likes_count: number.isRequired,\r\n      shares_count: number.isRequired,\r\n      comments_count: number.isRequired,\r\n      tags_count: number.isRequired,\r\n      user: number.isRequired,\r\n      group_id: number,\r\n      username: string.isRequired,\r\n      firstname: string.isRequired,\r\n      surname: string.isRequired,\r\n      location: string.isRequired,\r\n      description: string.isRequired,\r\n      filter: string.isRequired,\r\n      imgSrc: string.isRequired,\r\n      type: oneOf(['user','group']).isRequired,\r\n      group_name: string,\r\n      post_time: string.isRequired,\r\n      share_by_username: string,\r\n      share_time: string,\r\n      comments: array,\r\n      when: oneOf(['feed','viewPost','userPosts','bookmarks','shared','tagged','groupPosts','hashtag']).isRequired,\r\n  }"]},"metadata":{},"sourceType":"module"}