{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import classNames from'classnames';import{FadeIn}from'animate-components';import{getConversationMessages,readConversation,getConDetails}from'../../../actions/message';import{cLoading}from'../../../utils/utils';import{messageScroll}from'../../../utils/message-utils';import d from'../../../utils/api/Dom';import IsLoading from'../../others/isLoading';import MapMessages from'./message/map-messages';import TextMessage from'./bottom/text-message';import ConversationTop from'./top/conver-top';var Conversation=/*#__PURE__*/function(_Component){_inherits(Conversation,_Component);var _super=_createSuper(Conversation);function Conversation(){var _this;_classCallCheck(this,Conversation);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loading:true};_this.componentWillReceiveProps=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var dispatch,nextPropsCon,con_id,unreadMssgs,con;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref.dispatch,nextPropsCon=_ref.con;con_id=nextPropsCon.con_id,unreadMssgs=nextPropsCon.unreadMssgs;con=_this.props.con;if(con_id!=con.con_id){new d('.send_mssg').focus();dispatch(getConDetails(con_id));dispatch(getConversationMessages(con_id));dispatch(readConversation(con_id,unreadMssgs));}_this.setState({loading:false});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.componentDidMount=function(){var _this$props=_this.props,_this$props$con=_this$props.con,con_id=_this$props$con.con_id,unreadMssgs=_this$props$con.unreadMssgs,dispatch=_this$props.dispatch;dispatch(getConDetails(con_id));dispatch(getConversationMessages(con_id));dispatch(readConversation(con_id,unreadMssgs));messageScroll();};_this.componentDidUpdate=function(){return messageScroll();};return _this;}_createClass(Conversation,[{key:\"render\",value:function render(){var loading=this.state.loading;var hideConversation=this.props.hideConversation;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IsLoading,{loading:loading}),/*#__PURE__*/React.createElement(\"div\",{className:classNames('mssg_messages',cLoading(loading))},/*#__PURE__*/React.createElement(FadeIn,{duration:\"300ms\"},/*#__PURE__*/React.createElement(ConversationTop,{hideConversation:hideConversation}),/*#__PURE__*/React.createElement(MapMessages,null),/*#__PURE__*/React.createElement(\"div\",{className:\"m_m_bottom\"},/*#__PURE__*/React.createElement(TextMessage,null)))));}}]);return Conversation;}(Component);export default connect()(Conversation);export{Conversation as PureConversation};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/conversation/conversation.js"],"names":["React","Component","connect","classNames","FadeIn","getConversationMessages","readConversation","getConDetails","cLoading","messageScroll","d","IsLoading","MapMessages","TextMessage","ConversationTop","Conversation","state","loading","componentWillReceiveProps","dispatch","nextPropsCon","con","con_id","unreadMssgs","props","focus","setState","componentDidMount","componentDidUpdate","hideConversation","PureConversation"],"mappings":"++BAAC,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,MAAR,KAAqB,oBAArB,CACA,OAAQC,uBAAR,CAAgCC,gBAAhC,CAAiDC,aAAjD,KAAqE,0BAArE,CACA,OAAQC,QAAR,KAAuB,sBAAvB,CACA,OAAQC,aAAR,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,CAAP,KAAc,wBAAd,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,kBAA5B,C,GAGMC,CAAAA,Y,mVACFC,K,CAAQ,CAAEC,OAAO,CAAE,IAAX,C,OAERC,yB,2FAA4B,wLAAQC,QAAR,MAAQA,QAAR,CAAsBC,YAAtB,MAAiBC,GAAjB,CACnBC,MADmB,CACGF,YADH,CACnBE,MADmB,CACZC,WADY,CACGH,YADH,CACZG,WADY,CAEnBF,GAFmB,CAEZ,MAAKG,KAFO,CAEnBH,GAFmB,CAGxB,GAAGC,MAAM,EAAID,GAAG,CAACC,MAAjB,CAAwB,CACpB,GAAIZ,CAAAA,CAAJ,CAAM,YAAN,EAAoBe,KAApB,GACAN,QAAQ,CAACZ,aAAa,CAACe,MAAD,CAAd,CAAR,CACAH,QAAQ,CAACd,uBAAuB,CAACiB,MAAD,CAAxB,CAAR,CACAH,QAAQ,CAACb,gBAAgB,CAACgB,MAAD,CAAQC,WAAR,CAAjB,CAAR,CACH,CAED,MAAKG,QAAL,CAAc,CAAET,OAAO,CAAE,KAAX,CAAd,EAVwB,sD,sEAa5BU,iB,CAAoB,UAAM,iBACoB,MAAKH,KADzB,6BACjBH,GADiB,CACZC,MADY,iBACZA,MADY,CACLC,WADK,iBACLA,WADK,CACQJ,QADR,aACQA,QADR,CAEtBA,QAAQ,CAACZ,aAAa,CAACe,MAAD,CAAd,CAAR,CACAH,QAAQ,CAACd,uBAAuB,CAACiB,MAAD,CAAxB,CAAR,CACAH,QAAQ,CAACb,gBAAgB,CAACgB,MAAD,CAAQC,WAAR,CAAjB,CAAR,CACAd,aAAa,GAChB,C,OAEDmB,kB,CAAqB,iBAAMnB,CAAAA,aAAa,EAAnB,E,+EAEb,IACCQ,CAAAA,OADD,CACY,KAAKD,KADjB,CACCC,OADD,IAECY,CAAAA,gBAFD,CAEqB,KAAKL,KAF1B,CAECK,gBAFD,CAIJ,mBACI,4CACI,oBAAC,SAAD,EAAW,OAAO,CAAEZ,OAApB,EADJ,cAGI,2BAAK,SAAS,CAAEd,UAAU,CAAC,eAAD,CAAiBK,QAAQ,CAACS,OAAD,CAAzB,CAA1B,eACI,oBAAC,MAAD,EAAQ,QAAQ,CAAC,OAAjB,eACI,oBAAC,eAAD,EAAiB,gBAAgB,CAAEY,gBAAnC,EADJ,cAEI,oBAAC,WAAD,MAFJ,cAII,2BAAK,SAAS,CAAC,YAAf,eACI,oBAAC,WAAD,MADJ,CAJJ,CADJ,CAHJ,CADJ,CAgBH,C,0BA9CsB5B,S,EAyD3B,cAAeC,CAAAA,OAAO,GAAGa,YAAH,CAAtB,CACA,OAAQA,YAAY,GAAIe,CAAAA,gBAAxB","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import classNames from 'classnames';\r\n import {FadeIn} from 'animate-components';\r\n import {getConversationMessages,readConversation,getConDetails} from '../../../actions/message';\r\n import {cLoading} from '../../../utils/utils';\r\n import {messageScroll} from '../../../utils/message-utils';\r\n import d from '../../../utils/api/Dom';\r\n import IsLoading from '../../others/isLoading';\r\n import MapMessages from './message/map-messages';\r\n import TextMessage from './bottom/text-message';\r\n import ConversationTop from './top/conver-top';\r\n import {number,func,shape} from 'prop-types';\r\n\r\n class Conversation extends Component {\r\n     state = { loading: true }\r\n\r\n     componentWillReceiveProps = async ({dispatch,con: nextPropsCon}) => {\r\n         let {con_id,unreadMssgs} = nextPropsCon;\r\n         let {con} = this.props;\r\n         if(con_id != con.con_id){\r\n             new d('.send_mssg').focus()\r\n             dispatch(getConDetails(con_id))\r\n             dispatch(getConversationMessages(con_id))\r\n             dispatch(readConversation(con_id,unreadMssgs))\r\n         }\r\n\r\n         this.setState({ loading: false })\r\n     }\r\n\r\n     componentDidMount = () => {\r\n         let {con:{con_id,unreadMssgs},dispatch} = this.props;\r\n         dispatch(getConDetails(con_id))\r\n         dispatch(getConversationMessages(con_id));\r\n         dispatch(readConversation(con_id,unreadMssgs))\r\n         messageScroll()\r\n     }\r\n\r\n     componentDidUpdate = () => messageScroll()\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {hideConversation} = this.props;\r\n\r\n         return (\r\n             <div>\r\n                 <IsLoading loading={loading} />\r\n\r\n                 <div className={classNames('mssg_messages',cLoading(loading))}>\r\n                     <FadeIn duration=\"300ms\">\r\n                         <ConversationTop hideConversation={hideConversation} />\r\n                         <MapMessages />\r\n\r\n                         <div className=\"m_m_bottom\">\r\n                             <TextMessage />\r\n                         </div>\r\n                     </FadeIn>\r\n                 </div>\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n Conversation.propTypes = {\r\n     con: shape({\r\n         con_id: number.isRequired,\r\n         unreadMssgs: number.isRequired\r\n         }).isRequired,\r\n     hideConversation: func.isRequired    \r\n }\r\n\r\n export default connect()(Conversation);\r\n export {Conversation as PureConversation}"]},"metadata":{},"sourceType":"module"}