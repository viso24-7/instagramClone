{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\group\\\\sections\\\\members\\\\member\\\\member-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { post } from 'axios';\nimport { Me } from '../../../../../utils/utils';\nimport { isAdmin } from '../../../../../utils/admin-utils';\nimport { timeAgo } from '../../../../../utils/utilMethods/handyTimeAgo';\nimport MemberAddedBy from './member-added-by';\nimport MemberTop from './member-top';\nimport RemoveMember from './remove-member';\nimport AppLink from '../../../../others/link/link';\nimport Follow from '../../../../others/follow/follow';\nimport UnFollow from '../../../../others/follow/unfollow';\nimport MonSticky from '../../../../others/m-on/mon-sticky';\nimport { number, string } from 'prop-types';\n\nclass MembersList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFollowing: false,\n      showTime: false\n    };\n\n    this.showTime = () => this.setState({\n      showTime: true\n    });\n\n    this.hideTime = () => this.setState({\n      showTime: false\n    });\n\n    this.componentDidMount = async () => {\n      let {\n        member,\n        username\n      } = this.props;\n\n      if (!Me(member)) {\n        let {\n          data\n        } = await post('/api/is-following', {\n          username\n        });\n        this.setState({\n          isFollowing: data\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      isFollowing,\n      showTime\n    } = this.state;\n    let {\n      group_details,\n      group_member_id,\n      member,\n      username,\n      firstname,\n      surname,\n      added_by,\n      added_by_username,\n      mutualUsersCount,\n      joined_group\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_on followers_m_on\",\n      onMouseOver: this.showTime,\n      onMouseOut: this.hideTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(MemberTop, {\n      memberDetails: {\n        member,\n        username,\n        firstname,\n        surname,\n        mutualUsersCount\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(MonSticky, {\n      show: showTime,\n      text: timeAgo(joined_group),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(MemberAddedBy, {\n      memberDetails: {\n        member,\n        added_by,\n        added_by_username\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), Me(member) ? /*#__PURE__*/React.createElement(AppLink, {\n      url: `/profile/${username}`,\n      className: \"sec_btn\",\n      label: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 30\n      }\n    }) : Me(group_details.admin) || isAdmin() ? /*#__PURE__*/React.createElement(RemoveMember, {\n      memberDetails: {\n        group_member_id,\n        member,\n        username\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 30\n      }\n    }) : isFollowing ? /*#__PURE__*/React.createElement(UnFollow, {\n      user: member,\n      unfollowed: () => this.setState({\n        isFollowing: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(Follow, {\n      userDetails: {\n        user: member,\n        username\n      },\n      followed: () => this.setState({\n        isFollowing: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    })));\n  }\n\n}\n\nMembersList.propTypes = {\n  group_member_id: number.isRequired,\n  member: number.isRequired,\n  username: string.isRequired,\n  firstname: string.isRequired,\n  surname: string.isRequired,\n  added_by: number.isRequired,\n  added_by_username: string.isRequired,\n  joined_group: string.isRequired,\n  mutualUsersCount: number.isRequired,\n  group_id: number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group_details: state.Group.group_details\n});\n\nexport default connect(mapStateToProps)(MembersList);\nexport { MembersList as PureMembersList };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/sections/members/member/member-list.js"],"names":["React","Component","connect","post","Me","isAdmin","timeAgo","MemberAddedBy","MemberTop","RemoveMember","AppLink","Follow","UnFollow","MonSticky","number","string","MembersList","state","isFollowing","showTime","setState","hideTime","componentDidMount","member","username","props","data","render","group_details","group_member_id","firstname","surname","added_by","added_by_username","mutualUsersCount","joined_group","admin","user","propTypes","isRequired","group_id","mapStateToProps","Group","PureMembersList"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {post} from 'axios';\r\n import {Me} from '../../../../../utils/utils';\r\n import {isAdmin} from '../../../../../utils/admin-utils';\r\n import {timeAgo} from '../../../../../utils/utilMethods/handyTimeAgo';\r\n import MemberAddedBy from './member-added-by';\r\n import MemberTop from './member-top';\r\n import RemoveMember from './remove-member';\r\n import AppLink from '../../../../others/link/link';\r\n import Follow from '../../../../others/follow/follow';\r\n import UnFollow from '../../../../others/follow/unfollow';\r\n import MonSticky from '../../../../others/m-on/mon-sticky';\r\n import {number,string} from 'prop-types';\r\n\r\n class MembersList extends Component{\r\n     state = {\r\n         isFollowing: false,\r\n         showTime: false\r\n     }\r\n\r\n     showTime = () => this.setState({ showTime: true})\r\n     hideTime = () => this.setState({ showTime: false})\r\n\r\n     componentDidMount = async () => {\r\n        let {member,username} = this.props;\r\n        if(!Me(member)){\r\n            let {data} = await post('/api/is-following',{username})\r\n            this.setState({ isFollowing: data })\r\n        }\r\n     }\r\n\r\n     render(){\r\n       let {isFollowing,showTime} = this.state;  \r\n       let {\r\n           group_details,\r\n           group_member_id,\r\n           member,\r\n           username,\r\n           firstname,\r\n           surname,\r\n           added_by,\r\n           added_by_username,\r\n           mutualUsersCount,\r\n           joined_group  } = this.props;\r\n\r\n           return (\r\n               <div className=\"m_on followers_m_on\" onMouseOver={this.showTime} onMouseOut={this.hideTime}>\r\n                   <MemberTop\r\n                       memberDetails={{\r\n                           member,\r\n                           username,\r\n                           firstname,\r\n                           surname,\r\n                           mutualUsersCount\r\n                          }}                   \r\n                     />\r\n\r\n                     <MonSticky show={showTime} text={timeAgo(joined_group)} />\r\n\r\n                     <div className=\"m_bottom\">\r\n                        <MemberAddedBy memberDetails={{member,added_by,added_by_username }} />\r\n\r\n                         {Me(member) ? (\r\n                             <AppLink url={`/profile/${username}`} className=\"sec_btn\" label=\"Profile\" />\r\n                         ) : Me(group_details.admin) || isAdmin() ? (\r\n                             <RemoveMember memberDetails={{group_member_id,member,username}} />\r\n                         ) : isFollowing ? (\r\n                             <UnFollow user={member} unfollowed={() => this.setState({ isFollowing: false})} />\r\n                         ) : (\r\n                            <Follow userDetails={{ user: member,username}} followed={() => this.setState({ isFollowing: true})} />\r\n                         )}\r\n                     </div>\r\n               </div>\r\n           )\r\n     }\r\n }\r\n\r\n MembersList.propTypes = {\r\n     group_member_id: number.isRequired,\r\n     member: number.isRequired,\r\n     username: string.isRequired,\r\n     firstname: string.isRequired,\r\n     surname: string.isRequired,\r\n     added_by: number.isRequired,\r\n     added_by_username: string.isRequired,\r\n     joined_group: string.isRequired,\r\n     mutualUsersCount: number.isRequired,\r\n     group_id: number.isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     group_details: state.Group.group_details\r\n })\r\n\r\n export default connect(mapStateToProps)(MembersList);\r\n export {MembersList as PureMembersList}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}