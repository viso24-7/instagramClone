{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{post}from'axios';import{addTag}from'../actions/user';import{ObjectMssg,wait}from'./utils';import{notify}from'../utils/utilMethods/handy-notification';import Action from'./api/Action';/**\r\n * Add user tags\r\n * @param {Object} options\r\n * @param {String} options.value\r\n * @param {Number} options.user\r\n * @param {Function} options.dispatch\r\n */export var addUserTags=function addUserTags(options){var value=options.value,user=options.user,dispatch=options.dispatch;if(value){dispatch(addTag({user:user,tag:value}));}else{notify({value:'Please enter a tag'});}};/**\r\n * Edit profile\r\n * @param {Object} options\r\n * @param {String} options.susername\r\n * @param {String} options.semail\r\n * @param {Object} options.values\r\n * @param {String} options.values.username\r\n * @param {String} options.values.email\r\n */export var editProfile=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(options){var susername,semail,values,_options$values,username,email,_yield$post,uCount,_yield$post2,eCount,action,_yield$post3,_yield$post3$data,message,success;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:susername=options.susername,semail=options.semail,values=options.values,_options$values=options.values,username=_options$values.username,email=_options$values.email;_context.next=3;return post('/api/what-exists',{what:'username',value:username});case 3:_yield$post=_context.sent;uCount=_yield$post.data;_context.next=7;return post('/api/what-exists',{what:'email',value:email});case 7:_yield$post2=_context.sent;eCount=_yield$post2.data;action=new Action('.edit_done');action.start('Processing ...');if(username){_context.next=15;break;}notify({value:'Username must not be empty'});_context.next=34;break;case 15:if(email){_context.next=19;break;}notify({value:'Email must not be empty'});_context.next=34;break;case 19:if(!(uCount===1&&username!==susername)){_context.next=23;break;}notify({value:'Username already exist'});_context.next=34;break;case 23:if(!(eCount===1&&email!==semail)){_context.next=27;break;}notify({value:'Email already exist'});_context.next=34;break;case 27:_context.next=29;return post('/api/edit-profile',values);case 29:_yield$post3=_context.sent;_yield$post3$data=_yield$post3.data;message=_yield$post3$data.message;success=_yield$post3$data.success;notify({value:ObjectMssg(message),done:function done(){return success?window.location.reload():null;}});case 34:action.end('Done editing');case 35:case\"end\":return _context.stop();}}},_callee);}));return function editProfile(_x){return _ref.apply(this,arguments);};}();/**\r\n * Resend verification link\r\n */export var resend_verification=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var action;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:action=new Action('.resend_vl',true,'sec_btn_disabled');action.start('Sending verification link ...');wait();notify({value:\"\"});action.end('Resend verifcation link');case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function resend_verification(){return _ref2.apply(this,arguments);};}();/**\r\n * Converts a fields object into array so we can map though \r\n * the array and follow DRY pattern.\r\n * @param {Object} fields Fields to convert into an array\r\n */export var filedsToArray=function filedsToArray(fields){var array=[];fields.map(function(index,value){array.push({index:index,value:value});});return array;};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/edit-profile-utils.js"],"names":["post","addTag","ObjectMssg","wait","notify","Action","addUserTags","options","value","user","dispatch","tag","editProfile","susername","semail","values","username","email","what","uCount","data","eCount","action","start","message","success","done","window","location","reload","end","resend_verification","filedsToArray","fields","array","map","index","push"],"mappings":"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","sourcesContent":["import {post} from 'axios'\r\nimport {addTag} from '../actions/user';\r\nimport {ObjectMssg,wait} from './utils';\r\nimport {notify} from '../utils/utilMethods/handy-notification';\r\nimport Action from './api/Action';\r\n\r\n/**\r\n * Add user tags\r\n * @param {Object} options\r\n * @param {String} options.value\r\n * @param {Number} options.user\r\n * @param {Function} options.dispatch\r\n */\r\n export const addUserTags = options => {\r\n     let {value,user,dispatch} = options;\r\n     if(value){\r\n         dispatch(addTag({\r\n             user,\r\n             tag: value\r\n         }))\r\n     } else {\r\n         notify({\r\n             value: 'Please enter a tag'\r\n         })\r\n     }\r\n }\r\n\r\n /**\r\n * Edit profile\r\n * @param {Object} options\r\n * @param {String} options.susername\r\n * @param {String} options.semail\r\n * @param {Object} options.values\r\n * @param {String} options.values.username\r\n * @param {String} options.values.email\r\n */\r\n export const editProfile = async options => {\r\n     let {susername,semail,values,values: {username,email}} = options;\r\n     let {data: uCount} = await post('/api/what-exists',{what: 'username', value: username});\r\n     let {data: eCount} = await post('/api/what-exists',{what: 'email', value: email});\r\n     let action = new Action('.edit_done');\r\n         action.start('Processing ...');\r\n     \r\n     if(!username){\r\n         notify({ value: 'Username must not be empty'});\r\n     } else if(!email){\r\n         notify({ value: 'Email must not be empty'})\r\n     } else if(uCount === 1 && username !== susername){\r\n         notify({ value: 'Username already exist'})\r\n     } else if(eCount === 1 && email !== semail){\r\n         notify({value: 'Email already exist'})\r\n     } else {\r\n         let {data: {message,success}} = await post('/api/edit-profile', values);\r\n         notify({\r\n             value: ObjectMssg(message),\r\n             done: () => (success ? window.location.reload() : null)\r\n         })\r\n     }\r\n\r\n     action.end('Done editing');\r\n }\r\n\r\n/**\r\n * Resend verification link\r\n */\r\n export const resend_verification = async () => {\r\n     let action = new Action('.resend_vl',true,'sec_btn_disabled');\r\n         action.start('Sending verification link ...');\r\n         wait();\r\n\r\n     notify({ value: \"\"});\r\n     action.end('Resend verifcation link')    \r\n }\r\n\r\n/**\r\n * Converts a fields object into array so we can map though \r\n * the array and follow DRY pattern.\r\n * @param {Object} fields Fields to convert into an array\r\n */\r\n export const filedsToArray = fields => {\r\n     let array = [];\r\n\r\n     fields.map((index,value) => {\r\n        array.push({\r\n            index,\r\n            value\r\n          })\r\n     })\r\n     return array;\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}