{"ast":null,"code":"import _classCallCheck from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{FadeIn}from'animate-components';import classNames from'classnames';import{getUnreadNotifications}from'../../actions/notification';import{getConversation}from'../../actions/message';import{cLoading}from'../../utils/utils';import NewConversation from'./new-conversation';import Conversation from'./conversation/conversation';import MapConversations from'./map-conversations/map-conversations';import OnlineUsersButton from'./online-users/onlineUsersButton';import Title from'../others/title';import IsLoading from'../others/isLoading';import Nothing from'../others/nothing';var Messages=/*#__PURE__*/function(_Component){_inherits(Messages,_Component);var _super=_createSuper(Messages);function Messages(){var _this;_classCallCheck(this,Messages);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loading:true,showConversation:false,selectedCon:{con_id:null,unreadMssgs:0}};_this.componentWillReceiveProps=function(){return _this.setState({loading:false});};_this.componentDidMount=function(){var dispatch=_this.props.dispatch;dispatch(getUnreadNotifications());dispatch(getConversation());};return _this;}_createClass(Messages,[{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,loading=_this$state.loading,showConversation=_this$state.showConversation,selectedCon=_this$state.selectedCon;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IsLoading,{loading:loading,when:\"page\"}),/*#__PURE__*/React.createElement(Title,{value:\"Messages\"}),/*#__PURE__*/React.createElement(FadeIn,{duration:\"300ms\",className:classNames('messages',cLoading(loading))},/*#__PURE__*/React.createElement(\"div\",{className:\"message_left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message_new\"},/*#__PURE__*/React.createElement(OnlineUsersButton,null),/*#__PURE__*/React.createElement(NewConversation,null)),/*#__PURE__*/React.createElement(MapConversations,{showConversation:function showConversation(con){_this2.setState({selectedCon:con,showConversation:true});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"message_right\"},showConversation?/*#__PURE__*/React.createElement(Conversation,{con:selectedCon,hideConversation:function hideConversation(){return _this2.setState({showConversation:false});}}):/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:77}},/*#__PURE__*/React.createElement(Nothing,{message:\"Please select a conversation\"})))));}}]);return Messages;}(Component);export default connect()(Messages);export{Messages as PureMessages};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/messages.js"],"names":["React","Component","connect","FadeIn","classNames","getUnreadNotifications","getConversation","cLoading","NewConversation","Conversation","MapConversations","OnlineUsersButton","Title","IsLoading","Nothing","Messages","state","loading","showConversation","selectedCon","con_id","unreadMssgs","componentWillReceiveProps","setState","componentDidMount","dispatch","props","con","marginTop","PureMessages"],"mappings":"4pBAAC,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,MAAR,KAAqB,oBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,sBAAR,KAAqC,4BAArC,CACA,OAAQC,eAAR,KAA8B,uBAA9B,CACA,OAAQC,QAAR,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,GAEMC,CAAAA,Q,mUACFC,K,CAAQ,CACJC,OAAO,CAAE,IADL,CAEJC,gBAAgB,CAAE,KAFd,CAGJC,WAAW,CAAE,CACTC,MAAM,CAAE,IADC,CAETC,WAAW,CAAE,CAFJ,CAHT,C,OASRC,yB,CAA4B,iBAAM,OAAKC,QAAL,CAAc,CAAEN,OAAO,CAAE,KAAX,CAAd,CAAN,E,OAC5BO,iB,CAAoB,UAAM,IACjBC,CAAAA,QADiB,CACL,MAAKC,KADA,CACjBD,QADiB,CAEtBA,QAAQ,CAACpB,sBAAsB,EAAvB,CAAR,CACAoB,QAAQ,CAACnB,eAAe,EAAhB,CAAR,CACH,C,2EAEM,iCACyC,KAAKU,KAD9C,CACCC,OADD,aACCA,OADD,CACSC,gBADT,aACSA,gBADT,CAC0BC,WAD1B,aAC0BA,WAD1B,CAGJ,mBACI,4CACI,oBAAC,SAAD,EAAW,OAAO,CAAEF,OAApB,CAA6B,IAAI,CAAC,MAAlC,EADJ,cAEI,oBAAC,KAAD,EAAO,KAAK,CAAC,UAAb,EAFJ,cAII,oBAAC,MAAD,EAAQ,QAAQ,CAAC,OAAjB,CAAyB,SAAS,CAAEb,UAAU,CAAC,UAAD,CAAYG,QAAQ,CAACU,OAAD,CAApB,CAA9C,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,SAAS,CAAC,aAAf,eACI,oBAAC,iBAAD,MADJ,cAEI,oBAAC,eAAD,MAFJ,CADJ,cAMI,oBAAC,gBAAD,EAAkB,gBAAgB,CAAE,0BAAAU,GAAG,CAAI,CAAE,MAAI,CAACJ,QAAL,CAAc,CAAEJ,WAAW,CAACQ,GAAd,CAAmBT,gBAAgB,CAAC,IAApC,CAAd,EAAyD,CAAtG,EANJ,CADJ,cAUI,2BAAK,SAAS,CAAC,eAAf,EACKA,gBAAgB,cACb,oBAAC,YAAD,EAAc,GAAG,CAAEC,WAAnB,CAAgC,gBAAgB,CAAE,kCAAM,CAAA,MAAI,CAACI,QAAL,CAAc,CAAEL,gBAAgB,CAAE,KAApB,CAAd,CAAN,EAAlD,EADa,cAGb,2BAAK,KAAK,CAAE,CAAEU,SAAS,CAAE,EAAb,CAAZ,eACI,oBAAC,OAAD,EAAS,OAAO,CAAC,8BAAjB,EADJ,CAJR,CAVJ,CAJJ,CADJ,CA2BH,C,sBA/CmB3B,S,EAkDvB,cAAeC,CAAAA,OAAO,GAAGa,QAAH,CAAtB,CACA,OAAQA,QAAQ,GAAIc,CAAAA,YAApB","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import classNames from 'classnames';\r\n import {getUnreadNotifications} from '../../actions/notification';\r\n import {getConversation} from '../../actions/message';\r\n import {cLoading} from '../../utils/utils';\r\n import NewConversation from './new-conversation';\r\n import Conversation from './conversation/conversation';\r\n import MapConversations from './map-conversations/map-conversations';\r\n import OnlineUsersButton from './online-users/onlineUsersButton';\r\n import Title from '../others/title';\r\n import IsLoading from '../others/isLoading';\r\n import Nothing from '../others/nothing';\r\n\r\n class Messages extends Component{\r\n     state = { \r\n         loading: true,\r\n         showConversation: false,\r\n         selectedCon: {\r\n             con_id: null,\r\n             unreadMssgs: 0\r\n         }\r\n     }\r\n\r\n     componentWillReceiveProps = () => this.setState({ loading: false })\r\n     componentDidMount = () => {\r\n         let {dispatch} = this.props;\r\n         dispatch(getUnreadNotifications())\r\n         dispatch(getConversation())\r\n     }\r\n\r\n    render(){\r\n        let {loading,showConversation,selectedCon} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <IsLoading loading={loading} when=\"page\" />\r\n                <Title value=\"Messages\" />\r\n\r\n                <FadeIn duration=\"300ms\" className={classNames('messages',cLoading(loading))}>\r\n                    <div className=\"message_left\">\r\n                        <div className=\"message_new\">\r\n                            <OnlineUsersButton />\r\n                            <NewConversation />\r\n                        </div>\r\n\r\n                        <MapConversations showConversation={con => { this.setState({ selectedCon:con, showConversation:true})} } />\r\n                    </div>\r\n\r\n                    <div className=\"message_right\">\r\n                        {showConversation ? (\r\n                            <Conversation con={selectedCon} hideConversation={() => this.setState({ showConversation: false })} />\r\n                        ) : (\r\n                            <div style={{ marginTop: 77 }}>\r\n                                <Nothing message=\"Please select a conversation\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </FadeIn>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n export default connect()(Messages);\r\n export {Messages as PureMessages}"]},"metadata":{},"sourceType":"module"}