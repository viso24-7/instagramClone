{"ast":null,"code":"import _objectSpread from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{post}from'axios';import{insta_notify,ObjectMssg,wait}from'./utils';import{notify}from'../utils/utilMethods/handy-notification';import{leftGroup,updateGroup}from'../actions/group';import Action from'./api/Action';/**\r\n * Creates a group\r\n * @param {Object} options\r\n * @param {String} options.name\r\n * @param {String} options.bio\r\n */export var createGroup=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(options){var name,bio,created,action,_yield$post,_yield$post$data,message,success,groupId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:name=options.name,bio=options.bio,created=options.created;action=new Action('.c_g_update');action.start('Please wait ...');wait();_context.next=6;return post('/api/create-group',{name:name,bio:bio});case 6:_yield$post=_context.sent;_yield$post$data=_yield$post.data;message=_yield$post$data.message;success=_yield$post$data.success;groupId=_yield$post$data.groupId;if(success){notify({value:message});created(groupId);}else{notify({value:ObjectMssg(message)});}action.end('Create group');case 13:case\"end\":return _context.stop();}}},_callee);}));return function createGroup(_x){return _ref.apply(this,arguments);};}();/**\r\n * Edit group\r\n * @param {Number} options.group_id\r\n * @param {Object} options\r\n * @param {String} options.name\r\n * @param {String} options.bio\r\n * @param {Boolean} options.isPrivate\r\n * @param {Function} options.dispatch\r\n */export var editGroup=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options){var group_id,name,bio,isPrivate,dispatch,group_type,action,_yield$post2,_yield$post2$data,success,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:group_id=options.group_id,name=options.name,bio=options.bio,isPrivate=options.isPrivate,dispatch=options.dispatch;group_type=isPrivate?'private':'public';action=new Action('.g_e_save_btn',true,'sec_btn_disabled');action.start('Updating ...');wait();_context2.next=7;return post('/api/edit-group',{name:name,bio:bio,group_type:group_type,group:group_id});case 7:_yield$post2=_context2.sent;_yield$post2$data=_yield$post2.data;success=_yield$post2$data.success;message=_yield$post2$data.message;if(success){dispatch(updateGroup({name:name,bio:bio,group_type:group_type}));}notify({value:message});action.end('Update');case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function editGroup(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * Join group\r\n *\r\n * user, group, when & done properties must be provided\r\n * @param {Object} options Options for joining group\r\n * @param {Number} options.user\r\n * @param {Number} options.added_by\r\n * @param {Number} options.group\r\n * @param {String} options.when\r\n * @param {Function} options.done\r\n */export var joinGroup=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options){var defaults,obj,user,added_by,group,when,done,_yield$post3,_yield$post3$data,success,message;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:defaults={user:null,added_by:null,group:null,when:'',done:function done(){return null;}};obj=_objectSpread(_objectSpread({},defaults),options);user=obj.user,added_by=obj.added_by,group=obj.group,when=obj.when,done=obj.done;_context3.next=5;return post('/api/join-group',{user:user,added_by:added_by,group:group,when:when});case 5:_yield$post3=_context3.sent;_yield$post3$data=_yield$post3.data;success=_yield$post3$data.success;message=_yield$post3$data.message;if(success){if(when==='add_grp_member'){insta_notify({to:user,type:'add_grp_member',group_id:group});}done();}notify({value:message});case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function joinGroup(_x3){return _ref3.apply(this,arguments);};}();/**\r\n * Leave group\r\n *\r\n * user, group & done properties must be provided\r\n * @param {Object} options Options for leaving group\r\n * @param {Number} options.user\r\n * @param {Number} options.group\r\n * @param {Boolean} options.updateGroups\r\n * @param {Function} options.dispatch\r\n * @param {Function} options.done\r\n */export var leaveGroup=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(options){var defaults,obj,user,group,updateGroups,dispatch,done,_yield$post4,_yield$post4$data,success,message;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:defaults={user:null,group:null,updateGroups:false,dispatch:function dispatch(){return null;},done:function done(){return null;}};obj=_objectSpread(_objectSpread({},defaults),options);user=obj.user,group=obj.group,updateGroups=obj.updateGroups,dispatch=obj.dispatch,done=obj.done;_context4.next=5;return post('/api/leave-group',{user:user,group:group});case 5:_yield$post4=_context4.sent;_yield$post4$data=_yield$post4.data;success=_yield$post4$data.success;message=_yield$post4$data.message;if(success){if(updateGroups){dispatch(leftGroup(group));}done();}notify({value:message});case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function leaveGroup(_x4){return _ref4.apply(this,arguments);};}();/**\r\n * Change admin of the group\r\n * @param {Object} options\r\n * @param {Number} options.member\r\n * @param {Number} options.group\r\n */export var changeAdmin=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(options){var member,group,_yield$post5,_yield$post5$data,success,message;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:member=options.member,group=options.group;_context5.next=3;return post('/api/change-admin',{user:member,group:group});case 3:_yield$post5=_context5.sent;_yield$post5$data=_yield$post5.data;success=_yield$post5$data.success;message=_yield$post5$data.message;if(success){insta_notify({to:member,type:'change_admin',group_id:group});}notify({value:message,done:function done(){return success?window.location.reload():null;}});case 9:case\"end\":return _context5.stop();}}},_callee5);}));return function changeAdmin(_x5){return _ref5.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/utils/group-utils.js"],"names":["post","insta_notify","ObjectMssg","wait","notify","leftGroup","updateGroup","Action","createGroup","options","name","bio","created","action","start","data","message","success","groupId","value","end","editGroup","group_id","isPrivate","dispatch","group_type","group","joinGroup","defaults","user","added_by","when","done","obj","to","type","leaveGroup","updateGroups","changeAdmin","member","window","location","reload"],"mappings":"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","sourcesContent":["import {post} from 'axios';\r\nimport {insta_notify,ObjectMssg,wait} from './utils';\r\nimport {notify} from '../utils/utilMethods/handy-notification';\r\nimport {leftGroup,updateGroup} from '../actions/group';\r\nimport Action from './api/Action';\r\n\r\n/**\r\n * Creates a group\r\n * @param {Object} options\r\n * @param {String} options.name\r\n * @param {String} options.bio\r\n */\r\n export const createGroup = async options => {\r\n     let {name,bio,created} = options;\r\n     let action = new Action('.c_g_update');\r\n\r\n     action.start('Please wait ...');\r\n     wait();\r\n\r\n     let {data: {message,success,groupId}} = await post('/api/create-group', {name,bio});\r\n     if(success){\r\n         notify({ value: message});\r\n         created(groupId);\r\n     } else {\r\n         notify({ value: ObjectMssg(message)})\r\n     }\r\n\r\n     action.end('Create group');\r\n  }\r\n\r\n  /**\r\n * Edit group\r\n * @param {Number} options.group_id\r\n * @param {Object} options\r\n * @param {String} options.name\r\n * @param {String} options.bio\r\n * @param {Boolean} options.isPrivate\r\n * @param {Function} options.dispatch\r\n */\r\n export const editGroup = async options => {\r\n     let {group_id,name,bio,isPrivate,dispatch} = options;\r\n     let group_type = isPrivate ? 'private' : 'public';\r\n     let action = new Action('.g_e_save_btn',true,'sec_btn_disabled');\r\n\r\n     action.start('Updating ...');\r\n     wait();\r\n\r\n     let {data: {success,message}} = await post('/api/edit-group', {name,bio,group_type,group:group_id})\r\n     if(success){ \r\n         dispatch(updateGroup({name,bio,group_type}));\r\n     }\r\n     notify({value: message});\r\n     action.end('Update');\r\n }\r\n\r\n/**\r\n * Join group\r\n *\r\n * user, group, when & done properties must be provided\r\n * @param {Object} options Options for joining group\r\n * @param {Number} options.user\r\n * @param {Number} options.added_by\r\n * @param {Number} options.group\r\n * @param {String} options.when\r\n * @param {Function} options.done\r\n */\r\n export const joinGroup = async options => {\r\n     let defaults = {\r\n          user:null,\r\n          added_by: null,\r\n          group:null,\r\n          when:'',\r\n          done: () => null\r\n         };\r\n     let obj = {\r\n         ...defaults,\r\n         ...options\r\n         };\r\n     let {user,added_by,group,when,done} = obj;\r\n     let {data: {success,message}} = await post('/api/join-group',{user,added_by,group,when});\r\n\r\n     if(success){\r\n         if(when === 'add_grp_member'){\r\n             insta_notify({\r\n                 to: user,\r\n                 type: 'add_grp_member',\r\n                 group_id: group\r\n             })\r\n         }\r\n\r\n         done();\r\n     }\r\n    notify({ value: message})   \r\n }\r\n\r\n/**\r\n * Leave group\r\n *\r\n * user, group & done properties must be provided\r\n * @param {Object} options Options for leaving group\r\n * @param {Number} options.user\r\n * @param {Number} options.group\r\n * @param {Boolean} options.updateGroups\r\n * @param {Function} options.dispatch\r\n * @param {Function} options.done\r\n */\r\n export const leaveGroup = async options => {\r\n     let defaults = {\r\n         user: null,\r\n         group: null,\r\n         updateGroups: false,\r\n         dispatch: () => null,\r\n         done: () => null\r\n        };\r\n      let obj = {\r\n            ...defaults,\r\n            ...options\r\n            };\r\n      let {user,group,updateGroups,dispatch,done} = obj;\r\n      let {data: {success,message}} = await post('/api/leave-group',{user,group});\r\n   \r\n     if(success){\r\n         if(updateGroups){\r\n            dispatch(leftGroup(group));\r\n         } \r\n         done();\r\n     } \r\n\r\n     notify({ value: message })\r\n }\r\n\r\n /**\r\n * Change admin of the group\r\n * @param {Object} options\r\n * @param {Number} options.member\r\n * @param {Number} options.group\r\n */\r\n export const changeAdmin = async options => {\r\n     let {member,group} = options;\r\n     let {data: {success,message}} = await post('/api/change-admin',{user:member,group});\r\n\r\n     if(success){\r\n         insta_notify({\r\n             to: member,\r\n             type: 'change_admin',\r\n             group_id: group\r\n         })\r\n     }\r\n\r\n     notify({\r\n         value: message,\r\n         done: () => (success ? window.location.reload() : null)\r\n     })\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}