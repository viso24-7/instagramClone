{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\settings\\\\sections\\\\change-password\\\\change-password.js\";\nimport React, { Component } from 'react';\nimport { FadeIn } from 'animate-components';\nimport { changePassword } from '../../../../utils/setting-utils';\nimport { filedsToArray } from '../../../../utils/edit-profile-utils';\nimport PasswordSection from './password-section';\nimport Title from '../../../others/title';\nimport PrimaryButton from '../../../others/button/primary-button';\nexport default class ChangePassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      oldPass: '',\n      newPass: '',\n      newPassAgain: ''\n    };\n\n    this.changeValue = (what, e) => this.setState({\n      [what]: e.target.value\n    });\n\n    this.change = e => {\n      e.preventDefault();\n      let {\n        oldPass,\n        newPass,\n        newPassAgain\n      } = this.state;\n      changePassword(oldPass, newPass, newPassAgain);\n    };\n\n    this.decideLabel = key => {\n      let label = key === 'oldPass' ? 'Current Password' : key === 'newPass' ? 'New password' : 'Confirm new password';\n      return label;\n    };\n\n    this.map = ({\n      key,\n      value\n    }) => {\n      let focus = key === 'oldPass' ? true : false;\n      let label = this.decideLabel(key);\n      return /*#__PURE__*/React.createElement(PasswordSection, {\n        label: label,\n        value: value,\n        change: e => this.changeValue(key, e),\n        autofocus: focus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }\n      });\n    };\n  }\n\n  render() {\n    // For disabled key warning.Key helps React update virtual DOM, but when we provide key to component of map function, text input inside that component looses focus.\n    console.error = () => {};\n\n    let array = filedsToArray(this.state);\n    let mappedFields = array.map(this.map);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      value: \"Change password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"change_pass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c_p_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }\n    }, \"Change password\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c_p_main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }\n    }, mappedFields, /*#__PURE__*/React.createElement(PrimaryButton, {\n      label: \"Change password\",\n      onClick: this.change,\n      extraClass: \"c_p_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/settings/sections/change-password/change-password.js"],"names":["React","Component","FadeIn","changePassword","filedsToArray","PasswordSection","Title","PrimaryButton","ChangePassword","state","oldPass","newPass","newPassAgain","changeValue","what","e","setState","target","value","change","preventDefault","decideLabel","key","label","map","focus","render","console","error","array","mappedFields"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {FadeIn} from 'animate-components';\r\n import {changePassword} from '../../../../utils/setting-utils';\r\n import {filedsToArray} from '../../../../utils/edit-profile-utils';\r\n import PasswordSection from './password-section'; \r\n import Title from '../../../others/title';\r\n import PrimaryButton from '../../../others/button/primary-button';\r\n\r\n export default class ChangePassword extends Component {\r\n     state = {\r\n         oldPass: '',\r\n         newPass: '',\r\n         newPassAgain: ''\r\n     }\r\n\r\n     changeValue = (what,e) => this.setState({ [what]: e.target.value })\r\n     change = e => {\r\n         e.preventDefault()\r\n         let {oldPass,newPass,newPassAgain} = this.state;\r\n         changePassword(oldPass,newPass,newPassAgain)\r\n     }\r\n     \r\n     decideLabel = key => {\r\n        let label = key === 'oldPass' ? 'Current Password' : key === 'newPass' ? 'New password' : 'Confirm new password'\r\n        return label;\r\n     }\r\n\r\n     map = ({key,value}) => {\r\n         let focus = key === 'oldPass' ? true : false;\r\n         let label = this.decideLabel(key)\r\n\r\n         return (<PasswordSection label={label} value={value} change={(e) => this.changeValue(key,e)} autofocus={focus} />)\r\n     }\r\n\r\n     render(){     \r\n      // For disabled key warning.Key helps React update virtual DOM, but when we provide key to component of map function, text input inside that component looses focus.\r\n         console.error = () => {}\r\n         let array = filedsToArray(this.state)\r\n         let mappedFields = array.map(this.map);\r\n\r\n         return (\r\n             <div>\r\n                 <Title value=\"Change password\" />\r\n\r\n                 <FadeIn duration=\"300ms\">\r\n                     <div className=\"change_pass\">\r\n                         <div className=\"c_p_header\">\r\n                             <span>Change password</span>\r\n                         </div>\r\n\r\n                         <div className=\"c_p_main\">\r\n                             {mappedFields}\r\n                             <PrimaryButton label=\"Change password\" onClick={this.change} extraClass=\"c_p_btn\" />\r\n                         </div>\r\n                     </div>\r\n                 </FadeIn>\r\n             </div>\r\n         )\r\n     }\r\n }"]},"metadata":{},"sourceType":"module"}