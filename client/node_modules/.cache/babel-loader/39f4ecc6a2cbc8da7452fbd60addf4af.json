{"ast":null,"code":"import{post}from'axios';import{dispatchHelper}from'../utils/utils';import{GET_CONVERSATION,GET_CONVERSATION_MESSAGES,GET_UNREAD_MESSAGES,GET_ONLINE_USERS,GET_CON_DETAILS,GET_CONVERSATION_ABOUT,CONVERSATION_ADDED,MESSAGED,CHANGE_LAST_MSSG,DELETE_MESSAGE,UNSEND_ALL_MESSAGES,DELETE_CONVERSATION,READ_CONVERSATION,UPDATE_UNREAD_CONVERSATIONS,UPDATE_UNREAD_CONMVERSATIONS}from'./types';export var getConversation=function getConversation(){return dispatchHelper(GET_CONVERSATION,'get-conversation');};export var getConversationMessages=function getConversationMessages(con_id,when){return dispatchHelper(GET_CONVERSATION_MESSAGES,'get-conversation-messages',{con_id:con_id,when:when});};export var getUnreadMessages=function getUnreadMessages(){return dispatchHelper(GET_UNREAD_MESSAGES,'get-unread-messages');};export var getOnlineUsers=function getOnlineUsers(){return dispatchHelper(GET_ONLINE_USERS,'get-online-users');};export var getConDetails=function getConDetails(con_id){return dispatchHelper(GET_CON_DETAILS,'get-con-details',{con_id:con_id});};export var getConAbout=function getConAbout(con_id,user){return dispatchHelper(GET_CONVERSATION_ABOUT,'get-con-about',{con_id:con_id,user:user});};export var conversationAdded=function conversationAdded(conversation){return{type:CONVERSATION_ADDED,payload:conversation};};export var messaged=function messaged(message){return{type:MESSAGED,payload:message};};export var changeLastMssg=function changeLastMssg(lastMssg){return{type:CHANGE_LAST_MSSG,payload:lastMssg};};export var deleteMssg=function deleteMssg(message_id){return{type:DELETE_MESSAGE,payload:message_id};};export var unsendAllMessages=function unsendAllMessages(mssg_by){return{type:UNSEND_ALL_MESSAGES,payload:mssg_by};};export var deleteCon=function deleteCon(con_id){return{type:DELETE_CONVERSATION,payload:con_id};};export var readConversation=function readConversation(con_id,unreadMssgs){return function(dispatch){post('/api/read-conversation',{con_id:con_id}).then(function(){dispatch({type:READ_CONVERSATION,payload:con_id});if(unreadMssgs!==0){dispatch({type:UPDATE_UNREAD_CONVERSATIONS,payload:unreadMssgs});}}).catch(function(e){return console.log(e);});};};export var updateUnreadConmversations=function updateUnreadConmversations(con){return{type:UPDATE_UNREAD_CONMVERSATIONS,payload:con};};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/actions/message.js"],"names":["post","dispatchHelper","GET_CONVERSATION","GET_CONVERSATION_MESSAGES","GET_UNREAD_MESSAGES","GET_ONLINE_USERS","GET_CON_DETAILS","GET_CONVERSATION_ABOUT","CONVERSATION_ADDED","MESSAGED","CHANGE_LAST_MSSG","DELETE_MESSAGE","UNSEND_ALL_MESSAGES","DELETE_CONVERSATION","READ_CONVERSATION","UPDATE_UNREAD_CONVERSATIONS","UPDATE_UNREAD_CONMVERSATIONS","getConversation","getConversationMessages","con_id","when","getUnreadMessages","getOnlineUsers","getConDetails","getConAbout","user","conversationAdded","conversation","type","payload","messaged","message","changeLastMssg","lastMssg","deleteMssg","message_id","unsendAllMessages","mssg_by","deleteCon","readConversation","unreadMssgs","dispatch","then","catch","e","console","log","updateUnreadConmversations","con"],"mappings":"AAAC,OAAQA,IAAR,KAAmB,OAAnB,CACA,OAAQC,cAAR,KAA6B,gBAA7B,CACA,OAAQC,gBAAR,CAAyBC,yBAAzB,CAAmDC,mBAAnD,CAAuEC,gBAAvE,CAAwFC,eAAxF,CACQC,sBADR,CAC+BC,kBAD/B,CACkDC,QADlD,CAC2DC,gBAD3D,CAC4EC,cAD5E,CAC2FC,mBAD3F,CAEQC,mBAFR,CAE4BC,iBAF5B,CAE8CC,2BAF9C,CAE0EC,4BAF1E,KAE6G,SAF7G,CAKA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMhB,CAAAA,cAAc,CAACC,gBAAD,CAAkB,kBAAlB,CAApB,EAAxB,CACP,MAAO,IAAMgB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,MAAD,CAAQC,IAAR,QAAiBnB,CAAAA,cAAc,CAACE,yBAAD,CAA2B,2BAA3B,CAAuD,CAACgB,MAAM,CAANA,MAAD,CAAQC,IAAI,CAAJA,IAAR,CAAvD,CAA/B,EAAhC,CACP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAMpB,CAAAA,cAAc,CAACG,mBAAD,CAAqB,qBAArB,CAApB,EAA1B,CACP,MAAO,IAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMrB,CAAAA,cAAc,CAACI,gBAAD,CAAkB,kBAAlB,CAApB,EAAvB,CACP,MAAO,IAAMkB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAJ,MAAM,QAAIlB,CAAAA,cAAc,CAACK,eAAD,CAAiB,iBAAjB,CAAmC,CAACa,MAAM,CAANA,MAAD,CAAnC,CAAlB,EAA5B,CACP,MAAO,IAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACL,MAAD,CAAQM,IAAR,QAAiBxB,CAAAA,cAAc,CAACM,sBAAD,CAAwB,eAAxB,CAAwC,CAACY,MAAM,CAANA,MAAD,CAAQM,IAAI,CAAJA,IAAR,CAAxC,CAA/B,EAApB,CAEP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,YAAY,CAAI,CAC7C,MAAO,CACHC,IAAI,CAAEpB,kBADH,CAEHqB,OAAO,CAAEF,YAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,OAAO,CAAI,CAC/B,MAAO,CACHH,IAAI,CAAEnB,QADH,CAEHoB,OAAO,CAAEE,OAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,QAAQ,CAAI,CACtC,MAAO,CACHL,IAAI,CAAElB,gBADH,CAEHmB,OAAO,CAAEI,QAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,UAAU,CAAI,CACpC,MAAO,CACHP,IAAI,CAAEjB,cADH,CAEHkB,OAAO,CAAEM,UAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,OAAO,CAAI,CACxC,MAAO,CACHT,IAAI,CAAEhB,mBADH,CAEHiB,OAAO,CAAEQ,OAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAnB,MAAM,CAAI,CAC/B,MAAO,CACHS,IAAI,CAAEf,mBADH,CAEHgB,OAAO,CAAEV,MAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMoB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACpB,MAAD,CAAQqB,WAAR,CAAwB,CACpD,MAAO,UAAAC,QAAQ,CAAI,CACfzC,IAAI,CAAC,wBAAD,CAA0B,CAACmB,MAAM,CAANA,MAAD,CAA1B,CAAJ,CACEuB,IADF,CACO,UAAM,CACRD,QAAQ,CAAC,CACLb,IAAI,CAAEd,iBADD,CAELe,OAAO,CAAEV,MAFJ,CAAD,CAAR,CAKA,GAAGqB,WAAW,GAAK,CAAnB,CAAqB,CACnBC,QAAQ,CAAC,CACLb,IAAI,CAAEb,2BADD,CAELc,OAAO,CAAEW,WAFJ,CAAD,CAAR,CAID,CACJ,CAbF,EAaIG,KAbJ,CAaU,SAAAC,CAAC,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ,EAbX,EAcH,CAfD,CAgBH,CAjBM,CAmBP,MAAO,IAAMG,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAAAC,GAAG,CAAI,CAC7C,MAAO,CACApB,IAAI,CAAEZ,4BADN,CAEAa,OAAO,CAACmB,GAFR,CAAP,CAIH,CALM","sourcesContent":[" import {post} from 'axios';\r\n import {dispatchHelper} from '../utils/utils';\r\n import {GET_CONVERSATION,GET_CONVERSATION_MESSAGES,GET_UNREAD_MESSAGES,GET_ONLINE_USERS,GET_CON_DETAILS,\r\n         GET_CONVERSATION_ABOUT,CONVERSATION_ADDED,MESSAGED,CHANGE_LAST_MSSG,DELETE_MESSAGE,UNSEND_ALL_MESSAGES,\r\n         DELETE_CONVERSATION,READ_CONVERSATION,UPDATE_UNREAD_CONVERSATIONS,UPDATE_UNREAD_CONMVERSATIONS} from './types';\r\n\r\n\r\n export const getConversation = () => dispatchHelper(GET_CONVERSATION,'get-conversation');\r\n export const getConversationMessages = (con_id,when) => dispatchHelper(GET_CONVERSATION_MESSAGES,'get-conversation-messages',{con_id,when});\r\n export const getUnreadMessages = () => dispatchHelper(GET_UNREAD_MESSAGES,'get-unread-messages');\r\n export const getOnlineUsers = () => dispatchHelper(GET_ONLINE_USERS,'get-online-users');\r\n export const getConDetails = con_id => dispatchHelper(GET_CON_DETAILS,'get-con-details',{con_id});\r\n export const getConAbout = (con_id,user) => dispatchHelper(GET_CONVERSATION_ABOUT,'get-con-about',{con_id,user});\r\n \r\n export const conversationAdded = conversation => {\r\n     return {\r\n         type: CONVERSATION_ADDED,\r\n         payload: conversation\r\n     }\r\n }\r\n\r\n export const messaged = message => {\r\n     return {\r\n         type: MESSAGED,\r\n         payload: message\r\n     }\r\n }\r\n\r\n export const changeLastMssg = lastMssg => {\r\n     return {\r\n         type: CHANGE_LAST_MSSG,\r\n         payload: lastMssg\r\n     }\r\n }\r\n\r\n export const deleteMssg = message_id => {\r\n     return {\r\n         type: DELETE_MESSAGE,\r\n         payload: message_id\r\n     }\r\n }\r\n \r\n export const unsendAllMessages = mssg_by => {\r\n     return {\r\n         type: UNSEND_ALL_MESSAGES,\r\n         payload: mssg_by\r\n     }\r\n }\r\n\r\n export const deleteCon = con_id => {\r\n     return {\r\n         type: DELETE_CONVERSATION,\r\n         payload: con_id\r\n     }\r\n }\r\n\r\n export const readConversation = (con_id,unreadMssgs) => {\r\n     return dispatch => {\r\n         post('/api/read-conversation',{con_id})\r\n          .then(() => {\r\n              dispatch({\r\n                  type: READ_CONVERSATION,\r\n                  payload: con_id\r\n              })\r\n\r\n              if(unreadMssgs !== 0){\r\n                dispatch({\r\n                    type: UPDATE_UNREAD_CONVERSATIONS,\r\n                    payload: unreadMssgs\r\n                }) \r\n              }\r\n          }).catch(e => console.log(e))\r\n     }\r\n }\r\n\r\n export const updateUnreadConmversations = con => {\r\n     return {\r\n            type: UPDATE_UNREAD_CONMVERSATIONS,\r\n            payload:con\r\n     }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}