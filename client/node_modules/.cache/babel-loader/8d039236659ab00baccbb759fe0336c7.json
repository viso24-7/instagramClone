{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\others\\\\emojis\\\\emojis-list.js\";\nimport React from 'react';\nimport emojis from './emojis-array';\nimport d from '../../../utils/api/Dom';\nimport { shape, number, string, func, bool } from 'prop-types';\n\nconst EmojisList = props => {\n  let {\n    textArea,\n    updateStateValue,\n    recenterEmojis\n  } = props;\n\n  let selectEmoji = (event, emoji) => {\n    let elem = new d(textArea).toDom(),\n        value = elem.value,\n        start = elem.selectionStart,\n        //selectionStart specifies the index of the selection/highlighted text\n    textBefore = value.substr(0, start),\n        textAfter = value.substr(start, value.length),\n        finalText = textBefore + emoji + textAfter;\n    new d('.emoji_all li').removeClass('emoji_toggle');\n    event.target.classList.add('emoji_toggle');\n    updateStateValue(finalText);\n  };\n\n  let map_emojis = emojis.map(emoji => /*#__PURE__*/React.createElement(\"li\", {\n    key: emoji,\n    onClick: e => selectEmoji(e, emoji),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, emoji));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji_all\",\n    style: {\n      left: recenterEmojis ? -10 : null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, map_emojis));\n};\n\nEmojisList.propTypes = {\n  position: shape({\n    top: number.isRequired,\n    left: number.isRequired\n  }),\n  textArea: string.isRequired,\n  updateStateValue: func.isRequired,\n  recenterEmojis: bool\n};\nexport default EmojisList;","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/emojis/emojis-list.js"],"names":["React","emojis","d","shape","number","string","func","bool","EmojisList","props","textArea","updateStateValue","recenterEmojis","selectEmoji","event","emoji","elem","toDom","value","start","selectionStart","textBefore","substr","textAfter","length","finalText","removeClass","target","classList","add","map_emojis","map","e","left","propTypes","position","top","isRequired"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAAQC,KAAR,EAAcC,MAAd,EAAqBC,MAArB,EAA4BC,IAA5B,EAAiCC,IAAjC,QAA4C,YAA5C;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,MAAI;AAACC,IAAAA,QAAD;AAAUC,IAAAA,gBAAV;AAA2BC,IAAAA;AAA3B,MAA6CH,KAAjD;;AAEA,MAAII,WAAW,GAAG,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAC/B,QAAIC,IAAI,GAAG,IAAId,CAAJ,CAAMQ,QAAN,EAAgBO,KAAhB,EAAX;AAAA,QACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,QAEIC,KAAK,GAAGH,IAAI,CAACI,cAFjB;AAAA,QAEiC;AAC7BC,IAAAA,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAa,CAAb,EAAeH,KAAf,CAHjB;AAAA,QAIII,SAAS,GAAGL,KAAK,CAACI,MAAN,CAAaH,KAAb,EAAmBD,KAAK,CAACM,MAAzB,CAJhB;AAAA,QAKIC,SAAS,GAAGJ,UAAU,GAAGN,KAAb,GAAqBQ,SALrC;AAOI,QAAIrB,CAAJ,CAAM,eAAN,EAAuBwB,WAAvB,CAAmC,cAAnC;AACAZ,IAAAA,KAAK,CAACa,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,cAA3B;AAEAlB,IAAAA,gBAAgB,CAACc,SAAD,CAAhB;AACP,GAZD;;AAcA,MAAIK,UAAU,GAAG7B,MAAM,CAAC8B,GAAP,CAAWhB,KAAK,iBAC7B;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAgB,IAAA,OAAO,EAAEiB,CAAC,IAAInB,WAAW,CAACmB,CAAD,EAAGjB,KAAH,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,KADN,CADa,CAAjB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACkB,MAAAA,IAAI,EAAErB,cAAc,GAAG,CAAC,EAAJ,GAAS;AAA9B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKkB,UAAL,CADH,CADJ;AAKH,CA5BD;;AA8BAtB,UAAU,CAAC0B,SAAX,GAAuB;AACpBC,EAAAA,QAAQ,EAAEhC,KAAK,CAAC;AACZiC,IAAAA,GAAG,EAAEhC,MAAM,CAACiC,UADA;AAEZJ,IAAAA,IAAI,EAAE7B,MAAM,CAACiC;AAFD,GAAD,CADK;AAKrB3B,EAAAA,QAAQ,EAAEL,MAAM,CAACgC,UALI;AAMrB1B,EAAAA,gBAAgB,EAAEL,IAAI,CAAC+B,UANF;AAOrBzB,EAAAA,cAAc,EAAEL;AAPK,CAAvB;AAUA,eAAeC,UAAf","sourcesContent":[" import React from 'react';\r\n import emojis from './emojis-array';\r\n import d from '../../../utils/api/Dom';\r\n import {shape,number,string,func,bool} from 'prop-types';\r\n\r\n const EmojisList = props => {\r\n     let {textArea,updateStateValue,recenterEmojis} = props;\r\n\r\n     let selectEmoji = (event,emoji) => {\r\n         let elem = new d(textArea).toDom(),\r\n             value = elem.value,\r\n             start = elem.selectionStart, //selectionStart specifies the index of the selection/highlighted text\r\n             textBefore = value.substr(0,start),\r\n             textAfter = value.substr(start,value.length),\r\n             finalText = textBefore + emoji + textAfter\r\n\r\n             new d('.emoji_all li').removeClass('emoji_toggle')\r\n             event.target.classList.add('emoji_toggle');\r\n\r\n             updateStateValue(finalText);\r\n     }\r\n\r\n     let map_emojis = emojis.map(emoji => (\r\n         <li key={emoji} onClick={e => selectEmoji(e,emoji)}>\r\n              {emoji}\r\n         </li>\r\n     ))\r\n\r\n     return (\r\n         <div className=\"emoji_all\" style={{left: recenterEmojis ? -10 : null}}>\r\n            <ul>{map_emojis}</ul>\r\n         </div>\r\n     )\r\n }\r\n\r\n EmojisList.propTypes = {\r\n    position: shape({\r\n        top: number.isRequired,\r\n        left: number.isRequired\r\n        }),\r\n   textArea: string.isRequired,\r\n   updateStateValue: func.isRequired,\r\n   recenterEmojis: bool\r\n}\r\n\r\n export default EmojisList; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}