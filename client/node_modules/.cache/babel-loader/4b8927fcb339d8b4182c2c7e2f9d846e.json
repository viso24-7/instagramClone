{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\post\\\\post-bottom\\\\post-bottom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { humanReadable } from '../../../../utils/utils';\nimport AppLink from '../../../others/link/link';\nimport Comments from '../../comment/comments/comments';\nimport ImageComment from '../../comment/image-comment/imageComment';\nimport StickerComment from '../../comment/sticker-comment/stickerComment';\nimport TextComment from '../../comment/text-comment/text-comment';\nimport { number, string, array, shape } from 'prop-types';\n\nclass PostBottom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments_count: 0\n    };\n\n    this.componentDidMount = () => this.setState({\n      comments_count: this.props.postDetails.comments_count\n    });\n\n    this.incrementComments = () => this.setState({\n      comments_count: ++this.state.comments_count\n    });\n  }\n\n  render() {\n    let {\n      comments_count\n    } = this.state;\n    let {\n      postDetails: {\n        post_id,\n        when,\n        comments\n      },\n      postDetails,\n      id\n    } = this.props;\n    let childProps = {\n      postDetails,\n      incrementComments: this.incrementComments\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(AppLink, {\n      url: `/post/${post_id}`,\n      className: \"p_comments\",\n      label: humanReadable(comments_count, 'comment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_cit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_cit_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/users/${id}/avatar.jpg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_cit_main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(TextComment, Object.assign({}, childProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_cit_tool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(StickerComment, Object.assign({}, childProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(ImageComment, Object.assign({}, childProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }\n    }))))), /*#__PURE__*/React.createElement(Comments, {\n      when: when,\n      comments: comments,\n      decrementComments: () => this.setState({\n        comments_count: --comments_count\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }\n    }));\n  }\n\n}\n\nPostBottom.propTypes = {\n  postDetails: shape({\n    comments_count: number.isRequired,\n    post_id: number.isRequired,\n    when: string.isRequired,\n    user: number.isRequired,\n    comments: array\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  id: state.User.session.id\n});\n\nexport default connect(mapStateToProps)(PostBottom);\nexport { PostBottom as PurePostBottom };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/post/post-bottom/post-bottom.js"],"names":["React","Component","connect","humanReadable","AppLink","Comments","ImageComment","StickerComment","TextComment","number","string","array","shape","PostBottom","state","comments_count","componentDidMount","setState","props","postDetails","incrementComments","render","post_id","when","comments","id","childProps","propTypes","isRequired","user","mapStateToProps","User","session","PurePostBottom"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import {connect} from 'react-redux';\r\n import {humanReadable} from '../../../../utils/utils';\r\n import AppLink from '../../../others/link/link';\r\n import Comments from '../../comment/comments/comments';\r\n import ImageComment from '../../comment/image-comment/imageComment'\r\n import StickerComment from '../../comment/sticker-comment/stickerComment'\r\n import TextComment from '../../comment/text-comment/text-comment' \r\n import {number,string,array,shape} from 'prop-types';\r\n\r\n class PostBottom extends Component {\r\n     state = { comments_count: 0 }\r\n\r\n     componentDidMount = () => this.setState({ \r\n         comments_count: this.props.postDetails.comments_count\r\n     })\r\n\r\n     incrementComments = () => this.setState({ comments_count: ++this.state.comments_count })\r\n\r\n     render(){\r\n           let {comments_count} = this.state;\r\n           let {postDetails:{post_id,when,comments},postDetails,id} = this.props;\r\n           let childProps = {\r\n               postDetails,\r\n               incrementComments: this.incrementComments\r\n           }\r\n\r\n\r\n           return (\r\n               <div>\r\n                   <AppLink url={`/post/${post_id}`} className=\"p_comments\" label={humanReadable(comments_count,'comment')} />\r\n                   <div className=\"p_cit\">\r\n                       <div className=\"p_cit_img\">\r\n                           <img src={`/users/${id}/avatar.jpg`} />\r\n                       </div>\r\n\r\n                       <div className=\"p_cit_main\">\r\n                           <TextComment {...childProps} />\r\n                           \r\n                           <div className=\"p_cit_tool\">\r\n                               <StickerComment {...childProps} />\r\n                               <ImageComment {...childProps} />\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n\r\n                   <Comments\r\n                      when={when}\r\n                      comments={comments}\r\n                      decrementComments={() => this.setState({ comments_count: --comments_count})}\r\n                   />\r\n               </div>\r\n           )\r\n     }\r\n }\r\n\r\n PostBottom.propTypes = {\r\n   postDetails: shape({\r\n       comments_count: number.isRequired,\r\n       post_id: number.isRequired,\r\n       when: string.isRequired,\r\n       user: number.isRequired,\r\n       comments: array\r\n       }).isRequired\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n    id: state.User.session.id\r\n })\r\n\r\n export default connect(mapStateToProps)(PostBottom)\r\n export {PostBottom as PurePostBottom}"]},"metadata":{},"sourceType":"module"}