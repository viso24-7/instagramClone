{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\post-it\\\\middle.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changePostitProperties } from '../../../actions/post';\nimport FileInput from '../../others/input/file';\nimport TextArea from '../../others/input/textArea';\n\nconst PostItMiddle = ({\n  postIt,\n  session,\n  dispatch\n}) => {\n  let {\n    username\n  } = session;\n  let {\n    fileChanged,\n    desc,\n    previewImg,\n    filter,\n    fileInput\n  } = postIt;\n\n  let changeProperties = (...args) => dispatch(changePostitProperties(...args));\n\n  let fileChange = e => {\n    e.preventDefault();\n    changeProperties('fileChanged', true);\n    changeProperties('fileInput', e.target.value);\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    changeProperties('targetFile', file);\n\n    reader.onload = e => changeProperties('previewImg', e.target.result);\n\n    reader.readAsDataURL(file);\n  };\n\n  let valueChange = e => changeProperties('desc', e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"i_p_main p_main\",\n    style: {\n      height: 296\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, fileChanged ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"i_p_ta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: `What's new with you, @${username}?`,\n    value: desc,\n    valueChange: valueChange,\n    className: \"t_p_ta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"i_p_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: previewImg,\n    className: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_img_form\",\n    method: \"post\",\n    encType: \"multipart/formdata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FileInput, {\n    value: fileInput,\n    fileChange: fileChange,\n    label: \"Choose an image\",\n    labelClass: \"pri_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  session: state.User.session,\n  postIt: state.Post.postIt\n});\n\nexport default connect(mapStateToProps)(PostItMiddle);\nexport { PostItMiddle as PurePostItMiddle };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/post-it/middle.js"],"names":["React","connect","changePostitProperties","FileInput","TextArea","PostItMiddle","postIt","session","dispatch","username","fileChanged","desc","previewImg","filter","fileInput","changeProperties","args","fileChange","e","preventDefault","target","value","reader","FileReader","file","files","onload","result","readAsDataURL","valueChange","height","mapStateToProps","state","User","Post","PurePostItMiddle"],"mappings":"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","sourcesContent":[" import React from 'react';\r\n import {connect} from 'react-redux';\r\n import {changePostitProperties} from '../../../actions/post';\r\n import FileInput from '../../others/input/file';\r\n import TextArea from '../../others/input/textArea';\r\n\r\n const PostItMiddle = ({postIt,session,dispatch}) => {\r\n     let {username} = session;\r\n     let {fileChanged,desc,previewImg,filter,fileInput} = postIt;\r\n\r\n     let changeProperties = (...args) => dispatch(changePostitProperties(...args))\r\n\r\n     let fileChange = e => {\r\n         e.preventDefault()\r\n         changeProperties('fileChanged',true);\r\n         changeProperties('fileInput',e.target.value)\r\n\r\n         let reader = new FileReader();\r\n         let file = e.target.files[0]\r\n         changeProperties('targetFile',file)\r\n\r\n         reader.onload = e => changeProperties('previewImg',e.target.result)\r\n         reader.readAsDataURL(file)\r\n     }\r\n\r\n     let valueChange = e => changeProperties('desc',e.target.value)\r\n\r\n     return (\r\n         <div className=\"i_p_main p_main\" style={{ height: 296 }}>\r\n            {fileChanged ? (\r\n                <div>\r\n                    <div className=\"i_p_ta\">\r\n                        <TextArea\r\n                           placeholder={`What's new with you, @${username}?`}\r\n                           value={desc}\r\n                           valueChange={valueChange}\r\n                           className=\"t_p_ta\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"i_p_img\">\r\n                        <img src={previewImg} className={filter} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <form className=\"post_img_form\" method=\"post\" encType=\"multipart/formdata\">\r\n                    <FileInput value={fileInput} fileChange={fileChange} label=\"Choose an image\" labelClass=\"pri_btn\" />\r\n                </form>\r\n            )}\r\n         </div>\r\n     )\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     session: state.User.session,\r\n     postIt: state.Post.postIt\r\n })\r\n\r\n export default connect(mapStateToProps)(PostItMiddle)\r\n export {PostItMiddle as PurePostItMiddle}"]},"metadata":{},"sourceType":"module"}