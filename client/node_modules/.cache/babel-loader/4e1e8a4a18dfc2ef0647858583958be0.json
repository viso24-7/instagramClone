{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\group\\\\change-admin\\\\change-admin.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { removeHr } from '../../../utils/utils';\nimport { getUsersToMakeAdmin } from '../../../actions/group';\nimport IsLoading from '../../others/isLoading';\nimport Overlay from '../../others/overlay';\nimport InviteList from './change-admin-list';\nimport ModalHeader from '../../others/modal/modal-header';\nimport ModalMiddle from '../../others/modal/modal-middle';\nimport ModalBack from '../../others/modal/modal-back';\nimport { func, number } from 'prop-types';\n\nclass SwapAdmin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n\n    this.componentWillReceiveProps = () => this.setState({\n      loading: false\n    });\n\n    this.componentDidMount = () => {\n      let {\n        dispatch,\n        group\n      } = this.group;\n      dispatch(getUsersToMakeAdmin(group));\n    };\n\n    this.componentDidUpdate = () => removeHr();\n  }\n\n  render() {\n    let {\n      loading\n    } = this.state;\n    let {\n      members,\n      group,\n      back\n    } = this.props;\n    let map_users = members.map(m => /*#__PURE__*/React.createElement(InviteList, Object.assign({\n      key: m.grp_member_id\n    }, m, {\n      group: group,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    })));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Overlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"likes modal modal_big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      title: \"Transfer admin position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(Scrollbars, {\n      style: {\n        height: 450\n      },\n      className: \"modal_middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(IsLoading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ModalMiddle, {\n      loading: loading,\n      list: map_users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal_bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(ModalBack, {\n      back: back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }\n    })))));\n  }\n\n}\n\nSwapAdmin.propTypes = {\n  group: number,\n  back: func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  members: state.Group.usersToMakeAdmin\n});\n\nexport default connect(mapStateToProps)(SwapAdmin);\nexport { SwapAdmin as PureChangeAdmin };","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/change-admin/change-admin.js"],"names":["React","Component","Fragment","connect","FadeIn","Scrollbars","removeHr","getUsersToMakeAdmin","IsLoading","Overlay","InviteList","ModalHeader","ModalMiddle","ModalBack","func","number","SwapAdmin","state","loading","componentWillReceiveProps","setState","componentDidMount","dispatch","group","componentDidUpdate","render","members","back","props","map_users","map","m","grp_member_id","height","propTypes","isRequired","mapStateToProps","Group","usersToMakeAdmin","PureChangeAdmin"],"mappings":"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","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import {Scrollbars} from 'react-custom-scrollbars';\r\n import {removeHr} from '../../../utils/utils';\r\n import {getUsersToMakeAdmin} from '../../../actions/group';\r\n import IsLoading from '../../others/isLoading';\r\n import Overlay from '../../others/overlay'\r\n import InviteList from './change-admin-list';\r\n import ModalHeader from '../../others/modal/modal-header';\r\n import ModalMiddle from '../../others/modal/modal-middle';\r\n import ModalBack from '../../others/modal/modal-back';\r\n import {func,number} from 'prop-types';\r\n\r\n class SwapAdmin extends Component{\r\n     state = { loading: true }\r\n\r\n     componentWillReceiveProps = () => this.setState({ loading: false})\r\n\r\n     componentDidMount = () => {\r\n         let {dispatch,group} = this.group;\r\n         dispatch(getUsersToMakeAdmin(group))\r\n     }\r\n\r\n     componentDidUpdate = () => removeHr()\r\n\r\n     render(){\r\n         let {loading} = this.state;\r\n         let {members,group,back} = this.props;\r\n         let map_users = members.map(m => (\r\n             <InviteList key={m.grp_member_id} {...m} group={group} />\r\n         ))\r\n\r\n         return (\r\n             <Fragment>\r\n                 <Overlay />\r\n\r\n                 <div className=\"likes modal modal_big\">\r\n                     <FadeIn duration=\"300ms\">\r\n                         <ModalHeader title=\"Transfer admin position\" />\r\n\r\n                         <Scrollbars style={{height: 450}} className=\"modal_middle\">\r\n                            <IsLoading loading={loading} />\r\n                            <ModalMiddle\r\n                                loading={loading}\r\n                                list={map_users}\r\n                             />\r\n                         </Scrollbars>\r\n\r\n                         <div className=\"modal_bottom\">\r\n                             <ModalBack back={back} />\r\n                         </div>\r\n                     </FadeIn>\r\n                 </div>\r\n             </Fragment>\r\n         )\r\n     }\r\n }\r\n\r\n SwapAdmin.propTypes = {\r\n    group: number,\r\n    back: func.isRequired\r\n  }\r\n const mapStateToProps = state => ({\r\n     members:  state.Group.usersToMakeAdmin\r\n })\r\n\r\n export default connect(mapStateToProps)(SwapAdmin);\r\n export {SwapAdmin as PureChangeAdmin}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}