{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\messages\\\\conversation\\\\message\\\\tools\\\\edit-message-tool.js\";\nimport React, { Component, Fragment } from 'react';\nimport { isAdmin } from '../../../../../utils/admin-utils';\nimport EditMessage from '../edit';\nimport MaterialIcon from '../../../../others/icons/material-icon';\nimport { number, string, func, shape } from 'prop-types';\nexport default class EditMessageTool extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editMessage: false\n    };\n\n    this.toggleEdit = () => this.setState({\n      editMessage: !this.state.editMessage\n    });\n  }\n\n  render() {\n    let {\n      editMessage\n    } = this.state;\n    let {\n      messageDetails: {\n        message_id,\n        type,\n        message\n      },\n      updateMessage\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }\n    }, type == 'text' && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"toggle_edit_mssg\",\n      onClick: this.toggleEdit,\n      \"data-tip\": `Edit ${isAdmin() ? 'as admin' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"mode_edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }\n    })), editMessage && /*#__PURE__*/React.createElement(EditMessage, {\n      back: this.toggleEdit,\n      message: message,\n      message_id: message_id,\n      changeMessage: message => updateMessage(message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\nEditMessageTool.propTypes = {\n  messageDetails: shape({\n    message_id: number.isRequired,\n    type: string.isRequired,\n    message: string.isRequired\n  }).isRequired,\n  updateMessage: func.isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/messages/conversation/message/tools/edit-message-tool.js"],"names":["React","Component","Fragment","isAdmin","EditMessage","MaterialIcon","number","string","func","shape","EditMessageTool","state","editMessage","toggleEdit","setState","render","messageDetails","message_id","type","message","updateMessage","props","propTypes","isRequired"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,kCAAtB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,IAAtB,EAA2BC,KAA3B,QAAuC,YAAvC;AAEA,eAAe,MAAMC,eAAN,SAA8BT,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACnDU,KADmD,GAC3C;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAD2C;;AAAA,SAGnDC,UAHmD,GAGtC,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,KAAd,CAHgC;AAAA;;AAKnDG,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACH,MAAAA;AAAD,QAAgB,KAAKD,KAAzB;AACA,QAAI;AAACK,MAAAA,cAAc,EAAE;AAACC,QAAAA,UAAD;AAAYC,QAAAA,IAAZ;AAAiBC,QAAAA;AAAjB,OAAjB;AAA2CC,MAAAA;AAA3C,QAA4D,KAAKC,KAArE;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,IAAI,MAAR,iBACG;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,OAAO,EAAE,KAAKL,UAAjD;AAA6D,kBAAW,QAAOV,OAAO,KAAK,UAAL,GAAkB,EAAG,EAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,EAOKS,WAAW,iBACR,oBAAC,WAAD;AACG,MAAA,IAAI,EAAE,KAAKC,UADd;AAEG,MAAA,OAAO,EAAEM,OAFZ;AAGG,MAAA,UAAU,EAAEF,UAHf;AAIG,MAAA,aAAa,EAAEE,OAAO,IAAIC,aAAa,CAACD,OAAD,CAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CADJ;AAkBH;;AA3BkD;AA8BvDT,eAAe,CAACY,SAAhB,GAA4B;AACzBN,EAAAA,cAAc,EAAEP,KAAK,CAAC;AACjBQ,IAAAA,UAAU,EAAEX,MAAM,CAACiB,UADF;AAEjBL,IAAAA,IAAI,EAAEX,MAAM,CAACgB,UAFI;AAGjBJ,IAAAA,OAAO,EAAEZ,MAAM,CAACgB;AAHC,GAAD,CAAL,CAITA,UALkB;AAMzBH,EAAAA,aAAa,EAAEZ,IAAI,CAACe;AANK,CAA5B","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {isAdmin} from '../../../../../utils/admin-utils';\r\n import EditMessage from '../edit';\r\n import MaterialIcon from '../../../../others/icons/material-icon';\r\n import {number,string,func,shape} from 'prop-types';\r\n \r\n export default class EditMessageTool extends Component {\r\n     state = { editMessage: false }\r\n\r\n     toggleEdit = () => this.setState({ editMessage: !this.state.editMessage})\r\n\r\n     render(){\r\n         let {editMessage} = this.state;\r\n         let {messageDetails: {message_id,type,message},updateMessage} = this.props;\r\n\r\n         return (\r\n             <Fragment>\r\n                 {type == 'text' && (\r\n                     <span className=\"toggle_edit_mssg\" onClick={this.toggleEdit} data-tip={`Edit ${isAdmin() ? 'as admin' : ''}`}>\r\n                         <MaterialIcon icon=\"mode_edit\" />\r\n                     </span>\r\n                 )}\r\n\r\n                 {editMessage && (\r\n                     <EditMessage\r\n                        back={this.toggleEdit}\r\n                        message={message}\r\n                        message_id={message_id}\r\n                        changeMessage={message => updateMessage(message)}\r\n                     />\r\n                 )}\r\n             </Fragment>\r\n         )\r\n     }\r\n }\r\n\r\n EditMessageTool.propTypes = {\r\n    messageDetails: shape({\r\n         message_id: number.isRequired,\r\n         type: string.isRequired,\r\n         message: string.isRequired\r\n        }).isRequired,\r\n    updateMessage: func.isRequired   \r\n }"]},"metadata":{},"sourceType":"module"}