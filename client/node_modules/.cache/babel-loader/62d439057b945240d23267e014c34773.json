{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\post-it\\\\post-it.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { FadeIn } from 'animate-components';\nimport ToolTip from 'react-tooltip';\nimport { changePostitProperties } from '../../../actions/post';\nimport PostItActions from './actions';\nimport PostItHeader from './header';\nimport GetLocation from './getLeocation';\nimport ToggleAndTags from './toggleAddTags';\nimport AddTags from './add-tags';\nimport Middle from './middle';\nimport Filters from './filters/filters';\nimport Overlay from '../../others/overlay';\nimport AddEmojis from '../../others/emojis/add-emojis';\nimport { number, func, oneOf } from 'prop-types';\n\nclass PostIt extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let {\n        type,\n        group,\n        dispatch\n      } = this.props;\n      dispatch(changePostitProperties('type', type));\n      dispatch(changePostitProperties('group', group));\n    };\n  }\n\n  render() {\n    let {\n      postIt: {\n        fileChanged,\n        showOverlay\n      },\n      dispatch,\n      back\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Overlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      style: {\n        left: fileChanged ? '41%' : '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(FadeIn, {\n      duration: \"300ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    }, fileChanged && /*#__PURE__*/React.createElement(Filters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(PostItHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(Middle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(AddTags, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"t_p_bottom p_bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"t_p_tag p_tag\",\n      style: {\n        visibility: !fileChanged && 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(AddEmojis, {\n      position: {\n        top: 104,\n        left: -215\n      },\n      textArea: \".t_p_ta\",\n      updateTextArea: value => dispatch(changePostitProperties('desc', value)),\n      addClassOnClicked: true,\n      className: \"p_span_toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(ToggleAndTags, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(GetLocation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(PostItActions, {\n      back: back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }\n    })))), showOverlay && /*#__PURE__*/React.createElement(Overlay, {\n      type: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(ToolTip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nPostIt.propTypes = {\n  back: func.isRequired,\n  type: oneOf(['user', 'group']).isRequired,\n  group: number\n};\n\nconst mapStateToProps = state => ({\n  postIt: state.Post.postIt\n});\n\nexport default connect(mapStateToProps)(PostIt);","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/post-it/post-it.js"],"names":["React","Component","Fragment","connect","FadeIn","ToolTip","changePostitProperties","PostItActions","PostItHeader","GetLocation","ToggleAndTags","AddTags","Middle","Filters","Overlay","AddEmojis","number","func","oneOf","PostIt","componentDidMount","type","group","dispatch","props","render","postIt","fileChanged","showOverlay","back","left","visibility","top","value","propTypes","isRequired","mapStateToProps","state","Post"],"mappings":"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","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import ToolTip from 'react-tooltip';\r\n import {changePostitProperties} from '../../../actions/post';\r\n import PostItActions from './actions';\r\n import PostItHeader from './header';\r\n import GetLocation from './getLeocation'\r\n import ToggleAndTags from './toggleAddTags';\r\n import AddTags from './add-tags';\r\n import Middle from './middle';\r\n import Filters from './filters/filters';\r\n import Overlay from '../../others/overlay';\r\n import AddEmojis from '../../others/emojis/add-emojis';\r\n import {number,func,oneOf} from 'prop-types';\r\n\r\n class PostIt extends Component {\r\n    componentDidMount = () => {\r\n        let {type,group,dispatch} = this.props;\r\n        dispatch(changePostitProperties('type',type))\r\n        dispatch(changePostitProperties('group',group))\r\n     }\r\n\r\n     render(){\r\n         let {postIt:{fileChanged,showOverlay},dispatch,back} = this.props;\r\n\r\n         return (\r\n             <div>\r\n                 <Overlay />\r\n\r\n                 <div className=\"post\" style={{ left: fileChanged ? '41%' : '50%'}}>\r\n                     <FadeIn duration=\"300ms\">\r\n                         {fileChanged && <Filters />}\r\n\r\n                         <PostItHeader />\r\n                         <Middle />\r\n                         <AddTags />\r\n\r\n                         <div className=\"t_p_bottom p_bottom\">\r\n                             <div className=\"t_p_tag p_tag\" style={{ visibility: !fileChanged && 'hidden'}}>\r\n                                 <AddEmojis\r\n                                   position={{top:104,left:-215}}\r\n                                   textArea=\".t_p_ta\"\r\n                                   updateTextArea={value => dispatch(changePostitProperties('desc',value))}\r\n                                   addClassOnClicked\r\n                                   className=\"p_span_toggle\"\r\n                                 />\r\n\r\n                                 <ToggleAndTags />\r\n                                 <GetLocation />\r\n                             </div>\r\n\r\n                             <PostItActions back={back} />\r\n                         </div>\r\n                     </FadeIn>\r\n                 </div>\r\n\r\n                 {showOverlay && <Overlay type=\"white\" />}\r\n\r\n                 <ToolTip />\r\n             </div>\r\n         )\r\n     }\r\n }\r\n\r\n PostIt.propTypes = {\r\n     back: func.isRequired,\r\n     type: oneOf(['user','group']).isRequired,\r\n     group: number\r\n }\r\n\r\n const mapStateToProps = state => ({\r\n     postIt: state.Post.postIt\r\n })\r\n\r\n export default connect(mapStateToProps)(PostIt)"]},"metadata":{},"sourceType":"module"}