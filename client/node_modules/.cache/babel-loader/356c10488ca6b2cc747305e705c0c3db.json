{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\comments\\\\options\\\\edit-comment-option.js\";\nimport React, { Component, Fragment } from 'react';\nimport { isAdmin } from '../../../../../utils/admin-utils';\nimport EditComment from '../../edit-comment/edit-comment';\nimport { number, string, func, shape } from 'prop-types';\nexport default class EditCommentOption extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editComment: false\n    };\n\n    this.showEditModal = e => {\n      e.preventDefault();\n      this.setState({\n        editComment: !this.state.editComment\n      });\n    };\n\n    this.modalBack = () => {\n      this.setState({\n        editComment: false\n      });\n      this.props.toggleOptions();\n    };\n  }\n\n  render() {\n    let {\n      editComment\n    } = this.state;\n    let {\n      updateCommentText,\n      commentDetails: {\n        comment_id,\n        type,\n        text\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }, type == 'text' && /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.showEditModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }\n    }, `Edit comment ${isAdmin() ? 'as admin' : ''}`)), editComment && /*#__PURE__*/React.createElement(EditComment, {\n      comment: text,\n      back: this.modalBack,\n      updateComment: value => updateCommentText(value),\n      comment_id: comment_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\nEditCommentOption.propTypes = {\n  commentDetails: shape({\n    comment_id: number.isRequired,\n    type: string.isRequired,\n    text: string.isRequired\n  }).isRequired,\n  updateCommentText: func.isRequired,\n  toggleOptions: func.isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/comment/comments/options/edit-comment-option.js"],"names":["React","Component","Fragment","isAdmin","EditComment","number","string","func","shape","EditCommentOption","state","editComment","showEditModal","e","preventDefault","setState","modalBack","props","toggleOptions","render","updateCommentText","commentDetails","comment_id","type","text","value","propTypes","isRequired"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,kCAAtB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,IAAtB,EAA2BC,KAA3B,QAAuC,YAAvC;AAEA,eAAe,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACrDS,KADqD,GAC7C;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAD6C;;AAAA,SAGrDC,aAHqD,GAGrCC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACH,KANoD;;AAAA,SAQrDK,SARqD,GAQzC,MAAM;AACd,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKM,KAAL,CAAWC,aAAX;AACH,KAXoD;AAAA;;AAarDC,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACR,MAAAA;AAAD,QAAgB,KAAKD,KAAzB;AACA,QAAI;AAACU,MAAAA,iBAAD;AAAmBC,MAAAA,cAAc,EAAE;AAACC,QAAAA,UAAD;AAAYC,QAAAA,IAAZ;AAAiBC,QAAAA;AAAjB;AAAnC,QAA6D,KAAKP,KAAtE;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,IAAI,IAAI,MAAR,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,OAAO,EAAE,KAAKX,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,gBAAeT,OAAO,KAAK,UAAL,GAAkB,EAAG,EAAtF,CADJ,CAFR,EAOKQ,WAAW,iBACR,oBAAC,WAAD;AACE,MAAA,OAAO,EAAEa,IADX;AAEE,MAAA,IAAI,EAAE,KAAKR,SAFb;AAGE,MAAA,aAAa,EAAES,KAAK,IAAIL,iBAAiB,CAACK,KAAD,CAH3C;AAIE,MAAA,UAAU,EAAEH,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CADJ;AAkBH;;AAnCoD;AAsCzDb,iBAAiB,CAACiB,SAAlB,GAA8B;AAC1BL,EAAAA,cAAc,EAAEb,KAAK,CAAC;AAClBc,IAAAA,UAAU,EAAEjB,MAAM,CAACsB,UADD;AAElBJ,IAAAA,IAAI,EAAEjB,MAAM,CAACqB,UAFK;AAGlBH,IAAAA,IAAI,EAAElB,MAAM,CAACqB;AAHK,GAAD,CAAL,CAITA,UALmB;AAM1BP,EAAAA,iBAAiB,EAAEb,IAAI,CAACoB,UANE;AAO1BT,EAAAA,aAAa,EAAEX,IAAI,CAACoB;AAPM,CAA9B","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {isAdmin} from '../../../../../utils/admin-utils';\r\n import EditComment from '../../edit-comment/edit-comment';\r\n import {number,string,func,shape} from 'prop-types';\r\n\r\n export default class EditCommentOption extends Component {\r\n     state = { editComment: false }\r\n\r\n     showEditModal = e => {\r\n         e.preventDefault();\r\n         this.setState({ editComment: !this.state.editComment})\r\n     }\r\n\r\n     modalBack = () => {\r\n         this.setState({ editComment: false })\r\n         this.props.toggleOptions()\r\n     }\r\n\r\n     render(){\r\n         let {editComment} = this.state;\r\n         let {updateCommentText,commentDetails: {comment_id,type,text}} = this.props;\r\n\r\n         return (\r\n             <Fragment>\r\n                 {type == 'text' && (\r\n                     <li>\r\n                         <a href=\"#\" onClick={this.showEditModal}>{`Edit comment ${isAdmin() ? 'as admin' : ''}`}</a>\r\n                     </li>\r\n                 )}\r\n\r\n                 {editComment && (\r\n                     <EditComment\r\n                       comment={text}\r\n                       back={this.modalBack}\r\n                       updateComment={value => updateCommentText(value)}\r\n                       comment_id={comment_id}\r\n                     />\r\n                 )}\r\n             </Fragment>\r\n         )\r\n     }\r\n }\r\n\r\n EditCommentOption.propTypes = {\r\n     commentDetails: shape({\r\n         comment_id: number.isRequired,\r\n         type: string.isRequired,\r\n         text: string.isRequired\r\n         }).isRequired,\r\n     updateCommentText: func.isRequired,\r\n     toggleOptions: func.isRequired    \r\n }"]},"metadata":{},"sourceType":"module"}