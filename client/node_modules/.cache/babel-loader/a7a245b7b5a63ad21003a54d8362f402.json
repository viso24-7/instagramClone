{"ast":null,"code":"import { GET_GROUP_DETAILS, JOINED_GROUP, GET_GROUP_MEMBERS, GET_USER_GROUPS, GET_USERS_TO_INVITE, GET_MUTUALS_AND_NEWEST_MEMBERS, GET_USERS_TO_MAKE_ADMIN, TOGGLE_JOIN_GROUP, UPDATE_GROUP, REMOVE_MEMBER, LEFT_GROUP } from '../actions/types';\nconst initialState = {\n  group_details: {\n    group_id: null,\n    name: '',\n    bio: '',\n    admin: null,\n    admin_username: '',\n    created: '',\n    group_type: '',\n    postsCount: 0\n  },\n  joined: false,\n  members: [],\n  mutualMembers: [],\n  newestMembers: [],\n  userGroups: [],\n  usersToInvite: [],\n  usersToMakeAdmin: []\n};\n\nconst update = (group, {\n  name,\n  bio,\n  group_type\n}) => {\n  let updated = { ...group,\n    name,\n    bio,\n    group_type\n  };\n  return updated;\n};\n\nconst remMember = (members, member_id) => members.filter(m => m.grp_member_id !== member_id);\n\nconst leftGroup = (groups, group_id) => groups.filter(g => g.group_id !== group_id);\n\nexport default ((state = initialState, action) => {\n  let pl = action.payload;\n\n  switch (action.type) {\n    case GET_GROUP_DETAILS:\n      return { ...state,\n        group_details: pl\n      };\n\n    case JOINED_GROUP:\n      return { ...state,\n        joined: pl\n      };\n\n    case TOGGLE_JOIN_GROUP:\n      return { ...state,\n        joined: pl\n      };\n\n    case UPDATE_GROUP:\n      return { ...state,\n        group_details: update(state.group_details, pl)\n      };\n\n    case GET_GROUP_MEMBERS:\n      return { ...state,\n        members: pl\n      };\n\n    case 'REMOVE_MEMBER':\n      return { ...state,\n        members: remMember(state.members, pl)\n      };\n\n    case 'GET_MUTUAL_AND_NEWEST_MEMBERS':\n      return { ...state,\n        mutualMembers: pl.mutualMembers,\n        newestMembers: pl.newestMembers\n      };\n\n    case 'GET_USER_GROUPS':\n      return { ...state,\n        userGroups: pl\n      };\n\n    case 'LEFT_GROUP':\n      return { ...state,\n        userGroups: leftGroup(state.userGroups, pl)\n      };\n\n    case 'GET_USERS_TO_INVITE':\n      return { ...state,\n        usersToInvite: pl\n      };\n\n    case 'GET_USERS_TO_MAKE_ADMIN':\n      return { ...state,\n        usersToMakeAdmin: pl\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/reducers/Group.js"],"names":["GET_GROUP_DETAILS","JOINED_GROUP","GET_GROUP_MEMBERS","GET_USER_GROUPS","GET_USERS_TO_INVITE","GET_MUTUALS_AND_NEWEST_MEMBERS","GET_USERS_TO_MAKE_ADMIN","TOGGLE_JOIN_GROUP","UPDATE_GROUP","REMOVE_MEMBER","LEFT_GROUP","initialState","group_details","group_id","name","bio","admin","admin_username","created","group_type","postsCount","joined","members","mutualMembers","newestMembers","userGroups","usersToInvite","usersToMakeAdmin","update","group","updated","remMember","member_id","filter","m","grp_member_id","leftGroup","groups","g","state","action","pl","payload","type"],"mappings":"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","sourcesContent":["import {GET_GROUP_DETAILS,JOINED_GROUP,GET_GROUP_MEMBERS,GET_USER_GROUPS,GET_USERS_TO_INVITE,\r\n    GET_MUTUALS_AND_NEWEST_MEMBERS,GET_USERS_TO_MAKE_ADMIN,TOGGLE_JOIN_GROUP,UPDATE_GROUP,\r\n    REMOVE_MEMBER,LEFT_GROUP} from '../actions/types';\r\n\r\nconst initialState = {\r\n     group_details: {\r\n         group_id: null,\r\n         name: '',\r\n         bio: '',\r\n         admin: null,\r\n         admin_username: '',\r\n         created: '',\r\n         group_type: '',\r\n         postsCount: 0\r\n       },\r\n     joined: false,\r\n     members: [],\r\n     mutualMembers: [],\r\n     newestMembers: [],\r\n     userGroups: [],\r\n     usersToInvite: [],\r\n     usersToMakeAdmin: []\r\n };\r\n\r\n const update = (group,{name,bio,group_type}) => {\r\n     let updated = {\r\n         ...group,\r\n         name,\r\n         bio,\r\n         group_type\r\n       };\r\n\r\n       return updated;\r\n }\r\n\r\n const remMember = (members,member_id) => members.filter(m => m.grp_member_id !== member_id);\r\n const leftGroup = (groups,group_id) => groups.filter(g => g.group_id !== group_id);\r\n\r\n export default (state=initialState,action) => {\r\n     let pl = action.payload;\r\n     switch(action.type){\r\n         case GET_GROUP_DETAILS:\r\n             return {\r\n                 ...state,\r\n                 group_details: pl\r\n             }\r\n\r\n          case JOINED_GROUP:\r\n              return {\r\n                  ...state,\r\n                  joined: pl\r\n              } \r\n              \r\n          case TOGGLE_JOIN_GROUP:\r\n             return {\r\n                 ...state,\r\n                 joined: pl\r\n             }     \r\n\r\n          case UPDATE_GROUP:\r\n             return {\r\n                 ...state,\r\n                 group_details: update(state.group_details,pl)\r\n             } \r\n             \r\n          case GET_GROUP_MEMBERS:\r\n              return {\r\n                  ...state,\r\n                  members: pl\r\n              }   \r\n\r\n          case 'REMOVE_MEMBER':\r\n              return {\r\n                  ...state,\r\n                  members: remMember(state.members,pl)\r\n              } \r\n              \r\n           case 'GET_MUTUAL_AND_NEWEST_MEMBERS':\r\n               return {\r\n                   ...state,\r\n                   mutualMembers: pl.mutualMembers,\r\n                   newestMembers: pl.newestMembers\r\n               } \r\n               \r\n           case 'GET_USER_GROUPS':\r\n               return {\r\n                   ...state,\r\n                   userGroups: pl\r\n               }    \r\n           \r\n           case 'LEFT_GROUP':\r\n               return {\r\n                   ...state,\r\n                   userGroups: leftGroup(state.userGroups,pl)\r\n               }    \r\n\r\n           case 'GET_USERS_TO_INVITE':\r\n               return {\r\n                   ...state,\r\n                   usersToInvite: pl\r\n               }    \r\n\r\n           case 'GET_USERS_TO_MAKE_ADMIN':\r\n               return {\r\n                   ...state,\r\n                   usersToMakeAdmin: pl\r\n               }   \r\n         \r\n         default: \r\n            return state;      \r\n     }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}