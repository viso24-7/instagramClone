{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\comments\\\\type-image.js\";\nimport React, { Component, Fragment } from 'react';\nimport ImageTheatre from '../../../others/imageTheater/ImageTheater';\nimport { string } from 'prop-types';\nexport default class CommentTypeImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openImage: false\n    };\n\n    this.toggleImage = () => this.setState({\n      openImage: !this.state.openImage\n    });\n  }\n\n  render() {\n    let {\n      openImage\n    } = this.state;\n    let {\n      commentSrc\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"comment_img\",\n      onClick: () => this.setState({\n        openImage: true\n      }),\n      src: `/comments/${commentSrc}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }), openImage && /*#__PURE__*/React.createElement(ImageTheatre, {\n      imgSrc: `/comments/${commentSrc}`,\n      showInfo: false,\n      back: () => this.setState({\n        openImage: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\nCommentTypeImage.propTypes = {\n  commentSrc: string.isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/comment/comments/type-image.js"],"names":["React","Component","Fragment","ImageTheatre","string","CommentTypeImage","state","openImage","toggleImage","setState","render","commentSrc","props","propTypes","isRequired"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,eAAe,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAwC;AAAA;AAAA;AAAA,SACpDK,KADoD,GAC5C;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAD4C;;AAAA,SAGpDC,WAHoD,GAGtC,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,KAAd,CAHgC;AAAA;;AAKpDG,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACH,MAAAA;AAAD,QAAc,KAAKD,KAAvB;AACA,QAAI;AAACK,MAAAA;AAAD,QAAe,KAAKC,KAAxB;AAEA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,MAAM,KAAKH,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd,CAA5C;AAAgF,MAAA,GAAG,EAAG,aAAYI,UAAW,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGKJ,SAAS,iBACR,oBAAC,YAAD;AACG,MAAA,MAAM,EAAG,aAAYI,UAAW,EADnC;AAEG,MAAA,QAAQ,EAAE,KAFb;AAGG,MAAA,IAAI,EAAE,MAAM,KAAKF,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN,CADJ;AAaH;;AAtBmD;AAyBvDF,gBAAgB,CAACQ,SAAjB,GAA6B;AACzBF,EAAAA,UAAU,EAAEP,MAAM,CAACU;AADM,CAA7B","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import ImageTheatre from '../../../others/imageTheater/ImageTheater';\r\n import {string} from 'prop-types';\r\n\r\n export default class CommentTypeImage extends Component{\r\n    state = { openImage: false }\r\n\r\n    toggleImage = () => this.setState({ openImage: !this.state.openImage})\r\n\r\n    render(){\r\n        let {openImage} = this.state;\r\n        let {commentSrc} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <img className=\"comment_img\" onClick={() => this.setState({ openImage: true })} src={`/comments/${commentSrc}`} />\r\n\r\n                {openImage && (\r\n                  <ImageTheatre\r\n                     imgSrc={`/comments/${commentSrc}`}\r\n                     showInfo={false}\r\n                     back={() => this.setState({ openImage: false })}\r\n                  />\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n }\r\n\r\n CommentTypeImage.propTypes = {\r\n     commentSrc: string.isRequired\r\n }"]},"metadata":{},"sourceType":"module"}