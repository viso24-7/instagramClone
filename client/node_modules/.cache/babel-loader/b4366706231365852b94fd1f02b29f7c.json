{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\post\\\\post\\\\post-middle\\\\post-image.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PostTags from './post-tags';\nimport ToTags from '../../../hashtag/toTags/toTags';\nimport ImageTheatre from '../../../others/imageTheater/ImageTheatre';\nimport { number, string, shape } from 'prop-types';\nexport default class PostImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showImage: false\n    };\n\n    this._toggle = what => this.setState({\n      showImage: !this.state[what]\n    });\n  }\n\n  render() {\n    let {\n      showImage\n    } = this.state;\n    let {\n      postDetails: {\n        post_id,\n        post_time,\n        description,\n        imgSrc,\n        filter,\n        username,\n        tags_count\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_actual\",\n      spellcheck: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p_abt\",\n      style: {\n        marginBottom: description ? '10px' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(ToTags, {\n      str: `${description}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    }))), /*#__PURE__*/React.createElement(\"img\", {\n      src: `/posts/${imgSrc}`,\n      className: classNames('p_img', filter),\n      onClick: () => this._toggle('showImage'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(PostTags, {\n      post_id: post_id,\n      tags_count: tags_count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }\n    }))), showImage && /*#__PURE__*/React.createElement(ImageTheatre, {\n      imgSrc: `/posts/${imgSrc}`,\n      filter: filter,\n      username: username,\n      time: post_time,\n      link: `/post/${post_id}`,\n      back: () => this._toggle('showImage'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\nPostImage.propTypes = {\n  postDetails: shape({\n    post_id: number.isRequired,\n    post_time: string.isRequired,\n    description: string.isRequired,\n    imgSrc: string.isRequired,\n    filter: string.isRequired,\n    tags_count: number.isRequired,\n    username: string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/post/post/post-middle/post-image.js"],"names":["React","Component","classNames","PostTags","ToTags","ImageTheatre","number","string","shape","PostImage","state","showImage","_toggle","what","setState","render","postDetails","post_id","post_time","description","imgSrc","filter","username","tags_count","props","marginBottom","propTypes","isRequired"],"mappings":"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","sourcesContent":[" import React,{Component} from 'react';\r\n import classNames from 'classnames';\r\n import PostTags from './post-tags';\r\n import ToTags from '../../../hashtag/toTags/toTags';\r\n import ImageTheatre from '../../../others/imageTheater/ImageTheatre';\r\n import {number,string,shape} from 'prop-types';\r\n\r\n export default class PostImage extends Component {\r\n     state = { showImage: false }\r\n\r\n     _toggle = what => this.setState({ showImage: !this.state[what]})\r\n\r\n     render(){\r\n         let {showImage} = this.state;\r\n         let {postDetails:{post_id,post_time,description,imgSrc,filter,username,tags_count}} = this.props;\r\n\r\n         return (\r\n            <div>\r\n                <div className=\"p_o\">\r\n                    <div className=\"p_actual\" spellcheck=\"false\">\r\n                       <div className=\"p_abt\" style={{ marginBottom: description ? '10px' : null}}>\r\n                           <p>\r\n                               <ToTags str={`${description}`} />\r\n                           </p>\r\n                       </div>\r\n\r\n                       <img src={`/posts/${imgSrc}`} className={classNames('p_img',filter)} onClick={() => this._toggle('showImage')} />\r\n                       <PostTags post_id={post_id} tags_count={tags_count} />\r\n                    </div>\r\n                </div>\r\n\r\n                {showImage && (\r\n                    <ImageTheatre\r\n                       imgSrc={`/posts/${imgSrc}`}\r\n                       filter={filter}\r\n                       username={username}\r\n                       time={post_time}\r\n                       link={`/post/${post_id}`}\r\n                       back={() => this._toggle('showImage')}\r\n                    />\r\n                )}\r\n            </div>\r\n         )\r\n     }\r\n }  \r\n\r\n PostImage.propTypes = {\r\n     postDetails: shape({\r\n         post_id: number.isRequired,\r\n         post_time: string.isRequired,\r\n         description: string.isRequired,\r\n         imgSrc: string.isRequired,\r\n         filter: string.isRequired,\r\n         tags_count: number.isRequired,\r\n         username: string.isRequired\r\n        }).isRequired\r\n }"]},"metadata":{},"sourceType":"module"}