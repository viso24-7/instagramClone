{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\src\\\\components\\\\others\\\\search\\\\map-search\\\\group-search.js\";\nimport React, { Fragment } from 'react';\nimport { humanReadable } from '../../../../utils/utils';\nimport AppLink from '../../../others/link/link';\nimport { number, string, func } from 'prop-types';\n\nconst GroupSearch = props => {\n  let {\n    group_id,\n    name,\n    membersCount,\n    mutualMembersCount,\n    clicked\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"s_d_peo\",\n    onClick: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppLink, {\n    url: `/group/${group_id}`,\n    className: \"s_d_p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/groups/${group_id}/avatar.jpg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"s_d_c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"s_d_username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 24\n    }\n  }, mutualMembersCount === 0 ? humanReadable(membersCount, 'member') : humanReadable(mutualMembersCount, 'mutual member'))))));\n};\n\nGroupSearch.propTypes = {\n  group_id: number.isRequired,\n  name: string.isRequired,\n  membersCount: number.isRequired,\n  mutualMembersCount: number.isRequired,\n  clicked: func.isRequired\n};\nexport default GroupSearch;","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/others/search/map-search/group-search.js"],"names":["React","Fragment","humanReadable","AppLink","number","string","func","GroupSearch","props","group_id","name","membersCount","mutualMembersCount","clicked","propTypes","isRequired"],"mappings":";AAAC,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,aAAR,QAA4B,yBAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,IAAtB,QAAiC,YAAjC;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,MAAI;AAACC,IAAAA,QAAD;AAAUC,IAAAA,IAAV;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA,kBAA5B;AAA+CC,IAAAA;AAA/C,MAA0DL,KAA9D;AAEA,sBACG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEK,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAG,UAASJ,QAAS,EAAjC;AAAoC,IAAA,SAAS,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAG,WAAUA,QAAS,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,IAAhC,CADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,kBAAkB,KAAK,CAAvB,GAA2BV,aAAa,CAACS,YAAD,EAAc,QAAd,CAAxC,GAAkET,aAAa,CAACU,kBAAD,EAAoB,eAApB,CAAtF,CAFH,CAFJ,CADJ,CADJ,CADH;AAaH,CAhBD;;AAkBAL,WAAW,CAACO,SAAZ,GAAwB;AACpBL,EAAAA,QAAQ,EAAEL,MAAM,CAACW,UADG;AAEpBL,EAAAA,IAAI,EAAEL,MAAM,CAACU,UAFO;AAGpBJ,EAAAA,YAAY,EAAEP,MAAM,CAACW,UAHD;AAIpBH,EAAAA,kBAAkB,EAAER,MAAM,CAACW,UAJP;AAKpBF,EAAAA,OAAO,EAAEP,IAAI,CAACS;AALM,CAAxB;AAQA,eAAeR,WAAf","sourcesContent":[" import React,{Fragment} from 'react';\r\n import {humanReadable} from '../../../../utils/utils';\r\n import AppLink from '../../../others/link/link';\r\n import {number,string,func} from 'prop-types';\r\n\r\n const GroupSearch = props => {\r\n     let {group_id,name,membersCount,mutualMembersCount,clicked} = props;\r\n\r\n     return (\r\n        <div className=\"s_d_peo\" onClick={clicked}>\r\n            <AppLink url={`/group/${group_id}`} className=\"s_d_p\">\r\n                <Fragment>\r\n                    <img src={`/groups/${group_id}/avatar.jpg`} />\r\n                    <div className=\"s_d_c\">\r\n                       <span className=\"s_d_username\">{name}</span>\r\n                       <span>{mutualMembersCount === 0 ? humanReadable(membersCount,'member') : humanReadable(mutualMembersCount,'mutual member')}</span>\r\n                    </div>\r\n                </Fragment>\r\n            </AppLink>\r\n        </div>\r\n     )\r\n }\r\n\r\n GroupSearch.propTypes = {\r\n     group_id: number.isRequired,\r\n     name: string.isRequired,\r\n     membersCount: number.isRequired,\r\n     mutualMembersCount: number.isRequired,\r\n     clicked: func.isRequired\r\n }\r\n\r\n export default GroupSearch;"]},"metadata":{},"sourceType":"module"}