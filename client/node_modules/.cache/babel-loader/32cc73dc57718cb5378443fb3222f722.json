{"ast":null,"code":"import _classCallCheck from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\JavascriptProjects3\\\\instagramClone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{connect}from'react-redux';import{FadeIn}from'animate-components';import{getUnreadNotifications}from'../../actions/notification';import{getUnreadMessages}from'../../actions/message';import{forGroup,Me,cLoading}from'../../utils/utils';import{isAdmin}from'../../utils/admin-utils';import Title from'../others/title';import IsLoading from'../others/isLoading';import Nothing from'../others/nothing';import GroupNav from'./group-nav';import GroupBanner from'./group-banner/banner';import GroupRoutes from'./group-routes';var Group=/*#__PURE__*/function(_Component){_inherits(Group,_Component);var _super=_createSuper(Group);function Group(){var _this;_classCallCheck(this,Group);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loading:true};_this.group_url=function(){return _this.props.history.push('/error/group');};_this.componentWillReceiveProps=function(_ref){var dispatch=_ref.dispatch,match=_ref.match;if(_this.props.match.url!==match.url){forGroup({group_id:match.params.group_id,dispatch:dispatch,invalidGroup:_this.group_url});}_this.setState({loading:false});};_this.componentDidMount=function(){var _this$props=_this.props,group_id=_this$props.match.params.group_id,dispatch=_this$props.dispatch;forGroup({group_id:group_id,dispatch:dispatch,invalidGroup:_this.group_url});dispatch(getUnreadNotifications());dispatch(getUnreadMessages());};return _this;}_createClass(Group,[{key:\"render\",value:function render(){var loading=this.state.loading;var _this$props2=this.props,page=_this$props2.page,_this$props2$group_de=_this$props2.group_details,name=_this$props2$group_de.name,admin=_this$props2$group_de.admin,group_type=_this$props2$group_de.group_type,joined=_this$props2.joined,_this$props2$match=_this$props2.match,url=_this$props2$match.url,group_id=_this$props2$match.params.group_id;var showContent=Me(admin)||group_type==='public'||joined||isAdmin();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Title,{value:name,desc:\"View \".concat(name,\"'s posts,members and much more..\")}),/*#__PURE__*/React.createElement(\"div\",{className:\"groupDeatils\",\"data-group-id\":group_id,\"data-group-name\":name},/*#__PURE__*/React.createElement(IsLoading,{loading:loading,when:page}),/*#__PURE__*/React.createElement(FadeIn,{duration:\"300ms\",className:cLoading(loading)},/*#__PURE__*/React.createElement(GroupBanner,null),showContent?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(GroupNav,{url:url,admin:admin}),/*#__PURE__*/React.createElement(GroupRoutes,{url:url,group_id:group_id})):/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:85}},/*#__PURE__*/React.createElement(Nothing,{message:\"\".concat(name,\" group is private.Join to connect\")})))));}}]);return Group;}(Component);var mapStateToProps=function mapStateToProps(state){return{group_details:state.Group.group_details,joined:state.Group.joined};};export default connect(mapStateToProps)(Group);export{Group as PureGroup};","map":{"version":3,"sources":["C:/JavascriptProjects3/instagramClone/client/src/components/group/group.js"],"names":["React","Component","Fragment","connect","FadeIn","getUnreadNotifications","getUnreadMessages","forGroup","Me","cLoading","isAdmin","Title","IsLoading","Nothing","GroupNav","GroupBanner","GroupRoutes","Group","state","loading","group_url","props","history","push","componentWillReceiveProps","dispatch","match","url","group_id","params","invalidGroup","setState","componentDidMount","page","group_details","name","admin","group_type","joined","showContent","marginTop","mapStateToProps","PureGroup"],"mappings":"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","sourcesContent":[" import React,{Component,Fragment} from 'react';\r\n import {connect} from 'react-redux';\r\n import {FadeIn} from 'animate-components';\r\n import {getUnreadNotifications} from '../../actions/notification';\r\n import {getUnreadMessages} from '../../actions/message';\r\n import {forGroup,Me,cLoading} from '../../utils/utils';\r\n import {isAdmin} from '../../utils/admin-utils';\r\n import Title from '../others/title';\r\n import IsLoading from '../others/isLoading';\r\n import Nothing from '../others/nothing';\r\n import GroupNav from './group-nav';\r\n import GroupBanner from './group-banner/banner';\r\n import GroupRoutes from './group-routes';\r\n\r\n class Group extends Component {\r\n    state = {loading: true }\r\n\r\n    group_url = () => this.props.history.push('/error/group');\r\n\r\n    //A match object contains information about how a <Route path> matched the URL.A match objects contain the following\r\n    // properties: params,isExact,url,path.To access group_id props used on our cases(in <Route /> )as we put group_id\r\n    // in some routes make available accross this.props.match.params.id\r\n    componentWillReceiveProps = ({dispatch,match}) => {\r\n        if(this.props.match.url !== match.url){\r\n            forGroup({\r\n                group_id: match.params.group_id,\r\n                dispatch,\r\n                invalidGroup: this.group_url\r\n            })\r\n        }\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {match:{params: {group_id}},dispatch} = this.props;\r\n        forGroup({\r\n            group_id,\r\n            dispatch,\r\n            invalidGroup: this.group_url\r\n        })\r\n        dispatch(getUnreadNotifications())\r\n        dispatch(getUnreadMessages())\r\n    }\r\n\r\n    render(){\r\n       let {loading} = this.state;\r\n       let {page,group_details:{name,admin,group_type},joined,match:{url,params:{group_id}}} = this.props;\r\n       let showContent = Me(admin) || group_type === 'public' || joined || isAdmin()\r\n\r\n       return (\r\n           <div>\r\n               <Title value={name} desc={`View ${name}'s posts,members and much more..`} />\r\n\r\n               <div className=\"groupDeatils\" data-group-id={group_id} data-group-name={name}>\r\n                   <IsLoading loading={loading} when={page} />\r\n\r\n                   <FadeIn duration=\"300ms\" className={cLoading(loading)}>\r\n                      <GroupBanner />\r\n                      {showContent ? (\r\n                          <Fragment>\r\n                              <GroupNav url={url} admin={admin} />\r\n                              <GroupRoutes url={url} group_id={group_id} />\r\n                          </Fragment>\r\n                      ) : (\r\n                          <div style={{ marginTop: 85 }}>\r\n                              <Nothing message={`${name} group is private.Join to connect`} />\r\n                          </div>\r\n                      )}\r\n                   </FadeIn>\r\n               </div>\r\n           </div>\r\n       )\r\n    } \r\n } \r\n\r\n const mapStateToProps = state => ({\r\n     group_details: state.Group.group_details,\r\n     joined: state.Group.joined\r\n })\r\n\r\n export default connect(mapStateToProps)(Group);\r\n export {Group as PureGroup}"]},"metadata":{},"sourceType":"module"}